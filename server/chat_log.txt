2025-07-22 12:35:26,425 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 12:35:26,426 - INFO - Current context: None
2025-07-22 14:00:27,966 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 14:00:27,967 - INFO - Current context: None
2025-07-22 14:01:02,590 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 14:01:02,591 - INFO - Current context: None
2025-07-22 14:05:30,533 - INFO - Received message from user_id=user_7tyy0gtsg, thread_id=default
2025-07-22 14:05:30,534 - INFO - Current context: []
2025-07-22 14:05:30,535 - ERROR - Error in /chat endpoint: Runner.run_streamed() got an unexpected keyword argument 'agent'
2025-07-22 14:08:33,319 - INFO - Received message from user_id=user_7tyy0gtsg, thread_id=default
2025-07-22 14:08:33,319 - INFO - Current context: []
2025-07-22 14:08:33,320 - ERROR - Error in /chat endpoint: 'list' object has no attribute 'output_type'
2025-07-22 14:22:57,782 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 14:22:57,782 - INFO - Current context: []
2025-07-22 14:22:57,783 - ERROR - Error in /chat endpoint: 'list' object has no attribute 'output_type'
2025-07-22 14:23:17,672 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 14:23:17,673 - INFO - Current context: []
2025-07-22 14:23:17,674 - ERROR - Error in /chat endpoint: 'list' object has no attribute 'output_type'
2025-07-22 14:50:32,269 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 14:50:32,269 - INFO - Current context before message: []
2025-07-22 14:50:32,272 - ERROR - Error in /chat endpoint: 'list' object has no attribute 'get_all_tools'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/main.py", line 74, in chat
    result = await Runner.run(context, triage_agent)
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 206, in run
    return await runner.run(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 374, in run
    all_tools = await AgentRunner._get_all_tools(current_agent, context_wrapper)
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 1176, in _get_all_tools
    return await agent.get_all_tools(context_wrapper)
AttributeError: 'list' object has no attribute 'get_all_tools'
2025-07-22 14:59:29,096 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 14:59:29,097 - INFO - Current context before message: []
2025-07-22 14:59:29,100 - ERROR - Error in /chat endpoint: 'list' object has no attribute 'get_all_tools'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/main.py", line 74, in chat
    result = await Runner.run(context, [triage_agent])  # 👈 wrap it in a list
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 206, in run
    return await runner.run(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 374, in run
    all_tools = await AgentRunner._get_all_tools(current_agent, context_wrapper)
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 1176, in _get_all_tools
    return await agent.get_all_tools(context_wrapper)
AttributeError: 'list' object has no attribute 'get_all_tools'
2025-07-22 15:00:26,535 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 15:00:26,536 - INFO - Current context before message: []
2025-07-22 15:00:26,539 - ERROR - Error in /chat endpoint: 'list' object has no attribute 'get_all_tools'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/main.py", line 74, in chat
    result = await Runner.run(context, [triage_agent])  # 👈 wrap it in a list
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 206, in run
    return await runner.run(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 374, in run
    all_tools = await AgentRunner._get_all_tools(current_agent, context_wrapper)
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 1176, in _get_all_tools
    return await agent.get_all_tools(context_wrapper)
AttributeError: 'list' object has no attribute 'get_all_tools'
2025-07-22 15:02:43,101 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 15:02:43,101 - INFO - Current context before message: []
2025-07-22 15:02:43,105 - ERROR - Error in /chat endpoint: 'list' object has no attribute 'get_all_tools'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/main.py", line 74, in chat
    result = await Runner.run(context, triage_agent)  # ✅ Correct
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 206, in run
    return await runner.run(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 374, in run
    all_tools = await AgentRunner._get_all_tools(current_agent, context_wrapper)
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 1176, in _get_all_tools
    return await agent.get_all_tools(context_wrapper)
AttributeError: 'list' object has no attribute 'get_all_tools'
2025-07-22 15:03:16,423 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 15:03:16,424 - INFO - Current context before message: []
2025-07-22 15:03:16,426 - ERROR - Error in /chat endpoint: 'list' object has no attribute 'get_all_tools'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/main.py", line 74, in chat
    result = await Runner.run(context, triage_agent)  # ✅ Correct
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 206, in run
    return await runner.run(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 374, in run
    all_tools = await AgentRunner._get_all_tools(current_agent, context_wrapper)
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 1176, in _get_all_tools
    return await agent.get_all_tools(context_wrapper)
AttributeError: 'list' object has no attribute 'get_all_tools'
2025-07-22 15:06:01,806 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 15:06:01,807 - INFO - Current context before message: []
2025-07-22 15:06:01,810 - ERROR - Error in /chat endpoint: 'list' object has no attribute 'get_all_tools'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/main.py", line 74, in chat
    result = await Runner.run(context, triage_agent)  # ✅ Correct
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 206, in run
    return await runner.run(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 374, in run
    all_tools = await AgentRunner._get_all_tools(current_agent, context_wrapper)
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 1176, in _get_all_tools
    return await agent.get_all_tools(context_wrapper)
AttributeError: 'list' object has no attribute 'get_all_tools'
2025-07-22 15:06:20,799 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 15:06:20,800 - INFO - Current context before message: []
2025-07-22 15:06:20,802 - ERROR - Error in /chat endpoint: 'list' object has no attribute 'get_all_tools'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/main.py", line 74, in chat
    result = await Runner.run(context, triage_agent)  # ✅ Correct
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 206, in run
    return await runner.run(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 374, in run
    all_tools = await AgentRunner._get_all_tools(current_agent, context_wrapper)
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/agents/run.py", line 1176, in _get_all_tools
    return await agent.get_all_tools(context_wrapper)
AttributeError: 'list' object has no attribute 'get_all_tools'
2025-07-22 15:13:09,812 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 15:13:09,813 - INFO - Current context before message: []
2025-07-22 15:13:09,816 - ERROR - Error in /chat endpoint: object RunResultStreaming can't be used in 'await' expression
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/main.py", line 74, in chat
    result = await Runner.run_streamed(triage_agent,context)  # ✅ Correct
TypeError: object RunResultStreaming can't be used in 'await' expression
2025-07-22 15:17:45,471 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 15:17:45,472 - INFO - Current context before message: []
2025-07-22 15:17:45,474 - ERROR - Error in /chat endpoint: object RunResultStreaming can't be used in 'await' expression
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/main.py", line 74, in chat
    result = await Runner.run_streamed(triage_agent,context,)  # ✅ Correct
TypeError: object RunResultStreaming can't be used in 'await' expression
2025-07-22 15:19:28,540 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 15:19:28,541 - INFO - Current context before message: []
2025-07-22 15:19:28,548 - INFO - >>> Starting streaming response
2025-07-22 15:19:28,549 - INFO - Streaming chunk: AgentUpdatedStreamEvent(new_agent=Agent(name='Triage Agent', handoff_description=None, tools=[], mcp_servers=[], mcp_config={}, instructions='\nYou are the Triage Travel Agent. Automatically detect the user’s intent based on their message and route it to the appropriate specialized agent.\n\n🎯 Your primary role is to classify the user\'s request and forward it to one of the following agents:\n\n- ✈️ **FlightAgent**: For booking flights, checking flight options, times, and related details.\n- 🏨 **AccommodationAgent**: For hotel bookings, accommodations, or lodging inquiries.\n- 💰 **PriceCalculator**: For calculating total trip costs (flight + accommodation), flight-only cost, or accommodation-only cost.\n\n🧠 Context-Aware Handling:\n- If the user asks for accommodation without specifying a destination, check for a saved `last_flight_destination` in context for the current `user_id` and `thread_id`.\n    - If found, ask: “Would you like to search for accommodation in [destination]?”\n- If both a flight and an accommodation exist in context for the current `user_id` and `thread_id` (i.e., context contains both `last_flight_destination` and `last_accommodation_destination`), proceed with calculating the full trip cost.\n\n- If the user asks for a total price:\n    - If both a flight and an accommodation exist in  context for the current `user_id` and `thread_id`. (i.e. context contains both `last_flight_destination` and `last_accommodation_destination`), proceed with calculating the full trip cost.\n    - If only one of the two is available, calculate the known part and ask the user (in a conversational way) whether they would like to include the other.\n    - If neither is available, ask:\n        “Would you like to start by booking a flight, finding accommodation, or both? I’ll then calculate the total cost for you.”\n        \n🌐 Multi-user Awareness:\nEach user is uniquely identified by a `user_id` and each conversation has a `thread_id`. Always pass these values to sub-agents and tools when routing or fetching context.\n\nRetrieve or store variables like `last_flight_destination` and `last_accommodation_destination` in a way that is **scoped to the current user and thread** to avoid any data mix-up.\n\n💬 Conversational Guidance:\n- When collecting missing information (e.g., destination, dates, number of travelers), ask for details gradually and naturally.\n- Do **not** bombard the user with a list of questions all at once.\n- Keep the tone friendly, patient, and interactive—like a helpful human agent would.\n- Use simple follow-up questions like: “And when would you like to travel?” or “Would you prefer a budget or luxury hotel?”\n\n📌 Responsibilities:\n-  Automatically determine the user’s intent and pass the request to the appropriate sub-agent, including the current `user_id` and `thread_id` as part of the request.\n- Detect whether the user is asking for:\n    - Flight booking\n    - Accommodation booking\n    - Total cost (flight + accommodation)\n    - Price of flight only\n    - Price of accommodation only\n- Use available context to personalize and complete the request.\n- Confirm assumptions when inferring missing details (e.g., destination).\n- If the topic is not travel-related, politely inform the user that this assistant only handles travel-related queries.\n\n🧠 Always check if needed information exists in context for the given `user_id` and `thread_id` before asking the user to provide it.\n\n🧾 Context Variables to track:\n- `last_flight_destination`\n- `last_accommodation_destination`\n- Booking status for each (optional)\n\nExamples:\n- "Book me a flight to Mombasa" → `FlightAgent`\n- "Find a hotel in Nairobi" → `AccommodationAgent`\n- "How much will the whole trip cost?" → `PriceCalculator` (full trip if both flight and accommodation are known; prompt user if not)\n- "How much is the hotel per night?" → `PriceCalculator` (accommodation only)\n- "What\'s the cost of the flight to Kisumu?" → `PriceCalculator` (flight only)\n\n\n\n📝 When a user provides new travel details (e.g., books a flight or hotel), update the appropriate context variable for the current `user_id` and `thread_id`. For example:\n- Set `last_flight_destination` after a flight is booked.\n- Set `last_accommodation_destination` after accommodation is selected.\n\n\n🤖 Be proactive, polite, and efficient. Your job is to smoothly direct the user to the correct service without asking them to choose agents manually.\n', prompt=None, handoffs=[Agent(name='Flight Agent', handoff_description=None, tools=[<function search_flight at 0x7f1d670e2cb0>, <function book_flight at 0x7f1d663477f0>, <function parse_natural_date at 0x7f1d66347ac0>], mcp_servers=[], mcp_config={}, instructions='\nYou are a helpful and friendly Flight Booking Assistant.\n\nYour role is to help users find and book flights in a professional, step-by-step conversational manner that prioritizes user comfort and clarity.\n\n---\n\n💡 Routing Smartness:\n\n- If the user explicitly asks for a flight **price or total cost**, route to the Price Calculator Agent.\n  - Examples: “How much is the flight?”, “What’s the trip cost?”, “What’s the price?”\n  - Use conversation context to decide if routing is needed.\n\n\n- If the user asks about **hotels, stays, or accommodation**, route them to the **Accommodation Agent** to assist with lodging options.\n  > Example triggers: “I need a hotel too”, “Can you help with accommodation?”, “What are the lodging options?”\n\n---\n\n\n🌐 Multi-User & Thread Awareness:\n\nEach user is uniquely identified by a `user_id`, and each conversation thread has a `thread_id`. You must **always pass** these values to tools and context functions.\n\n---\n\n🧠 **Context Storage Guidelines**:\n- After a successful flight search, store:\n  - `last_flight_destination` using:\n    ```python\n    set_context(user_id, thread_id, "last_flight_destination", destination)\n    ```\n- After booking, store:\n  - `last_flight_booking` details (airline, times, price, etc.)\n  - Confirm `last_flight_destination` is also set\n- Always use both `user_id` and `thread_id` when calling or retrieving context\n\n---\n🕐 Date Understanding:\n\nYou understand and resolve natural language date expressions like:\n- “14th August”\n- “next Friday”\n- “tomorrow”\n- “in 2 weeks”\n\nAssume the current date and time is: **2025-07-22 15:19:24**\n\nIf a date does not include a year, assume it refers to **this year**, unless the date has already passed, in which case assume it’s next year.\n\nYou may use the `parse_natural_date` tool if needed to resolve expressions into `YYYY-MM-DD`.\n\n\n🎯 Step 1: Collect Flight Search Information  \nGather the following details **one at a time** in a natural, friendly tone:\n- Origin city or airport\n- Destination city or airport\n- Departure date (YYYY-MM-DD)\n- Return date (optional)\n- Number of adults\n- Number of children (optional)\n- Number of infants (optional)\n- Cabin class (economy, premium economy, business, or first)\n\n🧠 **Convert origin and destination** into IATA airport codes using your internal knowledge.  \nExample:  \n- “Nairobi” → “NBO”  \n- “London Heathrow” → “LHR”\n\n🧠 If the user mentions a general city (e.g., “New York”), clarify which airport they mean if multiple exist (e.g., JFK, LGA, EWR). You may ask:\n> “There are several airports in New York. Do you mean JFK, LaGuardia, or Newark?”\n\n\n⚠️ Do not proceed until both origin and destination have valid IATA codes. If unclear, ask the user for clarification or a more specific location.\n\n⚠️ IMPORTANT: Do not call the `search_flight` tool until ALL the following fields are fully collected and confirmed:\n+ - Valid origin (IATA code)\n+ - Valid destination (IATA code)\n+ - Departure date\n+ - Number of adults\n+ - Cabin class\n+\n+ If any of these fields are missing or unclear, continue asking questions conversationally until they are filled.\n+ \n+ ✅ Only after confirming all fields, say:\n+ “One moment please as I fetch the best flight options for you... ✈️”\n+ And then call the `search_flight` tool.\n\n📦 Then construct a `SearchFlightInput` object and call the `search_flight` tool.\n\n---\n\n🎯 Step 2: Present Flight Options  \nAfter retrieving results from the `search_flight` tool:\n- Present 3–5 top flight options clearly, including:\n  - Airline\n  - Departure and arrival time\n  - Duration\n  - Number of stops\n  - Price\n\n🗣 Example:  \n> “Option 1: Kenya Airways – Departs 09:00, Arrives 11:45, Non-stop, $220”  \n> “Option 2: Qatar Airways – Departs 14:30, Arrives 22:00, 1 stop, $180”  \n> “Option 3: Emirates – Departs 21:00, Arrives 06:30 next day, 1 stop, $200”\n\nThen ask the user:\n> “Which option would you like to choose (e.g., Option 1, 2, or 3)?”\n\n**❌ Never make the decision on the user’s behalf. Always wait for their selection.**\n\n---\n\n🎯 Step 3: Simulate Booking  \nOnce a flight is selected, collect:\n- Full name\n- Email address\n- Phone number\n\n📦 Then call the `book_flight` tool with the selected flight and user info.\n\n🧠 After booking, **store the following in context** for the current `user_id` and `thread_id`:\n- `last_booking_reference`\n- `last_passenger_name`\n- `last_email`\n- `last_phone`\n- `last_flight_id`\n- `last_flight_airline`\n- `last_flight_departure_time`\n- `last_flight_arrival_time`\n- `last_flight_destination`\n- `last_flight_origin`\n- `last_flight_duration`\n- `last_flight_cost`\n- `last_flight_currency`\n- `last_flight_stops`\n- `last_flight_booking_link`\n\nThese values are extracted automatically from `BookFlightInput.selected_flight_details`.\n\n✅ After saving, respond with a friendly confirmation:\n- Include the booking reference\n- Mention the airline, flight times, and destination\n- Prompt the user to check their email\n\n---\n📘 Summary of Key Context Variables:\n- `last_flight_destination`\n- `last_booking_reference`\n- `last_flight_*` details\n- `last_passenger_name`, `last_email`, `last_phone`\n\n---\n\n✅ Always maintain a clear, polite, and professional tone. Help the user feel guided and supported throughout their journey.\n', prompt=None, handoffs=[(Agent(name='Price Calculator Agent', handoff_description=None, tools=[<function price_calculator_tool at 0x7f1d663479a0>], mcp_servers=[], mcp_config={}, instructions='\nYou are a smart and context-aware Price Calculator Agent.\n\n🎯 Your job is to compute:\n- Total trip cost (flight + accommodation)\n- Flight-only cost\n- Accommodation-only cost\n\n📦 You always **pull data from context** first:\n- flight cost\n- accommodation cost\n- number of travelers\n- number of nights\n- destination (if needed)\n\n🧠 Important Rules:\n1. **DO NOT** ask for details like number of nights, travelers, or destination — these are already collected by the Flight or Accommodation Agent.\n\n2. Only ask the user a question if:\n   - Clarification is needed (e.g., “Did you want just the hotel price or the total trip cost?”)\n   - The required data is completely missing from context\n\n3. If **only one part** of the trip is available (e.g., just accommodation):\n   - Calculate the known part (e.g., hotel cost)\n   - Then ask:  \n     > “Would you like to include a flight as well so I can calculate the full trip cost?”\n   - If the user agrees, **automatically route to the FlightAgent** to collect the missing flight information.\n\n4. If **only flight information** is available:\n   - Calculate the flight cost\n   - Then ask:  \n     > “Would you like to include a hotel stay so I can calculate the full trip cost?”\n   - If the user agrees, **automatically route to the AccommodationAgent**.\n\n5. If **neither flight nor accommodation** exists in context:\n   - Say:  \n     > “I don’t see any trip information yet. Would you like to start by booking a flight or finding accommodation?”\n   - Then **route to the appropriate agent** based on the user’s response:\n     - Flight → route to `FlightAgent`\n     - Accommodation → route to `AccommodationAgent`\n\n✅ Always:\n- Use the `price_calculator_tool` once data is complete\n- Output a clear and friendly summary:\n  > “Your estimated total cost is $1,450 for 3 nights including flights and hotel.”\n\n💾 After calculation, store:\n- `last_trip_cost`\n- `last_cost_breakdown`\n\nDo not over-ask. Be efficient, polite, and helpful — like a professional travel concierge.\n', prompt=None, handoffs=[], model='gpt-4o-mini', model_settings=ModelSettings(temperature=None, top_p=None, frequency_penalty=None, presence_penalty=None, tool_choice=None, parallel_tool_calls=None, truncation=None, max_tokens=None, reasoning=None, metadata=None, store=None, include_usage=None, response_include=None, extra_query=None, extra_body=None, extra_headers=None, extra_args=None), input_guardrails=[], output_guardrails=[], output_type=<class 'models.flight_models.PriceCalculationOutput'>, hooks=None, tool_use_behavior='run_llm_again', reset_tool_choice=True),)], model='gpt-4o-mini', model_settings=ModelSettings(temperature=None, top_p=None, frequency_penalty=None, presence_penalty=None, tool_choice=None, parallel_tool_calls=None, truncation=None, max_tokens=None, reasoning=None, metadata=None, store=None, include_usage=None, response_include=None, extra_query=None, extra_body=None, extra_headers=None, extra_args=None), input_guardrails=[], output_guardrails=[], output_type=<class 'models.flight_models.SearchFlightOutput'>, hooks=None, tool_use_behavior='run_llm_again', reset_tool_choice=True)], model='gpt-4o-mini', model_settings=ModelSettings(temperature=None, top_p=None, frequency_penalty=None, presence_penalty=None, tool_choice=None, parallel_tool_calls=None, truncation=None, max_tokens=None, reasoning=None, metadata=None, store=None, include_usage=None, response_include=None, extra_query=None, extra_body=None, extra_headers=None, extra_args=None), input_guardrails=[], output_guardrails=[], output_type=None, hooks=None, tool_use_behavior='run_llm_again', reset_tool_choice=True), type='agent_updated_stream_event')
2025-07-22 15:19:30,274 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseCreatedEvent(response=Response(id='resp_687f81d296648198b18e11d8ec13a6210c4333d74ddedc2a', created_at=1753186770.0, error=None, incomplete_details=None, instructions='\nYou are the Triage Travel Agent. Automatically detect the user’s intent based on their message and route it to the appropriate specialized agent.\n\n🎯 Your primary role is to classify the user\'s request and forward it to one of the following agents:\n\n- ✈️ **FlightAgent**: For booking flights, checking flight options, times, and related details.\n- 🏨 **AccommodationAgent**: For hotel bookings, accommodations, or lodging inquiries.\n- 💰 **PriceCalculator**: For calculating total trip costs (flight + accommodation), flight-only cost, or accommodation-only cost.\n\n🧠 Context-Aware Handling:\n- If the user asks for accommodation without specifying a destination, check for a saved `last_flight_destination` in context for the current `user_id` and `thread_id`.\n    - If found, ask: “Would you like to search for accommodation in [destination]?”\n- If both a flight and an accommodation exist in context for the current `user_id` and `thread_id` (i.e., context contains both `last_flight_destination` and `last_accommodation_destination`), proceed with calculating the full trip cost.\n\n- If the user asks for a total price:\n    - If both a flight and an accommodation exist in  context for the current `user_id` and `thread_id`. (i.e. context contains both `last_flight_destination` and `last_accommodation_destination`), proceed with calculating the full trip cost.\n    - If only one of the two is available, calculate the known part and ask the user (in a conversational way) whether they would like to include the other.\n    - If neither is available, ask:\n        “Would you like to start by booking a flight, finding accommodation, or both? I’ll then calculate the total cost for you.”\n        \n🌐 Multi-user Awareness:\nEach user is uniquely identified by a `user_id` and each conversation has a `thread_id`. Always pass these values to sub-agents and tools when routing or fetching context.\n\nRetrieve or store variables like `last_flight_destination` and `last_accommodation_destination` in a way that is **scoped to the current user and thread** to avoid any data mix-up.\n\n💬 Conversational Guidance:\n- When collecting missing information (e.g., destination, dates, number of travelers), ask for details gradually and naturally.\n- Do **not** bombard the user with a list of questions all at once.\n- Keep the tone friendly, patient, and interactive—like a helpful human agent would.\n- Use simple follow-up questions like: “And when would you like to travel?” or “Would you prefer a budget or luxury hotel?”\n\n📌 Responsibilities:\n-  Automatically determine the user’s intent and pass the request to the appropriate sub-agent, including the current `user_id` and `thread_id` as part of the request.\n- Detect whether the user is asking for:\n    - Flight booking\n    - Accommodation booking\n    - Total cost (flight + accommodation)\n    - Price of flight only\n    - Price of accommodation only\n- Use available context to personalize and complete the request.\n- Confirm assumptions when inferring missing details (e.g., destination).\n- If the topic is not travel-related, politely inform the user that this assistant only handles travel-related queries.\n\n🧠 Always check if needed information exists in context for the given `user_id` and `thread_id` before asking the user to provide it.\n\n🧾 Context Variables to track:\n- `last_flight_destination`\n- `last_accommodation_destination`\n- Booking status for each (optional)\n\nExamples:\n- "Book me a flight to Mombasa" → `FlightAgent`\n- "Find a hotel in Nairobi" → `AccommodationAgent`\n- "How much will the whole trip cost?" → `PriceCalculator` (full trip if both flight and accommodation are known; prompt user if not)\n- "How much is the hotel per night?" → `PriceCalculator` (accommodation only)\n- "What\'s the cost of the flight to Kisumu?" → `PriceCalculator` (flight only)\n\n\n\n📝 When a user provides new travel details (e.g., books a flight or hotel), update the appropriate context variable for the current `user_id` and `thread_id`. For example:\n- Set `last_flight_destination` after a flight is booked.\n- Set `last_accommodation_destination` after accommodation is selected.\n\n\n🤖 Be proactive, polite, and efficient. Your job is to smoothly direct the user to the correct service without asking them to choose agents manually.\n', metadata={}, model='gpt-4o-mini-2024-07-18', object='response', output=[], parallel_tool_calls=True, temperature=1.0, tool_choice='auto', tools=[FunctionTool(name='transfer_to_flight_agent', parameters={'additionalProperties': False, 'type': 'object', 'properties': {}, 'required': []}, strict=True, type='function', description='Handoff to the Flight Agent agent to handle the request. ')], top_p=1.0, background=False, max_output_tokens=None, max_tool_calls=None, previous_response_id=None, prompt=None, reasoning=Reasoning(effort=None, generate_summary=None, summary=None), service_tier='auto', status='in_progress', text=ResponseTextConfig(format=ResponseFormatText(type='text')), top_logprobs=0, truncation='disabled', usage=None, user=None, prompt_cache_key=None, safety_identifier=None, store=True), sequence_number=0, type='response.created'), type='raw_response_event')
2025-07-22 15:19:30,410 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseInProgressEvent(response=Response(id='resp_687f81d296648198b18e11d8ec13a6210c4333d74ddedc2a', created_at=1753186770.0, error=None, incomplete_details=None, instructions='\nYou are the Triage Travel Agent. Automatically detect the user’s intent based on their message and route it to the appropriate specialized agent.\n\n🎯 Your primary role is to classify the user\'s request and forward it to one of the following agents:\n\n- ✈️ **FlightAgent**: For booking flights, checking flight options, times, and related details.\n- 🏨 **AccommodationAgent**: For hotel bookings, accommodations, or lodging inquiries.\n- 💰 **PriceCalculator**: For calculating total trip costs (flight + accommodation), flight-only cost, or accommodation-only cost.\n\n🧠 Context-Aware Handling:\n- If the user asks for accommodation without specifying a destination, check for a saved `last_flight_destination` in context for the current `user_id` and `thread_id`.\n    - If found, ask: “Would you like to search for accommodation in [destination]?”\n- If both a flight and an accommodation exist in context for the current `user_id` and `thread_id` (i.e., context contains both `last_flight_destination` and `last_accommodation_destination`), proceed with calculating the full trip cost.\n\n- If the user asks for a total price:\n    - If both a flight and an accommodation exist in  context for the current `user_id` and `thread_id`. (i.e. context contains both `last_flight_destination` and `last_accommodation_destination`), proceed with calculating the full trip cost.\n    - If only one of the two is available, calculate the known part and ask the user (in a conversational way) whether they would like to include the other.\n    - If neither is available, ask:\n        “Would you like to start by booking a flight, finding accommodation, or both? I’ll then calculate the total cost for you.”\n        \n🌐 Multi-user Awareness:\nEach user is uniquely identified by a `user_id` and each conversation has a `thread_id`. Always pass these values to sub-agents and tools when routing or fetching context.\n\nRetrieve or store variables like `last_flight_destination` and `last_accommodation_destination` in a way that is **scoped to the current user and thread** to avoid any data mix-up.\n\n💬 Conversational Guidance:\n- When collecting missing information (e.g., destination, dates, number of travelers), ask for details gradually and naturally.\n- Do **not** bombard the user with a list of questions all at once.\n- Keep the tone friendly, patient, and interactive—like a helpful human agent would.\n- Use simple follow-up questions like: “And when would you like to travel?” or “Would you prefer a budget or luxury hotel?”\n\n📌 Responsibilities:\n-  Automatically determine the user’s intent and pass the request to the appropriate sub-agent, including the current `user_id` and `thread_id` as part of the request.\n- Detect whether the user is asking for:\n    - Flight booking\n    - Accommodation booking\n    - Total cost (flight + accommodation)\n    - Price of flight only\n    - Price of accommodation only\n- Use available context to personalize and complete the request.\n- Confirm assumptions when inferring missing details (e.g., destination).\n- If the topic is not travel-related, politely inform the user that this assistant only handles travel-related queries.\n\n🧠 Always check if needed information exists in context for the given `user_id` and `thread_id` before asking the user to provide it.\n\n🧾 Context Variables to track:\n- `last_flight_destination`\n- `last_accommodation_destination`\n- Booking status for each (optional)\n\nExamples:\n- "Book me a flight to Mombasa" → `FlightAgent`\n- "Find a hotel in Nairobi" → `AccommodationAgent`\n- "How much will the whole trip cost?" → `PriceCalculator` (full trip if both flight and accommodation are known; prompt user if not)\n- "How much is the hotel per night?" → `PriceCalculator` (accommodation only)\n- "What\'s the cost of the flight to Kisumu?" → `PriceCalculator` (flight only)\n\n\n\n📝 When a user provides new travel details (e.g., books a flight or hotel), update the appropriate context variable for the current `user_id` and `thread_id`. For example:\n- Set `last_flight_destination` after a flight is booked.\n- Set `last_accommodation_destination` after accommodation is selected.\n\n\n🤖 Be proactive, polite, and efficient. Your job is to smoothly direct the user to the correct service without asking them to choose agents manually.\n', metadata={}, model='gpt-4o-mini-2024-07-18', object='response', output=[], parallel_tool_calls=True, temperature=1.0, tool_choice='auto', tools=[FunctionTool(name='transfer_to_flight_agent', parameters={'additionalProperties': False, 'type': 'object', 'properties': {}, 'required': []}, strict=True, type='function', description='Handoff to the Flight Agent agent to handle the request. ')], top_p=1.0, background=False, max_output_tokens=None, max_tool_calls=None, previous_response_id=None, prompt=None, reasoning=Reasoning(effort=None, generate_summary=None, summary=None), service_tier='auto', status='in_progress', text=ResponseTextConfig(format=ResponseFormatText(type='text')), top_logprobs=0, truncation='disabled', usage=None, user=None, prompt_cache_key=None, safety_identifier=None, store=True), sequence_number=1, type='response.in_progress'), type='raw_response_event')
2025-07-22 15:19:30,810 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseOutputItemAddedEvent(item=ResponseOutputMessage(id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', content=[], role='assistant', status='in_progress', type='message'), output_index=0, sequence_number=2, type='response.output_item.added'), type='raw_response_event')
2025-07-22 15:19:30,812 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseContentPartAddedEvent(content_index=0, item_id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', output_index=0, part=ResponseOutputText(annotations=[], text='', type='output_text', logprobs=[]), sequence_number=3, type='response.content_part.added'), type='raw_response_event')
2025-07-22 15:19:30,813 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseTextDeltaEvent(content_index=0, delta='Hello', item_id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', output_index=0, sequence_number=4, type='response.output_text.delta', logprobs=[]), type='raw_response_event')
2025-07-22 15:19:30,817 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseTextDeltaEvent(content_index=0, delta='!', item_id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', output_index=0, sequence_number=5, type='response.output_text.delta', logprobs=[]), type='raw_response_event')
2025-07-22 15:19:30,820 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseTextDeltaEvent(content_index=0, delta=' How', item_id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', output_index=0, sequence_number=6, type='response.output_text.delta', logprobs=[]), type='raw_response_event')
2025-07-22 15:19:30,823 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseTextDeltaEvent(content_index=0, delta=' can', item_id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', output_index=0, sequence_number=7, type='response.output_text.delta', logprobs=[]), type='raw_response_event')
2025-07-22 15:19:30,831 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseTextDeltaEvent(content_index=0, delta=' I', item_id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', output_index=0, sequence_number=8, type='response.output_text.delta', logprobs=[]), type='raw_response_event')
2025-07-22 15:19:30,832 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseTextDeltaEvent(content_index=0, delta=' assist', item_id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', output_index=0, sequence_number=9, type='response.output_text.delta', logprobs=[]), type='raw_response_event')
2025-07-22 15:19:30,848 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseTextDeltaEvent(content_index=0, delta=' you', item_id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', output_index=0, sequence_number=10, type='response.output_text.delta', logprobs=[]), type='raw_response_event')
2025-07-22 15:19:30,849 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseTextDeltaEvent(content_index=0, delta=' with', item_id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', output_index=0, sequence_number=11, type='response.output_text.delta', logprobs=[]), type='raw_response_event')
2025-07-22 15:19:30,853 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseTextDeltaEvent(content_index=0, delta=' your', item_id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', output_index=0, sequence_number=12, type='response.output_text.delta', logprobs=[]), type='raw_response_event')
2025-07-22 15:19:30,957 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseTextDeltaEvent(content_index=0, delta=' travel', item_id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', output_index=0, sequence_number=13, type='response.output_text.delta', logprobs=[]), type='raw_response_event')
2025-07-22 15:19:30,960 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseTextDeltaEvent(content_index=0, delta=' plans', item_id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', output_index=0, sequence_number=14, type='response.output_text.delta', logprobs=[]), type='raw_response_event')
2025-07-22 15:19:30,962 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseTextDeltaEvent(content_index=0, delta=' today', item_id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', output_index=0, sequence_number=15, type='response.output_text.delta', logprobs=[]), type='raw_response_event')
2025-07-22 15:19:31,022 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseTextDeltaEvent(content_index=0, delta='?', item_id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', output_index=0, sequence_number=16, type='response.output_text.delta', logprobs=[]), type='raw_response_event')
2025-07-22 15:19:31,063 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseTextDoneEvent(content_index=0, item_id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', output_index=0, sequence_number=17, text='Hello! How can I assist you with your travel plans today?', type='response.output_text.done', logprobs=[]), type='raw_response_event')
2025-07-22 15:19:31,065 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseContentPartDoneEvent(content_index=0, item_id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', output_index=0, part=ResponseOutputText(annotations=[], text='Hello! How can I assist you with your travel plans today?', type='output_text', logprobs=[]), sequence_number=18, type='response.content_part.done'), type='raw_response_event')
2025-07-22 15:19:31,067 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseOutputItemDoneEvent(item=ResponseOutputMessage(id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', content=[ResponseOutputText(annotations=[], text='Hello! How can I assist you with your travel plans today?', type='output_text', logprobs=[])], role='assistant', status='completed', type='message'), output_index=0, sequence_number=19, type='response.output_item.done'), type='raw_response_event')
2025-07-22 15:19:31,076 - INFO - Streaming chunk: RawResponsesStreamEvent(data=ResponseCompletedEvent(response=Response(id='resp_687f81d296648198b18e11d8ec13a6210c4333d74ddedc2a', created_at=1753186770.0, error=None, incomplete_details=None, instructions='\nYou are the Triage Travel Agent. Automatically detect the user’s intent based on their message and route it to the appropriate specialized agent.\n\n🎯 Your primary role is to classify the user\'s request and forward it to one of the following agents:\n\n- ✈️ **FlightAgent**: For booking flights, checking flight options, times, and related details.\n- 🏨 **AccommodationAgent**: For hotel bookings, accommodations, or lodging inquiries.\n- 💰 **PriceCalculator**: For calculating total trip costs (flight + accommodation), flight-only cost, or accommodation-only cost.\n\n🧠 Context-Aware Handling:\n- If the user asks for accommodation without specifying a destination, check for a saved `last_flight_destination` in context for the current `user_id` and `thread_id`.\n    - If found, ask: “Would you like to search for accommodation in [destination]?”\n- If both a flight and an accommodation exist in context for the current `user_id` and `thread_id` (i.e., context contains both `last_flight_destination` and `last_accommodation_destination`), proceed with calculating the full trip cost.\n\n- If the user asks for a total price:\n    - If both a flight and an accommodation exist in  context for the current `user_id` and `thread_id`. (i.e. context contains both `last_flight_destination` and `last_accommodation_destination`), proceed with calculating the full trip cost.\n    - If only one of the two is available, calculate the known part and ask the user (in a conversational way) whether they would like to include the other.\n    - If neither is available, ask:\n        “Would you like to start by booking a flight, finding accommodation, or both? I’ll then calculate the total cost for you.”\n        \n🌐 Multi-user Awareness:\nEach user is uniquely identified by a `user_id` and each conversation has a `thread_id`. Always pass these values to sub-agents and tools when routing or fetching context.\n\nRetrieve or store variables like `last_flight_destination` and `last_accommodation_destination` in a way that is **scoped to the current user and thread** to avoid any data mix-up.\n\n💬 Conversational Guidance:\n- When collecting missing information (e.g., destination, dates, number of travelers), ask for details gradually and naturally.\n- Do **not** bombard the user with a list of questions all at once.\n- Keep the tone friendly, patient, and interactive—like a helpful human agent would.\n- Use simple follow-up questions like: “And when would you like to travel?” or “Would you prefer a budget or luxury hotel?”\n\n📌 Responsibilities:\n-  Automatically determine the user’s intent and pass the request to the appropriate sub-agent, including the current `user_id` and `thread_id` as part of the request.\n- Detect whether the user is asking for:\n    - Flight booking\n    - Accommodation booking\n    - Total cost (flight + accommodation)\n    - Price of flight only\n    - Price of accommodation only\n- Use available context to personalize and complete the request.\n- Confirm assumptions when inferring missing details (e.g., destination).\n- If the topic is not travel-related, politely inform the user that this assistant only handles travel-related queries.\n\n🧠 Always check if needed information exists in context for the given `user_id` and `thread_id` before asking the user to provide it.\n\n🧾 Context Variables to track:\n- `last_flight_destination`\n- `last_accommodation_destination`\n- Booking status for each (optional)\n\nExamples:\n- "Book me a flight to Mombasa" → `FlightAgent`\n- "Find a hotel in Nairobi" → `AccommodationAgent`\n- "How much will the whole trip cost?" → `PriceCalculator` (full trip if both flight and accommodation are known; prompt user if not)\n- "How much is the hotel per night?" → `PriceCalculator` (accommodation only)\n- "What\'s the cost of the flight to Kisumu?" → `PriceCalculator` (flight only)\n\n\n\n📝 When a user provides new travel details (e.g., books a flight or hotel), update the appropriate context variable for the current `user_id` and `thread_id`. For example:\n- Set `last_flight_destination` after a flight is booked.\n- Set `last_accommodation_destination` after accommodation is selected.\n\n\n🤖 Be proactive, polite, and efficient. Your job is to smoothly direct the user to the correct service without asking them to choose agents manually.\n', metadata={}, model='gpt-4o-mini-2024-07-18', object='response', output=[ResponseOutputMessage(id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', content=[ResponseOutputText(annotations=[], text='Hello! How can I assist you with your travel plans today?', type='output_text', logprobs=[])], role='assistant', status='completed', type='message')], parallel_tool_calls=True, temperature=1.0, tool_choice='auto', tools=[FunctionTool(name='transfer_to_flight_agent', parameters={'additionalProperties': False, 'type': 'object', 'properties': {}, 'required': []}, strict=True, type='function', description='Handoff to the Flight Agent agent to handle the request. ')], top_p=1.0, background=False, max_output_tokens=None, max_tool_calls=None, previous_response_id=None, prompt=None, reasoning=Reasoning(effort=None, generate_summary=None, summary=None), service_tier='default', status='completed', text=ResponseTextConfig(format=ResponseFormatText(type='text')), top_logprobs=0, truncation='disabled', usage=ResponseUsage(input_tokens=979, input_tokens_details=InputTokensDetails(cached_tokens=0), output_tokens=15, output_tokens_details=OutputTokensDetails(reasoning_tokens=0), total_tokens=994), user=None, prompt_cache_key=None, safety_identifier=None, store=True), sequence_number=20, type='response.completed'), type='raw_response_event')
2025-07-22 15:19:31,136 - INFO - Streaming chunk: RunItemStreamEvent(name='message_output_created', item=MessageOutputItem(agent=Agent(name='Triage Agent', handoff_description=None, tools=[], mcp_servers=[], mcp_config={}, instructions='\nYou are the Triage Travel Agent. Automatically detect the user’s intent based on their message and route it to the appropriate specialized agent.\n\n🎯 Your primary role is to classify the user\'s request and forward it to one of the following agents:\n\n- ✈️ **FlightAgent**: For booking flights, checking flight options, times, and related details.\n- 🏨 **AccommodationAgent**: For hotel bookings, accommodations, or lodging inquiries.\n- 💰 **PriceCalculator**: For calculating total trip costs (flight + accommodation), flight-only cost, or accommodation-only cost.\n\n🧠 Context-Aware Handling:\n- If the user asks for accommodation without specifying a destination, check for a saved `last_flight_destination` in context for the current `user_id` and `thread_id`.\n    - If found, ask: “Would you like to search for accommodation in [destination]?”\n- If both a flight and an accommodation exist in context for the current `user_id` and `thread_id` (i.e., context contains both `last_flight_destination` and `last_accommodation_destination`), proceed with calculating the full trip cost.\n\n- If the user asks for a total price:\n    - If both a flight and an accommodation exist in  context for the current `user_id` and `thread_id`. (i.e. context contains both `last_flight_destination` and `last_accommodation_destination`), proceed with calculating the full trip cost.\n    - If only one of the two is available, calculate the known part and ask the user (in a conversational way) whether they would like to include the other.\n    - If neither is available, ask:\n        “Would you like to start by booking a flight, finding accommodation, or both? I’ll then calculate the total cost for you.”\n        \n🌐 Multi-user Awareness:\nEach user is uniquely identified by a `user_id` and each conversation has a `thread_id`. Always pass these values to sub-agents and tools when routing or fetching context.\n\nRetrieve or store variables like `last_flight_destination` and `last_accommodation_destination` in a way that is **scoped to the current user and thread** to avoid any data mix-up.\n\n💬 Conversational Guidance:\n- When collecting missing information (e.g., destination, dates, number of travelers), ask for details gradually and naturally.\n- Do **not** bombard the user with a list of questions all at once.\n- Keep the tone friendly, patient, and interactive—like a helpful human agent would.\n- Use simple follow-up questions like: “And when would you like to travel?” or “Would you prefer a budget or luxury hotel?”\n\n📌 Responsibilities:\n-  Automatically determine the user’s intent and pass the request to the appropriate sub-agent, including the current `user_id` and `thread_id` as part of the request.\n- Detect whether the user is asking for:\n    - Flight booking\n    - Accommodation booking\n    - Total cost (flight + accommodation)\n    - Price of flight only\n    - Price of accommodation only\n- Use available context to personalize and complete the request.\n- Confirm assumptions when inferring missing details (e.g., destination).\n- If the topic is not travel-related, politely inform the user that this assistant only handles travel-related queries.\n\n🧠 Always check if needed information exists in context for the given `user_id` and `thread_id` before asking the user to provide it.\n\n🧾 Context Variables to track:\n- `last_flight_destination`\n- `last_accommodation_destination`\n- Booking status for each (optional)\n\nExamples:\n- "Book me a flight to Mombasa" → `FlightAgent`\n- "Find a hotel in Nairobi" → `AccommodationAgent`\n- "How much will the whole trip cost?" → `PriceCalculator` (full trip if both flight and accommodation are known; prompt user if not)\n- "How much is the hotel per night?" → `PriceCalculator` (accommodation only)\n- "What\'s the cost of the flight to Kisumu?" → `PriceCalculator` (flight only)\n\n\n\n📝 When a user provides new travel details (e.g., books a flight or hotel), update the appropriate context variable for the current `user_id` and `thread_id`. For example:\n- Set `last_flight_destination` after a flight is booked.\n- Set `last_accommodation_destination` after accommodation is selected.\n\n\n🤖 Be proactive, polite, and efficient. Your job is to smoothly direct the user to the correct service without asking them to choose agents manually.\n', prompt=None, handoffs=[Agent(name='Flight Agent', handoff_description=None, tools=[<function search_flight at 0x7f1d670e2cb0>, <function book_flight at 0x7f1d663477f0>, <function parse_natural_date at 0x7f1d66347ac0>], mcp_servers=[], mcp_config={}, instructions='\nYou are a helpful and friendly Flight Booking Assistant.\n\nYour role is to help users find and book flights in a professional, step-by-step conversational manner that prioritizes user comfort and clarity.\n\n---\n\n💡 Routing Smartness:\n\n- If the user explicitly asks for a flight **price or total cost**, route to the Price Calculator Agent.\n  - Examples: “How much is the flight?”, “What’s the trip cost?”, “What’s the price?”\n  - Use conversation context to decide if routing is needed.\n\n\n- If the user asks about **hotels, stays, or accommodation**, route them to the **Accommodation Agent** to assist with lodging options.\n  > Example triggers: “I need a hotel too”, “Can you help with accommodation?”, “What are the lodging options?”\n\n---\n\n\n🌐 Multi-User & Thread Awareness:\n\nEach user is uniquely identified by a `user_id`, and each conversation thread has a `thread_id`. You must **always pass** these values to tools and context functions.\n\n---\n\n🧠 **Context Storage Guidelines**:\n- After a successful flight search, store:\n  - `last_flight_destination` using:\n    ```python\n    set_context(user_id, thread_id, "last_flight_destination", destination)\n    ```\n- After booking, store:\n  - `last_flight_booking` details (airline, times, price, etc.)\n  - Confirm `last_flight_destination` is also set\n- Always use both `user_id` and `thread_id` when calling or retrieving context\n\n---\n🕐 Date Understanding:\n\nYou understand and resolve natural language date expressions like:\n- “14th August”\n- “next Friday”\n- “tomorrow”\n- “in 2 weeks”\n\nAssume the current date and time is: **2025-07-22 15:19:24**\n\nIf a date does not include a year, assume it refers to **this year**, unless the date has already passed, in which case assume it’s next year.\n\nYou may use the `parse_natural_date` tool if needed to resolve expressions into `YYYY-MM-DD`.\n\n\n🎯 Step 1: Collect Flight Search Information  \nGather the following details **one at a time** in a natural, friendly tone:\n- Origin city or airport\n- Destination city or airport\n- Departure date (YYYY-MM-DD)\n- Return date (optional)\n- Number of adults\n- Number of children (optional)\n- Number of infants (optional)\n- Cabin class (economy, premium economy, business, or first)\n\n🧠 **Convert origin and destination** into IATA airport codes using your internal knowledge.  \nExample:  \n- “Nairobi” → “NBO”  \n- “London Heathrow” → “LHR”\n\n🧠 If the user mentions a general city (e.g., “New York”), clarify which airport they mean if multiple exist (e.g., JFK, LGA, EWR). You may ask:\n> “There are several airports in New York. Do you mean JFK, LaGuardia, or Newark?”\n\n\n⚠️ Do not proceed until both origin and destination have valid IATA codes. If unclear, ask the user for clarification or a more specific location.\n\n⚠️ IMPORTANT: Do not call the `search_flight` tool until ALL the following fields are fully collected and confirmed:\n+ - Valid origin (IATA code)\n+ - Valid destination (IATA code)\n+ - Departure date\n+ - Number of adults\n+ - Cabin class\n+\n+ If any of these fields are missing or unclear, continue asking questions conversationally until they are filled.\n+ \n+ ✅ Only after confirming all fields, say:\n+ “One moment please as I fetch the best flight options for you... ✈️”\n+ And then call the `search_flight` tool.\n\n📦 Then construct a `SearchFlightInput` object and call the `search_flight` tool.\n\n---\n\n🎯 Step 2: Present Flight Options  \nAfter retrieving results from the `search_flight` tool:\n- Present 3–5 top flight options clearly, including:\n  - Airline\n  - Departure and arrival time\n  - Duration\n  - Number of stops\n  - Price\n\n🗣 Example:  \n> “Option 1: Kenya Airways – Departs 09:00, Arrives 11:45, Non-stop, $220”  \n> “Option 2: Qatar Airways – Departs 14:30, Arrives 22:00, 1 stop, $180”  \n> “Option 3: Emirates – Departs 21:00, Arrives 06:30 next day, 1 stop, $200”\n\nThen ask the user:\n> “Which option would you like to choose (e.g., Option 1, 2, or 3)?”\n\n**❌ Never make the decision on the user’s behalf. Always wait for their selection.**\n\n---\n\n🎯 Step 3: Simulate Booking  \nOnce a flight is selected, collect:\n- Full name\n- Email address\n- Phone number\n\n📦 Then call the `book_flight` tool with the selected flight and user info.\n\n🧠 After booking, **store the following in context** for the current `user_id` and `thread_id`:\n- `last_booking_reference`\n- `last_passenger_name`\n- `last_email`\n- `last_phone`\n- `last_flight_id`\n- `last_flight_airline`\n- `last_flight_departure_time`\n- `last_flight_arrival_time`\n- `last_flight_destination`\n- `last_flight_origin`\n- `last_flight_duration`\n- `last_flight_cost`\n- `last_flight_currency`\n- `last_flight_stops`\n- `last_flight_booking_link`\n\nThese values are extracted automatically from `BookFlightInput.selected_flight_details`.\n\n✅ After saving, respond with a friendly confirmation:\n- Include the booking reference\n- Mention the airline, flight times, and destination\n- Prompt the user to check their email\n\n---\n📘 Summary of Key Context Variables:\n- `last_flight_destination`\n- `last_booking_reference`\n- `last_flight_*` details\n- `last_passenger_name`, `last_email`, `last_phone`\n\n---\n\n✅ Always maintain a clear, polite, and professional tone. Help the user feel guided and supported throughout their journey.\n', prompt=None, handoffs=[(Agent(name='Price Calculator Agent', handoff_description=None, tools=[<function price_calculator_tool at 0x7f1d663479a0>], mcp_servers=[], mcp_config={}, instructions='\nYou are a smart and context-aware Price Calculator Agent.\n\n🎯 Your job is to compute:\n- Total trip cost (flight + accommodation)\n- Flight-only cost\n- Accommodation-only cost\n\n📦 You always **pull data from context** first:\n- flight cost\n- accommodation cost\n- number of travelers\n- number of nights\n- destination (if needed)\n\n🧠 Important Rules:\n1. **DO NOT** ask for details like number of nights, travelers, or destination — these are already collected by the Flight or Accommodation Agent.\n\n2. Only ask the user a question if:\n   - Clarification is needed (e.g., “Did you want just the hotel price or the total trip cost?”)\n   - The required data is completely missing from context\n\n3. If **only one part** of the trip is available (e.g., just accommodation):\n   - Calculate the known part (e.g., hotel cost)\n   - Then ask:  \n     > “Would you like to include a flight as well so I can calculate the full trip cost?”\n   - If the user agrees, **automatically route to the FlightAgent** to collect the missing flight information.\n\n4. If **only flight information** is available:\n   - Calculate the flight cost\n   - Then ask:  \n     > “Would you like to include a hotel stay so I can calculate the full trip cost?”\n   - If the user agrees, **automatically route to the AccommodationAgent**.\n\n5. If **neither flight nor accommodation** exists in context:\n   - Say:  \n     > “I don’t see any trip information yet. Would you like to start by booking a flight or finding accommodation?”\n   - Then **route to the appropriate agent** based on the user’s response:\n     - Flight → route to `FlightAgent`\n     - Accommodation → route to `AccommodationAgent`\n\n✅ Always:\n- Use the `price_calculator_tool` once data is complete\n- Output a clear and friendly summary:\n  > “Your estimated total cost is $1,450 for 3 nights including flights and hotel.”\n\n💾 After calculation, store:\n- `last_trip_cost`\n- `last_cost_breakdown`\n\nDo not over-ask. Be efficient, polite, and helpful — like a professional travel concierge.\n', prompt=None, handoffs=[], model='gpt-4o-mini', model_settings=ModelSettings(temperature=None, top_p=None, frequency_penalty=None, presence_penalty=None, tool_choice=None, parallel_tool_calls=None, truncation=None, max_tokens=None, reasoning=None, metadata=None, store=None, include_usage=None, response_include=None, extra_query=None, extra_body=None, extra_headers=None, extra_args=None), input_guardrails=[], output_guardrails=[], output_type=<class 'models.flight_models.PriceCalculationOutput'>, hooks=None, tool_use_behavior='run_llm_again', reset_tool_choice=True),)], model='gpt-4o-mini', model_settings=ModelSettings(temperature=None, top_p=None, frequency_penalty=None, presence_penalty=None, tool_choice=None, parallel_tool_calls=None, truncation=None, max_tokens=None, reasoning=None, metadata=None, store=None, include_usage=None, response_include=None, extra_query=None, extra_body=None, extra_headers=None, extra_args=None), input_guardrails=[], output_guardrails=[], output_type=<class 'models.flight_models.SearchFlightOutput'>, hooks=None, tool_use_behavior='run_llm_again', reset_tool_choice=True)], model='gpt-4o-mini', model_settings=ModelSettings(temperature=None, top_p=None, frequency_penalty=None, presence_penalty=None, tool_choice=None, parallel_tool_calls=None, truncation=None, max_tokens=None, reasoning=None, metadata=None, store=None, include_usage=None, response_include=None, extra_query=None, extra_body=None, extra_headers=None, extra_args=None), input_guardrails=[], output_guardrails=[], output_type=None, hooks=None, tool_use_behavior='run_llm_again', reset_tool_choice=True), raw_item=ResponseOutputMessage(id='msg_687f81d334608198b6ebff51ce9177510c4333d74ddedc2a', content=[ResponseOutputText(annotations=[], text='Hello! How can I assist you with your travel plans today?', type='output_text', logprobs=[])], role='assistant', status='completed', type='message'), type='message_output_item'), type='run_item_stream_event')
2025-07-22 15:19:31,153 - INFO - Context updated for user user_u0okkhuhp / default
2025-07-22 15:28:11,252 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 15:28:11,255 - INFO - Current context before message: []
2025-07-22 15:34:24,720 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 15:34:24,721 - INFO - Current context before message: []
2025-07-22 15:34:24,728 - INFO - >>> Starting streaming response
2025-07-22 15:35:25,174 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 15:35:25,175 - INFO - Current context before message: []
2025-07-22 15:35:25,188 - INFO - >>> Starting streaming response
2025-07-22 15:35:27,956 - INFO - Streaming text piece: Hello
2025-07-22 15:35:27,958 - INFO - Streaming text piece: !
2025-07-22 15:35:28,007 - INFO - Streaming text piece:  How
2025-07-22 15:35:28,009 - INFO - Streaming text piece:  can
2025-07-22 15:35:28,010 - INFO - Streaming text piece:  I
2025-07-22 15:35:28,060 - INFO - Streaming text piece:  assist
2025-07-22 15:35:28,061 - INFO - Streaming text piece:  you
2025-07-22 15:35:28,065 - INFO - Streaming text piece:  with
2025-07-22 15:35:28,065 - INFO - Streaming text piece:  your
2025-07-22 15:35:28,066 - INFO - Streaming text piece:  travel
2025-07-22 15:35:28,068 - INFO - Streaming text piece:  plans
2025-07-22 15:35:28,069 - INFO - Streaming text piece:  today
2025-07-22 15:35:28,123 - INFO - Streaming text piece: ?
2025-07-22 15:41:01,157 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 15:41:01,157 - INFO - Current context before message: []
2025-07-22 15:41:01,159 - INFO - >>> Starting streaming response
2025-07-22 15:41:02,660 - INFO - Streaming text piece: Hello
2025-07-22 15:41:02,661 - INFO - Streaming text piece: !
2025-07-22 15:41:02,661 - INFO - Streaming text piece:  How
2025-07-22 15:41:02,724 - INFO - Streaming text piece:  can
2025-07-22 15:41:02,724 - INFO - Streaming text piece:  I
2025-07-22 15:41:02,725 - INFO - Streaming text piece:  assist
2025-07-22 15:41:02,770 - INFO - Streaming text piece:  you
2025-07-22 15:41:02,771 - INFO - Streaming text piece:  with
2025-07-22 15:41:02,907 - INFO - Streaming text piece:  your
2025-07-22 15:41:02,908 - INFO - Streaming text piece:  travel
2025-07-22 15:41:02,908 - INFO - Streaming text piece:  plans
2025-07-22 15:41:02,909 - INFO - Streaming text piece:  today
2025-07-22 15:41:02,910 - INFO - Streaming text piece: ?
2025-07-22 15:41:02,912 - INFO - Streaming text piece:  Are
2025-07-22 15:41:02,912 - INFO - Streaming text piece:  you
2025-07-22 15:41:02,914 - INFO - Streaming text piece:  looking
2025-07-22 15:41:02,915 - INFO - Streaming text piece:  to
2025-07-22 15:41:02,916 - INFO - Streaming text piece:  book
2025-07-22 15:41:03,015 - INFO - Streaming text piece:  a
2025-07-22 15:41:03,016 - INFO - Streaming text piece:  flight
2025-07-22 15:41:03,036 - INFO - Streaming text piece: ,
2025-07-22 15:41:03,102 - INFO - Streaming text piece:  find
2025-07-22 15:41:03,114 - INFO - Streaming text piece:  accommodation
2025-07-22 15:41:03,115 - INFO - Streaming text piece: ,
2025-07-22 15:41:03,177 - INFO - Streaming text piece:  or
2025-07-22 15:41:03,178 - INFO - Streaming text piece:  something
2025-07-22 15:41:03,180 - INFO - Streaming text piece:  else
2025-07-22 15:41:03,227 - INFO - Streaming text piece: ?
2025-07-22 15:41:27,438 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 15:41:27,439 - INFO - Current context before message: []
2025-07-22 15:41:27,440 - INFO - >>> Starting streaming response
2025-07-22 15:41:29,179 - INFO - Streaming text piece: Could
2025-07-22 15:41:29,190 - INFO - Streaming text piece:  you
2025-07-22 15:41:29,191 - INFO - Streaming text piece:  please
2025-07-22 15:41:29,231 - INFO - Streaming text piece:  provide
2025-07-22 15:41:29,232 - INFO - Streaming text piece:  me
2025-07-22 15:41:29,233 - INFO - Streaming text piece:  with
2025-07-22 15:41:29,265 - INFO - Streaming text piece:  your
2025-07-22 15:41:29,275 - INFO - Streaming text piece:  destination
2025-07-22 15:41:29,276 - INFO - Streaming text piece:  and
2025-07-22 15:41:29,300 - INFO - Streaming text piece:  travel
2025-07-22 15:41:29,308 - INFO - Streaming text piece:  dates
2025-07-22 15:41:29,336 - INFO - Streaming text piece: ?
2025-07-22 15:41:55,909 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 15:41:55,910 - INFO - Current context before message: []
2025-07-22 15:41:55,912 - INFO - >>> Starting streaming response
2025-07-22 16:06:49,915 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 16:06:49,916 - INFO - Running agent: Triage Agent
2025-07-22 16:06:49,917 - ERROR - Error in /chat endpoint: Runner() takes no arguments
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/main.py", line 82, in chat
    result = await Runner(current_agent).run(
TypeError: Runner() takes no arguments
2025-07-22 16:09:07,534 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 16:09:07,535 - INFO - Running agent: Triage Agent
2025-07-22 16:09:07,535 - ERROR - Error in /chat endpoint: Runner.run() got an unexpected keyword argument 'user_id'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/main.py", line 82, in chat
    result = await Runner.run(current_agent,
TypeError: Runner.run() got an unexpected keyword argument 'user_id'
2025-07-22 16:10:47,639 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 16:10:47,640 - INFO - Current context before message: []
2025-07-22 16:10:47,651 - INFO - >>> Starting streaming response
2025-07-22 16:10:50,632 - INFO - Streaming text piece: Hello
2025-07-22 16:10:50,641 - INFO - Streaming text piece: !
2025-07-22 16:10:50,643 - INFO - Streaming text piece:  How
2025-07-22 16:10:50,742 - INFO - Streaming text piece:  can
2025-07-22 16:10:50,745 - INFO - Streaming text piece:  I
2025-07-22 16:10:50,747 - INFO - Streaming text piece:  assist
2025-07-22 16:10:51,023 - INFO - Streaming text piece:  you
2025-07-22 16:10:51,026 - INFO - Streaming text piece:  with
2025-07-22 16:10:51,028 - INFO - Streaming text piece:  your
2025-07-22 16:10:51,264 - INFO - Streaming text piece:  travel
2025-07-22 16:10:51,268 - INFO - Streaming text piece:  plans
2025-07-22 16:10:51,272 - INFO - Streaming text piece:  today
2025-07-22 16:10:51,789 - INFO - Streaming text piece: ?
2025-07-22 16:10:51,789 - INFO - Streaming text piece:  ✈
2025-07-22 16:10:52,018 - INFO - Streaming text piece: ️
2025-07-22 16:10:52,020 - INFO - Streaming text piece: 🏨
2025-07-22 16:25:32,240 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 16:25:32,240 - INFO - Current context before message: []
2025-07-22 16:25:32,248 - INFO - >>> Starting streaming response
2025-07-22 16:25:37,210 - INFO - Streaming text piece: Hello
2025-07-22 16:25:37,211 - INFO - Streaming text piece: !
2025-07-22 16:25:37,216 - INFO - Streaming text piece:  How
2025-07-22 16:25:37,217 - INFO - Streaming text piece:  can
2025-07-22 16:25:37,217 - INFO - Streaming text piece:  I
2025-07-22 16:25:37,218 - INFO - Streaming text piece:  assist
2025-07-22 16:25:37,268 - INFO - Streaming text piece:  you
2025-07-22 16:25:37,269 - INFO - Streaming text piece:  with
2025-07-22 16:25:37,270 - INFO - Streaming text piece:  your
2025-07-22 16:25:37,270 - INFO - Streaming text piece:  travel
2025-07-22 16:25:37,272 - INFO - Streaming text piece:  plans
2025-07-22 16:25:37,273 - INFO - Streaming text piece:  today
2025-07-22 16:25:37,274 - INFO - Streaming text piece: ?
2025-07-22 16:25:37,274 - INFO - Streaming text piece:  Are
2025-07-22 16:25:37,277 - INFO - Streaming text piece:  you
2025-07-22 16:25:37,278 - INFO - Streaming text piece:  looking
2025-07-22 16:25:37,279 - INFO - Streaming text piece:  to
2025-07-22 16:25:37,281 - INFO - Streaming text piece:  book
2025-07-22 16:25:37,282 - INFO - Streaming text piece:  a
2025-07-22 16:25:37,285 - INFO - Streaming text piece:  flight
2025-07-22 16:25:37,313 - INFO - Streaming text piece: ,
2025-07-22 16:25:37,324 - INFO - Streaming text piece:  find
2025-07-22 16:25:37,356 - INFO - Streaming text piece:  accommodation
2025-07-22 16:25:37,371 - INFO - Streaming text piece: ,
2025-07-22 16:25:37,392 - INFO - Streaming text piece:  or
2025-07-22 16:25:37,403 - INFO - Streaming text piece:  something
2025-07-22 16:25:37,413 - INFO - Streaming text piece:  else
2025-07-22 16:25:37,450 - INFO - Streaming text piece: ?
2025-07-22 16:25:44,879 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 16:25:44,879 - INFO - Current context before message: []
2025-07-22 16:25:44,882 - INFO - >>> Starting streaming response
2025-07-22 16:25:46,747 - INFO - Streaming text piece: Could
2025-07-22 16:25:46,748 - INFO - Streaming text piece:  you
2025-07-22 16:25:46,749 - INFO - Streaming text piece:  please
2025-07-22 16:25:46,750 - INFO - Streaming text piece:  tell
2025-07-22 16:25:46,751 - INFO - Streaming text piece:  me
2025-07-22 16:25:46,752 - INFO - Streaming text piece:  your
2025-07-22 16:25:46,754 - INFO - Streaming text piece:  destination
2025-07-22 16:25:46,754 - INFO - Streaming text piece: ?
2025-07-22 16:25:53,939 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 16:25:53,941 - INFO - Current context before message: []
2025-07-22 16:25:53,942 - INFO - >>> Starting streaming response
2025-07-22 16:25:58,267 - INFO - Streaming text piece: Would
2025-07-22 16:25:58,269 - INFO - Streaming text piece:  you
2025-07-22 16:25:58,269 - INFO - Streaming text piece:  like
2025-07-22 16:25:58,286 - INFO - Streaming text piece:  to
2025-07-22 16:25:58,288 - INFO - Streaming text piece:  search
2025-07-22 16:25:58,291 - INFO - Streaming text piece:  for
2025-07-22 16:25:58,343 - INFO - Streaming text piece:  accommodation
2025-07-22 16:25:58,345 - INFO - Streaming text piece:  in
2025-07-22 16:25:58,534 - INFO - Streaming text piece:  Dubai
2025-07-22 16:25:58,535 - INFO - Streaming text piece: ?
2025-07-22 16:25:58,536 - INFO - Streaming text piece:  If
2025-07-22 16:25:58,537 - INFO - Streaming text piece:  so
2025-07-22 16:25:58,541 - INFO - Streaming text piece: ,
2025-07-22 16:25:58,541 - INFO - Streaming text piece:  please
2025-07-22 16:25:58,542 - INFO - Streaming text piece:  let
2025-07-22 16:25:58,543 - INFO - Streaming text piece:  me
2025-07-22 16:25:58,545 - INFO - Streaming text piece:  know
2025-07-22 16:25:58,546 - INFO - Streaming text piece:  your
2025-07-22 16:25:58,579 - INFO - Streaming text piece:  travel
2025-07-22 16:25:58,580 - INFO - Streaming text piece:  dates
2025-07-22 16:25:58,581 - INFO - Streaming text piece:  and
2025-07-22 16:25:58,600 - INFO - Streaming text piece:  any
2025-07-22 16:25:58,601 - INFO - Streaming text piece:  preferences
2025-07-22 16:25:58,602 - INFO - Streaming text piece:  you
2025-07-22 16:25:58,656 - INFO - Streaming text piece:  have
2025-07-22 16:25:58,658 - INFO - Streaming text piece:  for
2025-07-22 16:25:58,662 - INFO - Streaming text piece:  your
2025-07-22 16:25:58,713 - INFO - Streaming text piece:  stay
2025-07-22 16:25:58,727 - INFO - Streaming text piece: !
2025-07-22 16:29:25,613 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 16:29:25,613 - INFO - Current context before message: []
2025-07-22 16:29:25,616 - INFO - >>> Starting streaming response
2025-07-22 16:39:28,726 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 16:39:28,727 - INFO - Current context before message: []
2025-07-22 16:39:28,729 - ERROR - Error in /chat endpoint: Runner() takes no arguments
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/main.py", line 78, in chat
    result = await Runner(current_agent).run(
TypeError: Runner() takes no arguments
2025-07-22 16:45:49,807 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 16:45:49,807 - INFO - Current context before message: []
2025-07-22 16:45:49,808 - ERROR - Error in /chat endpoint: Runner.run() got an unexpected keyword argument 'user_id'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/main.py", line 77, in chat
    result = await Runner.run(
TypeError: Runner.run() got an unexpected keyword argument 'user_id'
2025-07-22 16:50:07,028 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 16:50:07,028 - INFO - Current context before message: []
2025-07-22 16:50:11,838 - INFO - >>> Starting streaming response
2025-07-22 17:20:10,366 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 17:20:10,369 - INFO - Current context before message: []
2025-07-22 17:20:10,393 - INFO - >>> Starting streaming response
2025-07-22 18:58:49,728 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 18:58:49,730 - INFO - Current context before message: []
2025-07-22 18:58:49,734 - INFO - >>> Starting streaming response
2025-07-22 19:01:35,457 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 19:01:35,461 - INFO - Current context before message: []
2025-07-22 19:01:35,466 - ERROR - Error in /chat endpoint: object RunResultStreaming can't be used in 'await' expression
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/main.py", line 88, in chat
    result_stream = await Runner.run_streamed(
TypeError: object RunResultStreaming can't be used in 'await' expression
2025-07-22 19:02:43,280 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 19:02:43,281 - INFO - Current context before message: []
2025-07-22 19:02:43,294 - INFO - >>> Starting streaming response
2025-07-22 19:04:34,624 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 19:04:34,626 - INFO - Current context before message: []
2025-07-22 19:04:34,642 - INFO - >>> Starting streaming response
2025-07-22 19:04:39,028 - INFO - Streaming text piece: Hello
2025-07-22 19:04:39,030 - INFO - Streaming text piece: !
2025-07-22 19:04:39,034 - INFO - Streaming text piece:  How
2025-07-22 19:04:39,057 - INFO - Streaming text piece:  can
2025-07-22 19:04:39,062 - INFO - Streaming text piece:  I
2025-07-22 19:04:39,063 - INFO - Streaming text piece:  assist
2025-07-22 19:04:39,077 - INFO - Streaming text piece:  you
2025-07-22 19:04:39,079 - INFO - Streaming text piece:  with
2025-07-22 19:04:39,175 - INFO - Streaming text piece:  your
2025-07-22 19:04:39,176 - INFO - Streaming text piece:  travel
2025-07-22 19:04:39,178 - INFO - Streaming text piece:  plans
2025-07-22 19:04:39,179 - INFO - Streaming text piece:  today
2025-07-22 19:04:39,188 - INFO - Streaming text piece: ?
2025-07-22 19:04:39,213 - INFO - Streaming text piece:  Are
2025-07-22 19:04:39,216 - INFO - Streaming text piece:  you
2025-07-22 19:04:39,232 - INFO - Streaming text piece:  looking
2025-07-22 19:04:39,249 - INFO - Streaming text piece:  to
2025-07-22 19:04:39,256 - INFO - Streaming text piece:  book
2025-07-22 19:04:39,298 - INFO - Streaming text piece:  a
2025-07-22 19:04:39,323 - INFO - Streaming text piece:  flight
2025-07-22 19:04:39,325 - INFO - Streaming text piece: ,
2025-07-22 19:04:39,345 - INFO - Streaming text piece:  find
2025-07-22 19:04:39,347 - INFO - Streaming text piece:  accommodation
2025-07-22 19:04:39,350 - INFO - Streaming text piece: ,
2025-07-22 19:04:39,365 - INFO - Streaming text piece:  or
2025-07-22 19:04:39,377 - INFO - Streaming text piece:  calculate
2025-07-22 19:04:39,379 - INFO - Streaming text piece:  trip
2025-07-22 19:04:39,708 - INFO - Streaming text piece:  costs
2025-07-22 19:04:39,716 - INFO - Streaming text piece: ?
2025-07-22 19:17:26,980 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 19:17:26,986 - ERROR - Error during chat processing: Runner.run_streamed() got an unexpected keyword argument 'stream'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/main.py", line 77, in chat
    result = await Runner.run_streamed(
TypeError: Runner.run_streamed() got an unexpected keyword argument 'stream'
2025-07-22 19:18:46,652 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 19:18:46,656 - ERROR - Error during chat processing: object RunResultStreaming can't be used in 'await' expression
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/main.py", line 77, in chat
    result = await Runner.run_streamed(
TypeError: object RunResultStreaming can't be used in 'await' expression
2025-07-22 19:20:15,053 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 19:20:15,072 - INFO - >>> Starting streaming response
2025-07-22 19:20:19,688 - INFO - Streaming text piece: Hello
2025-07-22 19:20:19,701 - INFO - Streaming text piece: !
2025-07-22 19:20:19,745 - INFO - Streaming text piece:  How
2025-07-22 19:20:19,762 - INFO - Streaming text piece:  can
2025-07-22 19:20:19,790 - INFO - Streaming text piece:  I
2025-07-22 19:20:19,843 - INFO - Streaming text piece:  assist
2025-07-22 19:20:19,872 - INFO - Streaming text piece:  you
2025-07-22 19:20:19,884 - INFO - Streaming text piece:  with
2025-07-22 19:20:19,924 - INFO - Streaming text piece:  your
2025-07-22 19:20:19,958 - INFO - Streaming text piece:  travel
2025-07-22 19:20:19,960 - INFO - Streaming text piece:  plans
2025-07-22 19:20:19,962 - INFO - Streaming text piece:  today
2025-07-22 19:20:20,134 - INFO - Streaming text piece: ?
2025-07-22 19:20:35,861 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 19:20:35,864 - INFO - >>> Starting streaming response
2025-07-22 19:20:38,071 - INFO - Streaming text piece: Great
2025-07-22 19:20:38,073 - INFO - Streaming text piece: !
2025-07-22 19:20:38,074 - INFO - Streaming text piece:  Where
2025-07-22 19:20:38,076 - INFO - Streaming text piece:  would
2025-07-22 19:20:38,079 - INFO - Streaming text piece:  you
2025-07-22 19:20:38,080 - INFO - Streaming text piece:  like
2025-07-22 19:20:38,082 - INFO - Streaming text piece:  to
2025-07-22 19:20:38,086 - INFO - Streaming text piece:  fly
2025-07-22 19:20:38,087 - INFO - Streaming text piece:  to
2025-07-22 19:20:38,089 - INFO - Streaming text piece: ?
2025-07-22 19:20:38,094 - INFO - Streaming text piece:  And
2025-07-22 19:20:38,096 - INFO - Streaming text piece:  when
2025-07-22 19:20:38,101 - INFO - Streaming text piece:  do
2025-07-22 19:20:38,102 - INFO - Streaming text piece:  you
2025-07-22 19:20:38,103 - INFO - Streaming text piece:  plan
2025-07-22 19:20:38,114 - INFO - Streaming text piece:  to
2025-07-22 19:20:38,115 - INFO - Streaming text piece:  travel
2025-07-22 19:20:38,117 - INFO - Streaming text piece: ?
2025-07-22 19:20:55,722 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 19:20:55,726 - INFO - >>> Starting streaming response
2025-07-22 19:27:45,867 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 19:30:08,662 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 19:30:08,687 - INFO - >>> Starting streaming response
2025-07-22 19:31:25,282 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 19:31:25,296 - INFO - >>> Starting streaming response
2025-07-22 19:31:28,755 - INFO - Streaming text piece: Hello
2025-07-22 19:31:28,756 - INFO - Streaming text piece: !
2025-07-22 19:31:28,758 - INFO - Streaming text piece:  How
2025-07-22 19:31:28,759 - INFO - Streaming text piece:  can
2025-07-22 19:31:28,760 - INFO - Streaming text piece:  I
2025-07-22 19:31:28,762 - INFO - Streaming text piece:  assist
2025-07-22 19:31:28,763 - INFO - Streaming text piece:  you
2025-07-22 19:31:28,767 - INFO - Streaming text piece:  with
2025-07-22 19:31:28,768 - INFO - Streaming text piece:  your
2025-07-22 19:31:28,952 - INFO - Streaming text piece:  travel
2025-07-22 19:31:28,953 - INFO - Streaming text piece:  plans
2025-07-22 19:31:28,957 - INFO - Streaming text piece:  today
2025-07-22 19:31:29,258 - INFO - Streaming text piece: ?
2025-07-22 19:36:28,003 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 19:36:28,005 - INFO - Current context before message: []
2025-07-22 19:39:38,890 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 19:39:38,903 - INFO - Current context before message: []
2025-07-22 19:40:25,352 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 19:40:25,367 - INFO - Current context before message: []
2025-07-22 19:41:33,664 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 19:41:33,665 - INFO - Current context before message: []
2025-07-22 19:41:54,999 - INFO - Received message from user_id=user_u0okkhuhp, thread_id=default
2025-07-22 19:41:55,000 - INFO - Current context before message: []
2025-07-23 11:22:38,435 - INFO - Searching flight for NBO → JFK on 2025-07-25
2025-07-23 11:22:38,437 - ERROR - search_flight error: 'str' object has no attribute 'strftime'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 23, in search_flight
    query = f"{data.origin} to {data.destination} flights {data.departure_date.strftime('%Y-%m-%d')}"
AttributeError: 'str' object has no attribute 'strftime'
2025-07-23 11:22:41,794 - INFO - Searching flight for NBO → JFK on 2025-07-25
2025-07-23 11:22:41,794 - ERROR - search_flight error: 'str' object has no attribute 'strftime'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 23, in search_flight
    query = f"{data.origin} to {data.destination} flights {data.departure_date.strftime('%Y-%m-%d')}"
AttributeError: 'str' object has no attribute 'strftime'
2025-07-23 11:22:44,957 - INFO - Searching flight for NBO → JFK on 2025-07-25
2025-07-23 11:22:44,957 - ERROR - search_flight error: 'str' object has no attribute 'strftime'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 23, in search_flight
    query = f"{data.origin} to {data.destination} flights {data.departure_date.strftime('%Y-%m-%d')}"
AttributeError: 'str' object has no attribute 'strftime'
2025-07-23 11:22:47,928 - INFO - Searching flight for NBO → JFK on 2025-07-25
2025-07-23 11:22:47,928 - ERROR - search_flight error: 'str' object has no attribute 'strftime'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 23, in search_flight
    query = f"{data.origin} to {data.destination} flights {data.departure_date.strftime('%Y-%m-%d')}"
AttributeError: 'str' object has no attribute 'strftime'
2025-07-23 11:22:54,133 - INFO - Searching flight for NBO → JFK on 2025-07-25
2025-07-23 11:22:54,134 - ERROR - search_flight error: 'str' object has no attribute 'strftime'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 23, in search_flight
    query = f"{data.origin} to {data.destination} flights {data.departure_date.strftime('%Y-%m-%d')}"
AttributeError: 'str' object has no attribute 'strftime'
2025-07-23 11:22:57,028 - INFO - Searching flight for NBO → JFK on 2025-07-25
2025-07-23 11:22:59,488 - ERROR - search_flight error: 'str' object has no attribute 'strftime'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 23, in search_flight
    query = f"{data.origin} to {data.destination} flights {data.departure_date.strftime('%Y-%m-%d')}"
AttributeError: 'str' object has no attribute 'strftime'
2025-07-23 11:23:05,038 - INFO - Searching flight for NBO → JFK on 2025-07-25
2025-07-23 11:23:05,038 - ERROR - search_flight error: 'str' object has no attribute 'strftime'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 23, in search_flight
    query = f"{data.origin} to {data.destination} flights {data.departure_date.strftime('%Y-%m-%d')}"
AttributeError: 'str' object has no attribute 'strftime'
2025-07-23 12:59:04,095 - INFO - Searching flight for NBO → DXB on 2025-08-10
2025-07-23 12:59:04,096 - ERROR - search_flight error: 'str' object has no attribute 'strftime'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 23, in search_flight
    query = f"{data.origin} to {data.destination} flights {data.departure_date.strftime('%Y-%m-%d')}"
AttributeError: 'str' object has no attribute 'strftime'
2025-07-23 12:59:08,887 - INFO - Searching flight for NBO → DXB on 2025-08-10
2025-07-23 12:59:08,887 - ERROR - search_flight error: 'str' object has no attribute 'strftime'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 23, in search_flight
    query = f"{data.origin} to {data.destination} flights {data.departure_date.strftime('%Y-%m-%d')}"
AttributeError: 'str' object has no attribute 'strftime'
2025-07-23 14:03:16,928 - INFO - Searching flight for NBO → DXB on 2025-08-11
2025-07-23 14:03:17,717 - ERROR - search_flight error: SERP API error: 401 - {
  "error": "Invalid API key. Your API key should be here: https://serpapi.com/manage-api-key"
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 44, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 401 - {
  "error": "Invalid API key. Your API key should be here: https://serpapi.com/manage-api-key"
}
2025-07-23 14:03:23,578 - INFO - Searching flight for NBO → DXB on 2025-08-11
2025-07-23 14:03:24,219 - ERROR - search_flight error: SERP API error: 401 - {
  "error": "Invalid API key. Your API key should be here: https://serpapi.com/manage-api-key"
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 44, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 401 - {
  "error": "Invalid API key. Your API key should be here: https://serpapi.com/manage-api-key"
}
2025-07-23 14:17:42,525 - INFO - Searching flight for NBO → DXB on 2025-09-06
2025-07-23 14:17:43,443 - ERROR - search_flight error: SERP API error: 400 - {
  "error": "Missing `departure_id` parameter."
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 47, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 400 - {
  "error": "Missing `departure_id` parameter."
}
2025-07-23 14:17:48,748 - INFO - Searching flight for NBO → DXB on 2025-09-06
2025-07-23 14:17:49,506 - ERROR - search_flight error: SERP API error: 400 - {
  "error": "Missing `departure_id` parameter."
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 47, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 400 - {
  "error": "Missing `departure_id` parameter."
}
2025-07-23 14:27:22,843 - INFO - Searching flight for NBO → DXB on 2025-09-24
2025-07-23 14:27:23,716 - ERROR - search_flight error: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 56, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
2025-07-23 14:34:55,716 - INFO - Searching flight for NBO → DXB on 2025-08-07
2025-07-23 14:34:56,510 - ERROR - search_flight error: SERP API error: 400 - {
  "error": "Unsupported `0` for travel class."
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 60, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 400 - {
  "error": "Unsupported `0` for travel class."
}
2025-07-23 14:35:01,940 - INFO - Searching flight for NBO → DXB on 2025-08-07
2025-07-23 14:35:02,568 - ERROR - search_flight error: SERP API error: 400 - {
  "error": "Unsupported `0` for travel class."
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 60, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 400 - {
  "error": "Unsupported `0` for travel class."
}
2025-07-23 14:35:08,904 - INFO - Searching flight for NBO → DXB on 2025-08-07
2025-07-23 14:35:10,231 - ERROR - search_flight error: SERP API error: 400 - {
  "error": "Unsupported `0` for travel class."
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 60, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 400 - {
  "error": "Unsupported `0` for travel class."
}
2025-07-23 14:46:18,591 - INFO - Searching flight for NBO → DXB on 2025-09-05
2025-07-23 14:46:18,594 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'DXB', 'outbound_date': '2025-09-05', 'adults': 1, 'children': 0, 'infants': 0, 'travel_class': 1, 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-23 14:46:21,130 - ERROR - search_flight error: 1 validation error for SearchFlightOutput
flights
  Field required [type=missing, input_value={'origin': 'NBO', 'destin...': 'DXB', 'results': []}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 90, in search_flight
    output = SearchFlightOutput(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for SearchFlightOutput
flights
  Field required [type=missing, input_value={'origin': 'NBO', 'destin...': 'DXB', 'results': []}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
2025-07-23 14:47:16,253 - INFO - Searching flight for NBO → DXB on 2025-09-05
2025-07-23 14:47:16,255 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'DXB', 'outbound_date': '2025-09-05', 'adults': 1, 'children': 0, 'infants': 0, 'travel_class': 1, 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-23 14:47:16,615 - ERROR - search_flight error: 1 validation error for SearchFlightOutput
flights
  Field required [type=missing, input_value={'origin': 'NBO', 'destin...': 'DXB', 'results': []}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 90, in search_flight
    output = SearchFlightOutput(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for SearchFlightOutput
flights
  Field required [type=missing, input_value={'origin': 'NBO', 'destin...': 'DXB', 'results': []}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
2025-07-23 14:47:23,997 - INFO - Searching flight for NBO → DXB on 2025-09-05
2025-07-23 14:47:23,998 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'DXB', 'outbound_date': '2025-09-05', 'adults': 1, 'children': 0, 'infants': 0, 'travel_class': 1, 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-23 14:47:24,393 - ERROR - search_flight error: 1 validation error for SearchFlightOutput
flights
  Field required [type=missing, input_value={'origin': 'NBO', 'destin...': 'DXB', 'results': []}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 90, in search_flight
    output = SearchFlightOutput(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for SearchFlightOutput
flights
  Field required [type=missing, input_value={'origin': 'NBO', 'destin...': 'DXB', 'results': []}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
2025-07-23 15:02:42,864 - INFO - Searching flight for NBO → DXB on 2025-08-05
2025-07-23 15:02:42,865 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'DXB', 'outbound_date': '2025-08-05', 'adults': 1, 'children': 0, 'infants': 0, 'travel_class': 1, 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-23 15:02:53,630 - INFO - Searching flight for NBO → DXB on 2025-08-05
2025-07-23 15:02:53,631 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'DXB', 'outbound_date': '2025-08-05', 'adults': 1, 'children': 0, 'infants': 0, 'travel_class': 1, 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-23 15:07:01,857 - INFO - Searching flight for LHR → DXB on 2025-08-30
2025-07-23 15:07:01,859 - ERROR - search_flight error: unsupported operand type(s) for +: 'int' and 'NoneType'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 27, in search_flight
    total_passengers = data.adults + data.children + data.infants
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
2025-07-23 15:07:06,990 - INFO - Searching flight for LHR → DXB on 2025-08-30
2025-07-23 15:07:06,990 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'LHR', 'arrival_id': 'DXB', 'outbound_date': '2025-08-30', 'adults': 1, 'children': 0, 'infants': 0, 'travel_class': 1, 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 10:36:39,561 - INFO - Searching flight for CDG → AUS on 2025-07-25
2025-07-24 10:36:39,563 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-25', 'adults': 1, 'children': 0, 'infants': 0, 'travel_class': 1, 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 10:36:41,146 - INFO - Searching flight for ORY → AUS on 2025-07-25
2025-07-24 10:36:41,147 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'ORY', 'arrival_id': 'AUS', 'outbound_date': '2025-07-25', 'adults': 1, 'children': 0, 'infants': 0, 'travel_class': 1, 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 10:36:49,386 - INFO - Searching flight for CDG → AUS on 2025-07-25
2025-07-24 10:36:49,387 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-25', 'adults': 1, 'children': 0, 'infants': 0, 'travel_class': 1, 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 10:52:42,887 - INFO - Searching flight for CDG → AUS on 2025-07-25
2025-07-24 10:52:42,888 - ERROR - search_flight error: unsupported operand type(s) for +: 'int' and 'NoneType'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 28, in search_flight
    total_passengers = data.adults + data.children + data.infants
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
2025-07-24 10:52:46,530 - INFO - Searching flight for CDG → AUS on 2025-07-25
2025-07-24 10:52:46,532 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-25', 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 10:52:47,289 - ERROR - search_flight error: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 60, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
2025-07-24 10:52:53,640 - INFO - Searching flight for CDG → AUS on 2025-07-25
2025-07-24 10:52:53,640 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-25', 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 10:52:54,538 - ERROR - search_flight error: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 60, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
2025-07-24 10:57:27,376 - INFO - Searching flight for CDG → AUS on 2025-07-25
2025-07-24 10:57:27,378 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-25', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 11:06:56,903 - INFO - Searching flight for CDG → AUS on 2025-07-25
2025-07-24 11:06:56,905 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-25', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 11:09:23,881 - INFO - Searching flight for CDG → AUS on 2025-07-26
2025-07-24 11:09:23,883 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-26', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 11:09:33,932 - INFO - Searching flight for CDG → AUS on 2025-07-26
2025-07-24 11:09:33,933 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-26', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 11:09:34,504 - INFO - Searching flight for CDG → IAH on 2025-07-26
2025-07-24 11:09:34,504 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'IAH', 'outbound_date': '2025-07-26', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 11:29:25,399 - INFO - Searching flight for CDG → AUS on 2025-07-25
2025-07-24 11:29:25,401 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-25', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 11:29:25,969 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 11:29:25,970 - ERROR - search_flight error: 2 validation errors for FlightOption
id
  Field required [type=missing, input_value={'airline': 'American', '...1, 'booking_link': None}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
duration
  Input should be a valid string [type=string_type, input_value=902, input_type=int]
    For further information visit https://errors.pydantic.dev/2.11/v/string_type
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 77, in search_flight
    flight_option = FlightOption(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for FlightOption
id
  Field required [type=missing, input_value={'airline': 'American', '...1, 'booking_link': None}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
duration
  Input should be a valid string [type=string_type, input_value=902, input_type=int]
    For further information visit https://errors.pydantic.dev/2.11/v/string_type
2025-07-24 11:29:29,577 - INFO - Searching flight for CDG → AUS on 2025-07-25
2025-07-24 11:29:29,577 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-25', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 11:29:30,104 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 11:29:30,106 - ERROR - search_flight error: 2 validation errors for FlightOption
id
  Field required [type=missing, input_value={'airline': 'American', '...1, 'booking_link': None}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
duration
  Input should be a valid string [type=string_type, input_value=902, input_type=int]
    For further information visit https://errors.pydantic.dev/2.11/v/string_type
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 77, in search_flight
    flight_option = FlightOption(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for FlightOption
id
  Field required [type=missing, input_value={'airline': 'American', '...1, 'booking_link': None}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
duration
  Input should be a valid string [type=string_type, input_value=902, input_type=int]
    For further information visit https://errors.pydantic.dev/2.11/v/string_type
2025-07-24 11:29:35,345 - INFO - Searching flight for CDG → AUS on 2025-07-25
2025-07-24 11:29:35,345 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-25', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 11:29:35,854 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 11:29:35,855 - ERROR - search_flight error: 2 validation errors for FlightOption
id
  Field required [type=missing, input_value={'airline': 'American', '...1, 'booking_link': None}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
duration
  Input should be a valid string [type=string_type, input_value=902, input_type=int]
    For further information visit https://errors.pydantic.dev/2.11/v/string_type
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 77, in search_flight
    flight_option = FlightOption(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for FlightOption
id
  Field required [type=missing, input_value={'airline': 'American', '...1, 'booking_link': None}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
duration
  Input should be a valid string [type=string_type, input_value=902, input_type=int]
    For further information visit https://errors.pydantic.dev/2.11/v/string_type
2025-07-24 11:34:44,652 - INFO - Searching flight for CDG → AUS on 2025-07-25
2025-07-24 11:34:44,655 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-25', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 11:34:45,198 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 11:34:53,022 - INFO - Searching flight for CDG → AUS on 2025-07-25
2025-07-24 11:34:53,023 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-25', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 11:34:53,558 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 11:34:53,561 - ERROR - search_flight error: unsupported operand type(s) for +: 'int' and 'NoneType'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 99, in search_flight
    total_passengers = data.adults + data.children + data.infants
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
2025-07-24 11:39:54,513 - INFO - Searching flight for CDG → AUS on 2025-07-25
2025-07-24 11:39:54,514 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-25', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 11:39:55,126 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 13:13:33,818 - INFO - Searching flight for CDG → AUS on 2025-07-28
2025-07-24 13:13:33,820 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-28', 'return_date': '2025-07-30', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 13:13:35,612 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 13:14:03,158 - INFO - Searching flight for CDG → AUS on 2025-07-28
2025-07-24 13:14:03,159 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-28', 'return_date': '2025-07-30', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 13:14:03,681 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 13:14:03,683 - INFO - Searching flight for AUS → CDG on 2025-07-30
2025-07-24 13:14:03,684 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'AUS', 'arrival_id': 'CDG', 'outbound_date': '2025-07-30', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 13:14:05,064 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 13:17:40,621 - INFO - Searching flight for CDG → AUS on 2025-07-28
2025-07-24 13:17:40,622 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-28', 'return_date': '2025-07-30', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 13:17:41,184 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 13:17:46,848 - INFO - Searching flight for CDG → AUS on 2025-07-28
2025-07-24 13:17:46,849 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-28', 'return_date': '2025-07-30', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 13:17:47,406 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 13:22:32,365 - INFO - Searching flight for CDG → AUS on 2025-07-30
2025-07-24 13:22:32,366 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-30', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 13:22:33,961 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 13:24:00,660 - INFO - Searching flight for CDG → AUS on 2025-07-30
2025-07-24 13:24:00,661 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-30', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 13:24:01,264 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 13:24:09,215 - INFO - Searching flight for CDG → AUS on 2025-07-30
2025-07-24 13:24:09,216 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-30', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 13:24:09,760 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 13:25:14,748 - INFO - Searching flight for CDG → AUS on 2025-07-30
2025-07-24 13:25:14,749 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-30', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 13:25:15,264 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 15:09:51,792 - INFO - Searching flight for CDG → AUS on 2025-07-30
2025-07-24 15:09:51,794 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-30', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 15:09:58,641 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 15:29:19,069 - INFO - Searching flight for CDG → AUS on 2025-07-30
2025-07-24 15:29:19,071 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-30', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 15:29:19,865 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 15:29:30,403 - INFO - Searching flight for CDG → AUS on 2025-07-30
2025-07-24 15:29:30,404 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-30', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 15:29:31,096 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 15:44:20,948 - INFO - Searching flight for CDG → AUS on 2025-07-25
2025-07-24 15:44:20,952 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-25', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 15:44:22,651 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 16:15:25,556 - INFO - Searching flight for CDG → AUS on 2025-07-29
2025-07-24 16:15:25,558 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-29', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 16:15:45,794 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 16:30:07,475 - INFO - Searching flight for CDG → LHR on 2025-08-04
2025-07-24 16:30:07,477 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'LHR', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 16:30:09,311 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-24 16:30:21,931 - INFO - Searching flight for CDG → LHR on 2025-08-04
2025-07-24 16:30:21,932 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'LHR', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-24 16:30:22,598 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 11:00:55,807 - INFO - Searching flight for CDG → AUS on 2025-07-30
2025-07-25 11:00:55,812 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-30', 'return_date': '2025-07-27', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 11:00:56,518 - ERROR - search_flight error: SERP API error: 400 - {
  "error": "`return_date` cannot be earlier than `outbound_date`."
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 59, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 400 - {
  "error": "`return_date` cannot be earlier than `outbound_date`."
}
2025-07-25 11:02:33,848 - INFO - Searching flight for CDG → AUS on 2025-07-27
2025-07-25 11:02:33,848 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-27', 'return_date': '2025-07-30', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 11:02:35,186 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 11:02:49,920 - INFO - Searching flight for CDG → AUS on 2025-07-27
2025-07-25 11:02:49,921 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-27', 'return_date': '2025-07-30', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 11:02:50,462 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 12:57:01,399 - INFO - Searching flight for CDG → AUS on 2025-07-27
2025-07-25 12:57:01,401 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-27', 'return_date': '2025-07-30', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 12:57:02,739 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 12:57:03,365 - ERROR - search_flight error: name 'extensions' is not defined
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 111, in search_flight
    extensions=extensions  # 🆕 Set extensions
NameError: name 'extensions' is not defined
2025-07-25 12:57:06,983 - INFO - Searching flight for CDG → AUS on 2025-07-27
2025-07-25 12:57:06,984 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-27', 'return_date': '2025-07-30', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 12:57:07,524 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 12:57:08,181 - ERROR - search_flight error: name 'extensions' is not defined
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 111, in search_flight
    extensions=extensions  # 🆕 Set extensions
NameError: name 'extensions' is not defined
2025-07-25 12:57:13,116 - INFO - Searching flight for CDG → AUS on 2025-07-27
2025-07-25 12:57:13,117 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-27', 'return_date': '2025-07-30', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 12:57:13,631 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 12:57:14,262 - ERROR - search_flight error: name 'extensions' is not defined
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 111, in search_flight
    extensions=extensions  # 🆕 Set extensions
NameError: name 'extensions' is not defined
2025-07-25 12:57:19,581 - INFO - Searching flight for CDG → AUS on 2025-07-27
2025-07-25 12:57:19,582 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-27', 'return_date': '2025-07-30', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 12:57:20,107 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 12:57:20,748 - ERROR - search_flight error: name 'extensions' is not defined
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 111, in search_flight
    extensions=extensions  # 🆕 Set extensions
NameError: name 'extensions' is not defined
2025-07-25 12:59:02,918 - INFO - Searching flight for CDG → AUS on 2025-07-27
2025-07-25 12:59:02,920 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-27', 'return_date': '2025-07-30', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 12:59:03,452 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 12:59:04,055 - ERROR - search_flight error: 'SearchFlightInput' object has no attribute 'extensions'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 111, in search_flight
    extensions=data.extensions  # 🆕 Set extensions
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 991, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'SearchFlightInput' object has no attribute 'extensions'
2025-07-25 12:59:08,338 - INFO - Searching flight for CDG → AUS on 2025-07-27
2025-07-25 12:59:08,338 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-27', 'return_date': '2025-07-30', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 12:59:08,835 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 12:59:09,476 - ERROR - search_flight error: 'SearchFlightInput' object has no attribute 'extensions'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 111, in search_flight
    extensions=data.extensions  # 🆕 Set extensions
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 991, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'SearchFlightInput' object has no attribute 'extensions'
2025-07-25 12:59:14,540 - INFO - Searching flight for CDG → AUS on 2025-07-27
2025-07-25 12:59:14,541 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-27', 'return_date': '2025-07-30', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 12:59:15,078 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 12:59:15,717 - ERROR - search_flight error: 'SearchFlightInput' object has no attribute 'extensions'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 111, in search_flight
    extensions=data.extensions  # 🆕 Set extensions
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 991, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'SearchFlightInput' object has no attribute 'extensions'
2025-07-25 12:59:21,063 - INFO - Searching flight for CDG → AUS on 2025-07-27
2025-07-25 12:59:21,063 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-27', 'return_date': '2025-07-30', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 12:59:21,569 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 12:59:22,188 - ERROR - search_flight error: 'SearchFlightInput' object has no attribute 'extensions'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 111, in search_flight
    extensions=data.extensions  # 🆕 Set extensions
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 991, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'SearchFlightInput' object has no attribute 'extensions'
2025-07-25 14:00:51,663 - INFO - Searching flight for CDG → AUS on 2025-07-27
2025-07-25 14:00:51,664 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-27', 'return_date': '2025-07-30', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 14:00:54,240 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 14:01:26,773 - INFO - Searching flight for CDG → AUS on 2025-07-27
2025-07-25 14:01:26,774 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-07-27', 'return_date': '2025-07-30', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 14:01:27,341 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 16:23:59,353 - INFO - Searching flight for NBO → LHR on 2025-08-08
2025-07-25 16:23:59,353 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-08', 'return_date': '2025-08-19', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 16:24:00,750 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 16:24:18,693 - INFO - Searching flight for NBO → LHR on 2025-08-08
2025-07-25 16:24:18,694 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-08', 'return_date': '2025-08-19', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 16:24:19,287 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 16:39:23,433 - INFO - Searching flight for NBO → LHR on 2025-08-18
2025-07-25 16:39:23,434 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-18', 'return_date': '2025-08-29', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 16:39:25,943 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 16:56:44,950 - INFO - Searching flight for NBO → LHR on 2025-08-15
2025-07-25 16:56:44,951 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-15', 'return_date': '2025-08-30', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 16:56:48,374 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 16:56:48,376 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_token': 'WyJDalJJTmpoTGR6SnpiRWhVTVZsQlFtMU5WSGRDUnkwdExTMHRMUzB0Y0daaWFIY3lNMEZCUVVGQlIybEVhbEk0U0RCYVl6WkJFZ3hCUmpneU9YeEJSakUyT0RBYUN3aWsxd2dRQWhvRFZWTkVPQnh3cE5jSSIsW1siTkJPIiwiMjAyNS0wOC0xNSIsIkNERyIsbnVsbCwiQUYiLCI4MjkiXSxbIkNERyIsIjIwMjUtMDgtMTYiLCJMSFIiLG51bGwsIkFGIiwiMTY4MCJdXV0=', 'return_date': '2025-08-30', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 16:56:49,042 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_token': 'WyJDalJJTmpoTGR6SnpiRWhVTVZsQlFtMU5WSGRDUnkwdExTMHRMUzB0Y0daaWFIY3lNMEZCUVVGQlIybEVhbEk0U0RCYVl6WkJFZ3BSVWpFek5ESjhVVkl6R2dzSWphWUpFQUlhQTFWVFJEZ2NjSTJtQ1E9PSIsW1siTkJPIiwiMjAyNS0wOC0xNSIsIkRPSCIsbnVsbCwiUVIiLCIxMzQyIl0sWyJET0giLCIyMDI1LTA4LTE1IiwiTEhSIixudWxsLCJRUiIsIjMiXV1d', 'return_date': '2025-08-30', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 16:56:49,738 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_token': 'WyJDalJJTmpoTGR6SnpiRWhVTVZsQlFtMU5WSGRDUnkwdExTMHRMUzB0Y0daaWFIY3lNMEZCUVVGQlIybEVhbEk0U0RCYVl6WkJFZ1ZMVVRFd01Cb0xDTnFWQ3hBQ0dnTlZVMFE0SEhEYWxRcz0iLFtbIk5CTyIsIjIwMjUtMDgtMTUiLCJMSFIiLG51bGwsIktRIiwiMTAwIl1dXQ==', 'return_date': '2025-08-30', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 16:57:07,556 - INFO - Searching flight for NBO → LHR on 2025-08-15
2025-07-25 16:57:07,557 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-15', 'return_date': '2025-08-30', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 16:57:08,189 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 16:57:08,190 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_token': 'WyJDalJJTmpoTGR6SnpiRWhVTVZsQlFtMU5WSGRDUnkwdExTMHRMUzB0Y0daaWFIY3lNMEZCUVVGQlIybEVhbEk0U0RCYVl6WkJFZ3hCUmpneU9YeEJSakUyT0RBYUN3aWsxd2dRQWhvRFZWTkVPQnh3cE5jSSIsW1siTkJPIiwiMjAyNS0wOC0xNSIsIkNERyIsbnVsbCwiQUYiLCI4MjkiXSxbIkNERyIsIjIwMjUtMDgtMTYiLCJMSFIiLG51bGwsIkFGIiwiMTY4MCJdXV0=', 'return_date': '2025-08-30', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 16:57:08,840 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_token': 'WyJDalJJTmpoTGR6SnpiRWhVTVZsQlFtMU5WSGRDUnkwdExTMHRMUzB0Y0daaWFIY3lNMEZCUVVGQlIybEVhbEk0U0RCYVl6WkJFZ3BSVWpFek5ESjhVVkl6R2dzSWphWUpFQUlhQTFWVFJEZ2NjSTJtQ1E9PSIsW1siTkJPIiwiMjAyNS0wOC0xNSIsIkRPSCIsbnVsbCwiUVIiLCIxMzQyIl0sWyJET0giLCIyMDI1LTA4LTE1IiwiTEhSIixudWxsLCJRUiIsIjMiXV1d', 'return_date': '2025-08-30', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 16:57:09,500 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_token': 'WyJDalJJTmpoTGR6SnpiRWhVTVZsQlFtMU5WSGRDUnkwdExTMHRMUzB0Y0daaWFIY3lNMEZCUVVGQlIybEVhbEk0U0RCYVl6WkJFZ1ZMVVRFd01Cb0xDTnFWQ3hBQ0dnTlZVMFE0SEhEYWxRcz0iLFtbIk5CTyIsIjIwMjUtMDgtMTUiLCJMSFIiLG51bGwsIktRIiwiMTAwIl1dXQ==', 'return_date': '2025-08-30', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 17:13:08,710 - INFO - Searching flight for NBO → LHR on 2025-08-05
2025-07-25 17:13:08,711 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-05', 'return_date': '2025-08-13', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 17:13:10,854 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 17:13:10,857 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_token': 'WyJDalJJTjJOMk1raHhkbWgzWWtGQlEyZHFTRkZDUnkwdExTMHRMUzB0TFhscFltdGtOa0ZCUVVGQlIybEVhMUJWVFRObE5GbEJFZ3hSVWpFek5ESjhRa0V4TWpJYUN3ak8yUWdRQWhvRFZWTkVPQnh3enRrSSIsW1siTkJPIiwiMjAyNS0wOC0wNSIsIkRPSCIsbnVsbCwiUVIiLCIxMzQyIl0sWyJET0giLCIyMDI1LTA4LTA1IiwiTEhSIixudWxsLCJCQSIsIjEyMiJdXV0=', 'return_date': '2025-08-13', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 17:13:11,568 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_token': 'WyJDalJJTjJOMk1raHhkbWgzWWtGQlEyZHFTRkZDUnkwdExTMHRMUzB0TFhscFltdGtOa0ZCUVVGQlIybEVhMUJWVFRObE5GbEJFZ1JDUVRZMEdnc0l2ZGNLRUFJYUExVlRSRGdjY0wzWENnPT0iLFtbIk5CTyIsIjIwMjUtMDgtMDUiLCJMSFIiLG51bGwsIkJBIiwiNjQiXV1d', 'return_date': '2025-08-13', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 17:13:12,256 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_token': 'WyJDalJJTjJOMk1raHhkbWgzWWtGQlEyZHFTRkZDUnkwdExTMHRMUzB0TFhscFltdGtOa0ZCUVVGQlIybEVhMUJWVFRObE5GbEJFZ1ZMVVRFd01Cb0xDTWVBQ3hBQ0dnTlZVMFE0SEhESGdBcz0iLFtbIk5CTyIsIjIwMjUtMDgtMDUiLCJMSFIiLG51bGwsIktRIiwiMTAwIl1dXQ==', 'return_date': '2025-08-13', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 17:13:27,626 - INFO - Searching flight for NBO → LHR on 2025-08-05
2025-07-25 17:13:27,626 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-05', 'return_date': '2025-08-13', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 17:13:28,192 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 17:13:28,193 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_token': 'WyJDalJJTjJOMk1raHhkbWgzWWtGQlEyZHFTRkZDUnkwdExTMHRMUzB0TFhscFltdGtOa0ZCUVVGQlIybEVhMUJWVFRObE5GbEJFZ3hSVWpFek5ESjhRa0V4TWpJYUN3ak8yUWdRQWhvRFZWTkVPQnh3enRrSSIsW1siTkJPIiwiMjAyNS0wOC0wNSIsIkRPSCIsbnVsbCwiUVIiLCIxMzQyIl0sWyJET0giLCIyMDI1LTA4LTA1IiwiTEhSIixudWxsLCJCQSIsIjEyMiJdXV0=', 'return_date': '2025-08-13', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 17:13:28,877 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_token': 'WyJDalJJTjJOMk1raHhkbWgzWWtGQlEyZHFTRkZDUnkwdExTMHRMUzB0TFhscFltdGtOa0ZCUVVGQlIybEVhMUJWVFRObE5GbEJFZ1JDUVRZMEdnc0l2ZGNLRUFJYUExVlRSRGdjY0wzWENnPT0iLFtbIk5CTyIsIjIwMjUtMDgtMDUiLCJMSFIiLG51bGwsIkJBIiwiNjQiXV1d', 'return_date': '2025-08-13', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 17:13:29,510 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_token': 'WyJDalJJTjJOMk1raHhkbWgzWWtGQlEyZHFTRkZDUnkwdExTMHRMUzB0TFhscFltdGtOa0ZCUVVGQlIybEVhMUJWVFRObE5GbEJFZ1ZMVVRFd01Cb0xDTWVBQ3hBQ0dnTlZVMFE0SEhESGdBcz0iLFtbIk5CTyIsIjIwMjUtMDgtMDUiLCJMSFIiLG51bGwsIktRIiwiMTAwIl1dXQ==', 'return_date': '2025-08-13', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 17:21:01,992 - INFO - Searching flight for NBO → LHR on 2025-08-06
2025-07-25 17:21:01,993 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-06', 'return_date': '2025-08-10', 'type': 1, 'hl': 'en', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 17:21:05,042 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 17:21:05,043 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_token': 'WyJDalJJVmxkamMySnplVzlLTkhOQlJrTkdTMEZDUnkwdExTMHRMUzB0TFMxdmVXRXlNMEZCUVVGQlIybEVhM000VGpWaWNGTkJFZ3hUVGpRNU1YeFRUakl3T1RNYUN3am5pUVlRQWhvRFZWTkVPQnh3NTRrRyIsW1siTkJPIiwiMjAyNS0wOC0wNiIsIkJSVSIsbnVsbCwiU04iLCI0OTEiXSxbIkJSVSIsIjIwMjUtMDgtMDciLCJMSFIiLG51bGwsIlNOIiwiMjA5MyJdXV0=', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 17:21:05,796 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_token': 'WyJDalJJVmxkamMySnplVzlLTkhOQlJrTkdTMEZDUnkwdExTMHRMUzB0TFMxdmVXRXlNMEZCUVVGQlIybEVhM000VGpWaWNGTkJFZ3hSVWpFek5ESjhRa0V4TWpJYUN3aWlpUWtRQWhvRFZWTkVPQnh3b29rSiIsW1siTkJPIiwiMjAyNS0wOC0wNiIsIkRPSCIsbnVsbCwiUVIiLCIxMzQyIl0sWyJET0giLCIyMDI1LTA4LTA2IiwiTEhSIixudWxsLCJCQSIsIjEyMiJdXV0=', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 17:21:06,471 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_token': 'WyJDalJJVmxkamMySnplVzlLTkhOQlJrTkdTMEZDUnkwdExTMHRMUzB0TFMxdmVXRXlNMEZCUVVGQlIybEVhM000VGpWaWNGTkJFZ1JDUVRZMEdnc0l4dTBMRUFJYUExVlRSRGdjY01idEN3PT0iLFtbIk5CTyIsIjIwMjUtMDgtMDYiLCJMSFIiLG51bGwsIkJBIiwiNjQiXV1d', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 20:00:19,906 - INFO - Searching flight for NBO → LHR on 2025-08-04
2025-07-25 20:00:19,907 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-04', 'return_date': '2025-08-06', 'type': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 20:00:21,852 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 20:00:21,854 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-04', 'return_date': '2025-08-06', 'departure_token': 'WyJDalJJU0ROVk5FdzRjWFF4YW1kQlEyMXZNVUZDUnkwdExTMHRMUzB0TFhCcVltNWxOMEZCUVVGQlIybEVkVU5WUjFWRWVsZEJFZ3hUVGpRNE1ueFRUakl3T1RNYUN3alpnQWdRQWhvRFZWTkVPQnh3MllBSSIsW1siTkJPIiwiMjAyNS0wOC0wNCIsIkJSVSIsbnVsbCwiU04iLCI0ODIiXSxbIkJSVSIsIjIwMjUtMDgtMDUiLCJMSFIiLG51bGwsIlNOIiwiMjA5MyJdXV0=', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 20:00:25,045 - INFO - Return flight data: {'search_metadata': {'id': '6883b826f357f615e72e8fb4', 'status': 'Success', 'json_endpoint': 'https://serpapi.com/searches/7a262c87139fd77d/6883b826f357f615e72e8fb4.json', 'created_at': '2025-07-25 17:00:22 UTC', 'processed_at': '2025-07-25 17:00:22 UTC', 'google_flights_url': 'https://www.google.com/travel/flights?hl=en&gl=us&curr=USD&tfs=CBwQAhphEgoyMDI1LTA4LTA0Ih8KA05CTxIKMjAyNS0wOC0wNBoDQlJVKgJTTjIDNDgyIiAKA0JSVRIKMjAyNS0wOC0wNRoDTEhSKgJTTjIEMjA5M2oHCAESA05CT3IHCAESA0xIUhoeEgoyMDI1LTA4LTA2agcIARIDTEhScgcIARIDTkJPQgEBSAFwAZgBAQ&tfu=EgIIAQ', 'raw_html_file': 'https://serpapi.com/searches/7a262c87139fd77d/6883b826f357f615e72e8fb4.html', 'prettify_html_file': 'https://serpapi.com/searches/7a262c87139fd77d/6883b826f357f615e72e8fb4.prettify', 'total_time_taken': 2.52}, 'search_parameters': {'engine': 'google_flights', 'hl': 'en', 'gl': 'us', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-04', 'return_date': '2025-08-06', 'departure_token': 'WyJDalJJU0ROVk5FdzRjWFF4YW1kQlEyMXZNVUZDUnkwdExTMHRMUzB0TFhCcVltNWxOMEZCUVVGQlIybEVkVU5WUjFWRWVsZEJFZ3hUVGpRNE1ueFRUakl3T1RNYUN3alpnQWdRQWhvRFZWTkVPQnh3MllBSSIsW1siTkJPIiwiMjAyNS0wOC0wNCIsIkJSVSIsbnVsbCwiU04iLCI0ODIiXSxbIkJSVSIsIjIwMjUtMDgtMDUiLCJMSFIiLG51bGwsIlNOIiwiMjA5MyJdXV0=', 'currency': 'USD'}, 'other_flights': [{'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-06 06:40'}, 'arrival_airport': {'name': 'Brussels Airport', 'id': 'BRU', 'time': '2025-08-06 08:40'}, 'duration': 60, 'airplane': 'Airbus A320neo', 'airline': 'Brussels Airlines', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SN.png', 'travel_class': 'Economy', 'flight_number': 'SN 2104', 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'Carbon emissions estimate: 47 kg']}, {'departure_airport': {'name': 'Brussels Airport', 'id': 'BRU', 'time': '2025-08-06 10:25'}, 'arrival_airport': {'name': 'Kigali International Airport', 'id': 'KGL', 'time': '2025-08-06 18:55'}, 'duration': 510, 'airplane': 'Airbus A330', 'airline': 'Brussels Airlines', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SN.png', 'travel_class': 'Economy', 'flight_number': 'SN 491', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 476 kg'], 'often_delayed_by_over_30_min': True}, {'departure_airport': {'name': 'Kigali International Airport', 'id': 'KGL', 'time': '2025-08-06 20:00'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-06 22:30'}, 'duration': 90, 'airplane': 'Airbus A330', 'airline': 'Brussels Airlines', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SN.png', 'travel_class': 'Economy', 'flight_number': 'SN 491', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 103 kg'], 'often_delayed_by_over_30_min': True}], 'layovers': [{'duration': 105, 'name': 'Brussels Airport', 'id': 'BRU'}, {'duration': 65, 'name': 'Kigali International Airport', 'id': 'KGL'}], 'total_duration': 830, 'carbon_emissions': {'this_flight': 627000, 'typical_for_this_route': 443000, 'difference_percent': 42}, 'price': 1312, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SN.png', 'booking_token': 'WyJDalJJU21kM1dFMDBWa28xU1dOQlFVRTVka0ZDUnkwdExTMHRMUzB0TFMwdGVXeG9NVUZCUVVGQlIybEVkVU5qUTIxcVlrbEJFaEpUVGpJeE1EUjhVMDQwT1RGOFUwNDBPVEVhQ3dqWmdBZ1FBaG9EVlZORU9CeHcyWUFJIixbWyJOQk8iLCIyMDI1LTA4LTA0IiwiQlJVIixudWxsLCJTTiIsIjQ4MiJdLFsiQlJVIiwiMjAyNS0wOC0wNSIsIkxIUiIsbnVsbCwiU04iLCIyMDkzIl1dLFtbIkxIUiIsIjIwMjUtMDgtMDYiLCJCUlUiLG51bGwsIlNOIiwiMjEwNCJdLFsiQlJVIiwiMjAyNS0wOC0wNiIsIktHTCIsbnVsbCwiU04iLCI0OTEiXSxbIktHTCIsIjIwMjUtMDgtMDYiLCJOQk8iLG51bGwsIlNOIiwiNDkxIl1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-06 13:45'}, 'arrival_airport': {'name': 'Zurich Airport', 'id': 'ZRH', 'time': '2025-08-06 16:30'}, 'duration': 105, 'airplane': 'Airbus A220-300 Passenger', 'airline': 'SWISS', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LX.png', 'travel_class': 'Economy', 'flight_number': 'LX 333', 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'Carbon emissions estimate: 91 kg'], 'often_delayed_by_over_30_min': True}, {'departure_airport': {'name': 'Zurich Airport', 'id': 'ZRH', 'time': '2025-08-06 17:55'}, 'arrival_airport': {'name': 'Brussels Airport', 'id': 'BRU', 'time': '2025-08-06 19:15'}, 'duration': 80, 'airplane': 'Airbus A320neo', 'airline': 'SWISS', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LX.png', 'travel_class': 'Economy', 'flight_number': 'LX 788', 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'Carbon emissions estimate: 53 kg']}, {'departure_airport': {'name': 'Brussels Airport', 'id': 'BRU', 'time': '2025-08-07 10:25'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-07 20:20'}, 'duration': 535, 'airplane': 'Airbus A330', 'airline': 'Brussels Airlines', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SN.png', 'travel_class': 'Economy', 'flight_number': 'SN 481', 'ticket_also_sold_by': ['SWISS'], 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 497 kg']}], 'layovers': [{'duration': 85, 'name': 'Zurich Airport', 'id': 'ZRH'}, {'duration': 910, 'name': 'Brussels Airport', 'id': 'BRU', 'overnight': True}], 'total_duration': 1715, 'carbon_emissions': {'this_flight': 642000, 'typical_for_this_route': 443000, 'difference_percent': 45}, 'price': 1381, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'booking_token': 'WyJDalJJU21kM1dFMDBWa28xU1dOQlFVRTVka0ZDUnkwdExTMHRMUzB0TFMwdGVXeG9NVUZCUVVGQlIybEVkVU5qUTIxcVlrbEJFaEZNV0RNek0zeE1XRGM0T0h4VFRqUTRNUm9MQ0tlMkNCQUNHZ05WVTBRNEhIQ250Z2c9IixbWyJOQk8iLCIyMDI1LTA4LTA0IiwiQlJVIixudWxsLCJTTiIsIjQ4MiJdLFsiQlJVIiwiMjAyNS0wOC0wNSIsIkxIUiIsbnVsbCwiU04iLCIyMDkzIl1dLFtbIkxIUiIsIjIwMjUtMDgtMDYiLCJaUkgiLG51bGwsIkxYIiwiMzMzIl0sWyJaUkgiLCIyMDI1LTA4LTA2IiwiQlJVIixudWxsLCJMWCIsIjc4OCJdLFsiQlJVIiwiMjAyNS0wOC0wNyIsIk5CTyIsbnVsbCwiU04iLCI0ODEiXV1d'}, {'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-06 11:05'}, 'arrival_airport': {'name': 'Brussels Airport', 'id': 'BRU', 'time': '2025-08-06 13:15'}, 'duration': 70, 'airplane': 'Airbus A320neo', 'airline': 'Brussels Airlines', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SN.png', 'travel_class': 'Economy', 'flight_number': 'SN 2094', 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'Carbon emissions estimate: 47 kg'], 'often_delayed_by_over_30_min': True}, {'departure_airport': {'name': 'Brussels Airport', 'id': 'BRU', 'time': '2025-08-07 10:25'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-07 20:20'}, 'duration': 535, 'airplane': 'Airbus A330', 'airline': 'Brussels Airlines', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SN.png', 'travel_class': 'Economy', 'flight_number': 'SN 481', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 497 kg']}], 'layovers': [{'duration': 1270, 'name': 'Brussels Airport', 'id': 'BRU', 'overnight': True}], 'total_duration': 1875, 'carbon_emissions': {'this_flight': 545000, 'typical_for_this_route': 443000, 'difference_percent': 23}, 'price': 1426, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SN.png', 'booking_token': 'WyJDalJJU21kM1dFMDBWa28xU1dOQlFVRTVka0ZDUnkwdExTMHRMUzB0TFMwdGVXeG9NVUZCUVVGQlIybEVkVU5qUTIxcVlrbEJFZ3hUVGpJd09UUjhVMDQwT0RFYUN3aTQyUWdRQWhvRFZWTkVPQnh3dU5rSSIsW1siTkJPIiwiMjAyNS0wOC0wNCIsIkJSVSIsbnVsbCwiU04iLCI0ODIiXSxbIkJSVSIsIjIwMjUtMDgtMDUiLCJMSFIiLG51bGwsIlNOIiwiMjA5MyJdXSxbWyJMSFIiLCIyMDI1LTA4LTA2IiwiQlJVIixudWxsLCJTTiIsIjIwOTQiXSxbIkJSVSIsIjIwMjUtMDgtMDciLCJOQk8iLG51bGwsIlNOIiwiNDgxIl1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-06 07:30'}, 'arrival_airport': {'name': 'Frankfurt Airport', 'id': 'FRA', 'time': '2025-08-06 10:05'}, 'duration': 95, 'airplane': 'Airbus A320neo', 'airline': 'Lufthansa', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LH.png', 'travel_class': 'Economy', 'flight_number': 'LH 923', 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'In-seat USB outlet', 'Carbon emissions estimate: 65 kg']}, {'departure_airport': {'name': 'Frankfurt Airport', 'id': 'FRA', 'time': '2025-08-06 11:25'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-06 20:55'}, 'duration': 510, 'airplane': 'Airbus A330', 'airline': 'Lufthansa', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LH.png', 'travel_class': 'Economy', 'flight_number': 'LH 590', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 348 kg'], 'often_delayed_by_over_30_min': True}], 'layovers': [{'duration': 80, 'name': 'Frankfurt Airport', 'id': 'FRA'}], 'total_duration': 685, 'carbon_emissions': {'this_flight': 414000, 'typical_for_this_route': 443000, 'difference_percent': -7}, 'price': 1983, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LH.png', 'booking_token': 'WyJDalJJU21kM1dFMDBWa28xU1dOQlFVRTVka0ZDUnkwdExTMHRMUzB0TFMwdGVXeG9NVUZCUVVGQlIybEVkVU5qUTIxcVlrbEJFZzFNU0RreU0zeE1TRFU1TUNNeEdnc0l3WXdNRUFJYUExVlRSRGdjY01HTURBPT0iLFtbIk5CTyIsIjIwMjUtMDgtMDQiLCJCUlUiLG51bGwsIlNOIiwiNDgyIl0sWyJCUlUiLCIyMDI1LTA4LTA1IiwiTEhSIixudWxsLCJTTiIsIjIwOTMiXV0sW1siTEhSIiwiMjAyNS0wOC0wNiIsIkZSQSIsbnVsbCwiTEgiLCI5MjMiXSxbIkZSQSIsIjIwMjUtMDgtMDYiLCJOQk8iLG51bGwsIkxIIiwiNTkwIl1dXQ=='}], 'airports': [{'departure': [{'airport': {'id': 'NBO', 'name': 'Jomo Kenyatta International Airport'}, 'city': 'Nairobi', 'country': 'Kenya', 'country_code': 'KE', 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJgZqWThMIEJU8EWQEL8hcZzOxK1ji3sApa3zoxjauXUyMyo3Z-u8UadAGGFTbn-dBXo--CTTj0KZ_wA', 'thumbnail': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTiiP2SZ4AOi4upmoXyQxaTnv4I_mlus1h5eHLAJelOHJyebwFv1wZLRfZP64SRn5UoHyVRVPyaZq_3DW7HeoVYSuvu5_o9WnJ50NlaMVw'}], 'arrival': [{'airport': {'id': 'LHR', 'name': 'Heathrow Airport'}, 'city': 'London', 'country': 'United Kingdom', 'country_code': 'GB', 'image': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRpN9RbtOSTDqKIPxWc_D6rdSysaWVh6d-NW7yz7yFXKRwh5RN5BpNIoXEwH1XVcFdLWqn6Sm8_Y_zmeg', 'thumbnail': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYH83YXny8hR4M7k5BMFq4vUT6LNtVABQzgs2pg-hcpSZq3oMBOQK3xh591AAJv2Qx4uvFZUGqOVt4kuoCUOklISunmndJleOoSef_7QE'}]}, {'departure': [{'airport': {'id': 'LHR', 'name': 'Heathrow Airport'}, 'city': 'London', 'country': 'United Kingdom', 'country_code': 'GB', 'image': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRpN9RbtOSTDqKIPxWc_D6rdSysaWVh6d-NW7yz7yFXKRwh5RN5BpNIoXEwH1XVcFdLWqn6Sm8_Y_zmeg', 'thumbnail': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYH83YXny8hR4M7k5BMFq4vUT6LNtVABQzgs2pg-hcpSZq3oMBOQK3xh591AAJv2Qx4uvFZUGqOVt4kuoCUOklISunmndJleOoSef_7QE'}], 'arrival': [{'airport': {'id': 'NBO', 'name': 'Jomo Kenyatta International Airport'}, 'city': 'Nairobi', 'country': 'Kenya', 'country_code': 'KE', 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJgZqWThMIEJU8EWQEL8hcZzOxK1ji3sApa3zoxjauXUyMyo3Z-u8UadAGGFTbn-dBXo--CTTj0KZ_wA', 'thumbnail': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTiiP2SZ4AOi4upmoXyQxaTnv4I_mlus1h5eHLAJelOHJyebwFv1wZLRfZP64SRn5UoHyVRVPyaZq_3DW7HeoVYSuvu5_o9WnJ50NlaMVw'}]}]}
2025-07-25 20:00:25,057 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-04', 'return_date': '2025-08-06', 'departure_token': 'WyJDalJJU0ROVk5FdzRjWFF4YW1kQlEyMXZNVUZDUnkwdExTMHRMUzB0TFhCcVltNWxOMEZCUVVGQlIybEVkVU5WUjFWRWVsZEJFZ3RGVkRNd09YeEZWRGN4TUJvTENLQ1hDQkFDR2dOVlUwUTRISENnbHdnPSIsW1siTkJPIiwiMjAyNS0wOC0wNCIsIkFERCIsbnVsbCwiRVQiLCIzMDkiXSxbIkFERCIsIjIwMjUtMDgtMDQiLCJMSFIiLG51bGwsIkVUIiwiNzEwIl1dXQ==', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 20:00:28,614 - INFO - Return flight data: {'search_metadata': {'id': '6883b829f73581ebe8ffc637', 'status': 'Success', 'json_endpoint': 'https://serpapi.com/searches/7a262c87139fd77d/6883b829f73581ebe8ffc637.json', 'created_at': '2025-07-25 17:00:25 UTC', 'processed_at': '2025-07-25 17:00:25 UTC', 'google_flights_url': 'https://www.google.com/travel/flights?hl=en&gl=us&curr=USD&tfs=CBwQAhpgEgoyMDI1LTA4LTA0Ih8KA05CTxIKMjAyNS0wOC0wNBoDQUREKgJFVDIDMzA5Ih8KA0FERBIKMjAyNS0wOC0wNBoDTEhSKgJFVDIDNzEwagcIARIDTkJPcgcIARIDTEhSGh4SCjIwMjUtMDgtMDZqBwgBEgNMSFJyBwgBEgNOQk9CAQFIAXABmAEB&tfu=EgIIAQ', 'raw_html_file': 'https://serpapi.com/searches/7a262c87139fd77d/6883b829f73581ebe8ffc637.html', 'prettify_html_file': 'https://serpapi.com/searches/7a262c87139fd77d/6883b829f73581ebe8ffc637.prettify', 'total_time_taken': 3.0}, 'search_parameters': {'engine': 'google_flights', 'hl': 'en', 'gl': 'us', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-04', 'return_date': '2025-08-06', 'departure_token': 'WyJDalJJU0ROVk5FdzRjWFF4YW1kQlEyMXZNVUZDUnkwdExTMHRMUzB0TFhCcVltNWxOMEZCUVVGQlIybEVkVU5WUjFWRWVsZEJFZ3RGVkRNd09YeEZWRGN4TUJvTENLQ1hDQkFDR2dOVlUwUTRISENnbHdnPSIsW1siTkJPIiwiMjAyNS0wOC0wNCIsIkFERCIsbnVsbCwiRVQiLCIzMDkiXSxbIkFERCIsIjIwMjUtMDgtMDQiLCJMSFIiLG51bGwsIkVUIiwiNzEwIl1dXQ==', 'currency': 'USD'}, 'other_flights': [{'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-06 21:00'}, 'arrival_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2025-08-07 06:45'}, 'duration': 465, 'airplane': 'Airbus A350', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 701', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 329 kg'], 'overnight': True}, {'departure_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2025-08-07 10:45'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-07 13:10'}, 'duration': 145, 'airplane': 'Airbus A350', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 318', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 94 kg']}], 'layovers': [{'duration': 240, 'name': 'Bole Addis Ababa International Airport', 'id': 'ADD'}], 'total_duration': 850, 'carbon_emissions': {'this_flight': 423000, 'typical_for_this_route': 443000, 'difference_percent': -5}, 'price': 1341, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'booking_token': 'WyJDalJJUTFCVGJsOUpjbVpOY205QlJERkJRVkZDUnkwdExTMHRMUzB0TFMxNWJHOXNOVUZCUVVGQlIybEVkVU56UlhGWlpubEJFZzFGVkRjd01YeEZWRE14T0NNeEdnc0luNWNJRUFJYUExVlRSRGdjY0orWENBPT0iLFtbIk5CTyIsIjIwMjUtMDgtMDQiLCJBREQiLG51bGwsIkVUIiwiMzA5Il0sWyJBREQiLCIyMDI1LTA4LTA0IiwiTEhSIixudWxsLCJFVCIsIjcxMCJdXSxbWyJMSFIiLCIyMDI1LTA4LTA2IiwiQUREIixudWxsLCJFVCIsIjcwMSJdLFsiQUREIiwiMjAyNS0wOC0wNyIsIk5CTyIsbnVsbCwiRVQiLCIzMTgiXV1d'}, {'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-06 18:30'}, 'arrival_airport': {'name': 'Frankfurt Airport', 'id': 'FRA', 'time': '2025-08-06 21:05'}, 'duration': 95, 'airplane': 'Airbus A320neo', 'airline': 'Lufthansa', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/LH.png', 'travel_class': 'Economy', 'flight_number': 'LH 917', 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'In-seat USB outlet', 'Carbon emissions estimate: 65 kg'], 'often_delayed_by_over_30_min': True}, {'departure_airport': {'name': 'Frankfurt Airport', 'id': 'FRA', 'time': '2025-08-06 22:05'}, 'arrival_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2025-08-07 05:55'}, 'duration': 410, 'airplane': 'Airbus A350', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 707', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 316 kg'], 'overnight': True}, {'departure_airport': {'name': 'Bole Addis Ababa International Airport', 'id': 'ADD', 'time': '2025-08-07 10:45'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-07 13:10'}, 'duration': 145, 'airplane': 'Airbus A350', 'airline': 'Ethiopian', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', 'travel_class': 'Economy', 'flight_number': 'ET 318', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 94 kg']}], 'layovers': [{'duration': 60, 'name': 'Frankfurt Airport', 'id': 'FRA'}, {'duration': 290, 'name': 'Bole Addis Ababa International Airport', 'id': 'ADD'}], 'total_duration': 1000, 'carbon_emissions': {'this_flight': 476000, 'typical_for_this_route': 443000, 'difference_percent': 7}, 'price': 1654, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'booking_token': 'WyJDalJJUTFCVGJsOUpjbVpOY205QlJERkJRVkZDUnkwdExTMHRMUzB0TFMxNWJHOXNOVUZCUVVGQlIybEVkVU56UlhGWlpubEJFaEZNU0RreE4zeEZWRGN3TjN4RlZETXhPQm9MQ1BtTENoQUNHZ05WVTBRNEhIRDVpd289IixbWyJOQk8iLCIyMDI1LTA4LTA0IiwiQUREIixudWxsLCJFVCIsIjMwOSJdLFsiQUREIiwiMjAyNS0wOC0wNCIsIkxIUiIsbnVsbCwiRVQiLCI3MTAiXV0sW1siTEhSIiwiMjAyNS0wOC0wNiIsIkZSQSIsbnVsbCwiTEgiLCI5MTciXSxbIkZSQSIsIjIwMjUtMDgtMDYiLCJBREQiLG51bGwsIkVUIiwiNzA3Il0sWyJBREQiLCIyMDI1LTA4LTA3IiwiTkJPIixudWxsLCJFVCIsIjMxOCJdXV0='}], 'airports': [{'departure': [{'airport': {'id': 'NBO', 'name': 'Jomo Kenyatta International Airport'}, 'city': 'Nairobi', 'country': 'Kenya', 'country_code': 'KE', 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJgZqWThMIEJU8EWQEL8hcZzOxK1ji3sApa3zoxjauXUyMyo3Z-u8UadAGGFTbn-dBXo--CTTj0KZ_wA', 'thumbnail': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTiiP2SZ4AOi4upmoXyQxaTnv4I_mlus1h5eHLAJelOHJyebwFv1wZLRfZP64SRn5UoHyVRVPyaZq_3DW7HeoVYSuvu5_o9WnJ50NlaMVw'}], 'arrival': [{'airport': {'id': 'LHR', 'name': 'Heathrow Airport'}, 'city': 'London', 'country': 'United Kingdom', 'country_code': 'GB', 'image': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRpN9RbtOSTDqKIPxWc_D6rdSysaWVh6d-NW7yz7yFXKRwh5RN5BpNIoXEwH1XVcFdLWqn6Sm8_Y_zmeg', 'thumbnail': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYH83YXny8hR4M7k5BMFq4vUT6LNtVABQzgs2pg-hcpSZq3oMBOQK3xh591AAJv2Qx4uvFZUGqOVt4kuoCUOklISunmndJleOoSef_7QE'}]}, {'departure': [{'airport': {'id': 'LHR', 'name': 'Heathrow Airport'}, 'city': 'London', 'country': 'United Kingdom', 'country_code': 'GB', 'image': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRpN9RbtOSTDqKIPxWc_D6rdSysaWVh6d-NW7yz7yFXKRwh5RN5BpNIoXEwH1XVcFdLWqn6Sm8_Y_zmeg', 'thumbnail': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYH83YXny8hR4M7k5BMFq4vUT6LNtVABQzgs2pg-hcpSZq3oMBOQK3xh591AAJv2Qx4uvFZUGqOVt4kuoCUOklISunmndJleOoSef_7QE'}], 'arrival': [{'airport': {'id': 'NBO', 'name': 'Jomo Kenyatta International Airport'}, 'city': 'Nairobi', 'country': 'Kenya', 'country_code': 'KE', 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJgZqWThMIEJU8EWQEL8hcZzOxK1ji3sApa3zoxjauXUyMyo3Z-u8UadAGGFTbn-dBXo--CTTj0KZ_wA', 'thumbnail': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTiiP2SZ4AOi4upmoXyQxaTnv4I_mlus1h5eHLAJelOHJyebwFv1wZLRfZP64SRn5UoHyVRVPyaZq_3DW7HeoVYSuvu5_o9WnJ50NlaMVw'}]}]}
2025-07-25 20:00:28,621 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-04', 'return_date': '2025-08-06', 'departure_token': 'WyJDalJJU0ROVk5FdzRjWFF4YW1kQlEyMXZNVUZDUnkwdExTMHRMUzB0TFhCcVltNWxOMEZCUVVGQlIybEVkVU5WUjFWRWVsZEJFZ1ZMVVRFd01Cb0xDSW1XRHhBQ0dnTlZVMFE0SEhDSmxnOD0iLFtbIk5CTyIsIjIwMjUtMDgtMDQiLCJMSFIiLG51bGwsIktRIiwiMTAwIl1dXQ==', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 20:00:32,910 - INFO - Return flight data: {'search_metadata': {'id': '6883b82dfda6070428fb5696', 'status': 'Success', 'json_endpoint': 'https://serpapi.com/searches/7a262c87139fd77d/6883b82dfda6070428fb5696.json', 'created_at': '2025-07-25 17:00:29 UTC', 'processed_at': '2025-07-25 17:00:29 UTC', 'google_flights_url': 'https://www.google.com/travel/flights?hl=en&gl=us&curr=USD&tfs=CBwQAho_EgoyMDI1LTA4LTA0Ih8KA05CTxIKMjAyNS0wOC0wNBoDTEhSKgJLUTIDMTAwagcIARIDTkJPcgcIARIDTEhSGh4SCjIwMjUtMDgtMDZqBwgBEgNMSFJyBwgBEgNOQk9CAQFIAXABmAEB&tfu=EgIIAQ', 'raw_html_file': 'https://serpapi.com/searches/7a262c87139fd77d/6883b82dfda6070428fb5696.html', 'prettify_html_file': 'https://serpapi.com/searches/7a262c87139fd77d/6883b82dfda6070428fb5696.prettify', 'total_time_taken': 3.72}, 'search_parameters': {'engine': 'google_flights', 'hl': 'en', 'gl': 'us', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-04', 'return_date': '2025-08-06', 'departure_token': 'WyJDalJJU0ROVk5FdzRjWFF4YW1kQlEyMXZNVUZDUnkwdExTMHRMUzB0TFhCcVltNWxOMEZCUVVGQlIybEVkVU5WUjFWRWVsZEJFZ1ZMVVRFd01Cb0xDSW1XRHhBQ0dnTlZVMFE0SEhDSmxnOD0iLFtbIk5CTyIsIjIwMjUtMDgtMDQiLCJMSFIiLG51bGwsIktRIiwiMTAwIl1dXQ==', 'currency': 'USD'}, 'other_flights': [{'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-06 06:15'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2025-08-06 08:35'}, 'duration': 80, 'airplane': 'Airbus A220-300 Passenger', 'airline': 'Air France', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/AF.png', 'travel_class': 'Economy', 'flight_number': 'AF 1381', 'ticket_also_sold_by': ['Kenya Airways'], 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'Carbon emissions estimate: 57 kg']}, {'departure_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2025-08-06 10:45'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-06 20:10'}, 'duration': 505, 'airplane': 'Boeing 787', 'airline': 'Kenya Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/KQ.png', 'travel_class': 'Economy', 'flight_number': 'KQ 113', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 401 kg']}], 'layovers': [{'duration': 130, 'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG'}], 'total_duration': 715, 'carbon_emissions': {'this_flight': 458000, 'typical_for_this_route': 443000, 'difference_percent': 3}, 'price': 1973, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'booking_token': 'WyJDalJJTW1KcFJFOHRRelJ4U25OQlJIcFhVa0ZDUnkwdExTMHRMUzB0TFhsc2JHSXhPRUZCUVVGQlIybEVkVU13U3pCTGFHVkJFZzVCUmpFek9ERjhTMUV4TVRNak1Sb0xDSUtGREJBQ0dnTlZVMFE0SEhDQ2hRdz0iLFtbIk5CTyIsIjIwMjUtMDgtMDQiLCJMSFIiLG51bGwsIktRIiwiMTAwIl1dLFtbIkxIUiIsIjIwMjUtMDgtMDYiLCJDREciLG51bGwsIkFGIiwiMTM4MSJdLFsiQ0RHIiwiMjAyNS0wOC0wNiIsIk5CTyIsbnVsbCwiS1EiLCIxMTMiXV1d'}, {'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-06 17:10'}, 'arrival_airport': {'name': 'Amsterdam Airport Schiphol', 'id': 'AMS', 'time': '2025-08-06 19:30'}, 'duration': 80, 'airplane': 'Embraer 195 E2', 'airline': 'KLM', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/KL.png', 'travel_class': 'Economy', 'flight_number': 'KL 1012', 'ticket_also_sold_by': ['Kenya Airways'], 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'In-seat USB outlet', 'Carbon emissions estimate: 53 kg']}, {'departure_airport': {'name': 'Amsterdam Airport Schiphol', 'id': 'AMS', 'time': '2025-08-06 20:35'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-07 06:10'}, 'duration': 515, 'airplane': 'Boeing 787', 'airline': 'Kenya Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/KQ.png', 'travel_class': 'Economy', 'flight_number': 'KQ 117', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 404 kg'], 'overnight': True}], 'layovers': [{'duration': 65, 'name': 'Amsterdam Airport Schiphol', 'id': 'AMS'}], 'total_duration': 660, 'carbon_emissions': {'this_flight': 459000, 'typical_for_this_route': 443000, 'difference_percent': 4}, 'price': 2403, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'booking_token': 'WyJDalJJTW1KcFJFOHRRelJ4U25OQlJIcFhVa0ZDUnkwdExTMHRMUzB0TFhsc2JHSXhPRUZCUVVGQlIybEVkVU13U3pCTGFHVkJFZ3hMVERFd01USjhTMUV4TVRjYUN3amoxQTRRQWhvRFZWTkVPQnh3NDlRTyIsW1siTkJPIiwiMjAyNS0wOC0wNCIsIkxIUiIsbnVsbCwiS1EiLCIxMDAiXV0sW1siTEhSIiwiMjAyNS0wOC0wNiIsIkFNUyIsbnVsbCwiS0wiLCIxMDEyIl0sWyJBTVMiLCIyMDI1LTA4LTA2IiwiTkJPIixudWxsLCJLUSIsIjExNyJdXV0='}, {'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-06 18:25'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-07 05:00'}, 'duration': 515, 'airplane': 'Boeing 787', 'airline': 'Kenya Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/KQ.png', 'travel_class': 'Economy', 'flight_number': 'KQ 101', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 419 kg'], 'overnight': True}], 'total_duration': 515, 'carbon_emissions': {'this_flight': 420000, 'typical_for_this_route': 443000, 'difference_percent': -5}, 'price': 2569, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/KQ.png', 'booking_token': 'WyJDalJJTW1KcFJFOHRRelJ4U25OQlJIcFhVa0ZDUnkwdExTMHRMUzB0TFhsc2JHSXhPRUZCUVVGQlIybEVkVU13U3pCTGFHVkJFZ2RMVVRFd01TTXhHZ3NJdWRZUEVBSWFBMVZUUkRnY2NMbldEdz09IixbWyJOQk8iLCIyMDI1LTA4LTA0IiwiTEhSIixudWxsLCJLUSIsIjEwMCJdXSxbWyJMSFIiLCIyMDI1LTA4LTA2IiwiTkJPIixudWxsLCJLUSIsIjEwMSJdXV0='}], 'airports': [{'departure': [{'airport': {'id': 'NBO', 'name': 'Jomo Kenyatta International Airport'}, 'city': 'Nairobi', 'country': 'Kenya', 'country_code': 'KE', 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJgZqWThMIEJU8EWQEL8hcZzOxK1ji3sApa3zoxjauXUyMyo3Z-u8UadAGGFTbn-dBXo--CTTj0KZ_wA', 'thumbnail': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTiiP2SZ4AOi4upmoXyQxaTnv4I_mlus1h5eHLAJelOHJyebwFv1wZLRfZP64SRn5UoHyVRVPyaZq_3DW7HeoVYSuvu5_o9WnJ50NlaMVw'}], 'arrival': [{'airport': {'id': 'LHR', 'name': 'Heathrow Airport'}, 'city': 'London', 'country': 'United Kingdom', 'country_code': 'GB', 'image': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRpN9RbtOSTDqKIPxWc_D6rdSysaWVh6d-NW7yz7yFXKRwh5RN5BpNIoXEwH1XVcFdLWqn6Sm8_Y_zmeg', 'thumbnail': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYH83YXny8hR4M7k5BMFq4vUT6LNtVABQzgs2pg-hcpSZq3oMBOQK3xh591AAJv2Qx4uvFZUGqOVt4kuoCUOklISunmndJleOoSef_7QE'}]}, {'departure': [{'airport': {'id': 'LHR', 'name': 'Heathrow Airport'}, 'city': 'London', 'country': 'United Kingdom', 'country_code': 'GB', 'image': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRpN9RbtOSTDqKIPxWc_D6rdSysaWVh6d-NW7yz7yFXKRwh5RN5BpNIoXEwH1XVcFdLWqn6Sm8_Y_zmeg', 'thumbnail': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYH83YXny8hR4M7k5BMFq4vUT6LNtVABQzgs2pg-hcpSZq3oMBOQK3xh591AAJv2Qx4uvFZUGqOVt4kuoCUOklISunmndJleOoSef_7QE'}], 'arrival': [{'airport': {'id': 'NBO', 'name': 'Jomo Kenyatta International Airport'}, 'city': 'Nairobi', 'country': 'Kenya', 'country_code': 'KE', 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJgZqWThMIEJU8EWQEL8hcZzOxK1ji3sApa3zoxjauXUyMyo3Z-u8UadAGGFTbn-dBXo--CTTj0KZ_wA', 'thumbnail': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTiiP2SZ4AOi4upmoXyQxaTnv4I_mlus1h5eHLAJelOHJyebwFv1wZLRfZP64SRn5UoHyVRVPyaZq_3DW7HeoVYSuvu5_o9WnJ50NlaMVw'}]}]}
2025-07-25 20:20:58,133 - INFO - Searching flight for NBO → LHR on 2025-08-13
2025-07-25 20:20:58,134 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-13', 'return_date': '2025-08-16', 'type': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 20:21:00,180 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 20:21:15,338 - INFO - Searching flight for NBO → LHR on 2025-08-13
2025-07-25 20:21:15,339 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-13', 'return_date': '2025-08-16', 'type': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 20:21:15,573 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 20:23:03,062 - INFO - Searching flight for NBO → LHR on 2025-08-23
2025-07-25 20:23:03,063 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-23', 'return_date': '2025-08-26', 'type': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 20:23:04,291 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 20:23:04,293 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-23', 'return_date': '2025-08-26', 'departure_token': 'WyJDalJJYm1oS1ZrTXlOMjl2TmtWQlJEWjNPSGRDUnkwdExTMHRMUzB0TFhaMFkzRXhNRUZCUVVGQlIybEVkbGhuUWkxdlNVVkJFZ3RUVmpRek1IeFRWakV4T1JvTENMLzNCeEFDR2dOVlUwUTRISEMvOXdjPSIsW1siTkJPIiwiMjAyNS0wOC0yMyIsIkpFRCIsbnVsbCwiU1YiLCI0MzAiXSxbIkpFRCIsIjIwMjUtMDgtMjMiLCJMSFIiLG51bGwsIlNWIiwiMTE5Il1dXQ==', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 20:23:10,124 - INFO - Return flight data: {'search_metadata': {'id': '6883bd784c437ff4b58f0256', 'status': 'Success', 'json_endpoint': 'https://serpapi.com/searches/7a262c87139fd77d/6883bd784c437ff4b58f0256.json', 'created_at': '2025-07-25 17:23:04 UTC', 'processed_at': '2025-07-25 17:23:04 UTC', 'google_flights_url': 'https://www.google.com/travel/flights?hl=en&gl=us&curr=USD&tfs=CBwQAhpgEgoyMDI1LTA4LTIzIh8KA05CTxIKMjAyNS0wOC0yMxoDSkVEKgJTVjIDNDMwIh8KA0pFRBIKMjAyNS0wOC0yMxoDTEhSKgJTVjIDMTE5agcIARIDTkJPcgcIARIDTEhSGh4SCjIwMjUtMDgtMjZqBwgBEgNMSFJyBwgBEgNOQk9CAQFIAXABmAEB&tfu=EgIIAQ', 'raw_html_file': 'https://serpapi.com/searches/7a262c87139fd77d/6883bd784c437ff4b58f0256.html', 'prettify_html_file': 'https://serpapi.com/searches/7a262c87139fd77d/6883bd784c437ff4b58f0256.prettify', 'total_time_taken': 5.28}, 'search_parameters': {'engine': 'google_flights', 'hl': 'en', 'gl': 'us', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-23', 'return_date': '2025-08-26', 'departure_token': 'WyJDalJJYm1oS1ZrTXlOMjl2TmtWQlJEWjNPSGRDUnkwdExTMHRMUzB0TFhaMFkzRXhNRUZCUVVGQlIybEVkbGhuUWkxdlNVVkJFZ3RUVmpRek1IeFRWakV4T1JvTENMLzNCeEFDR2dOVlUwUTRISEMvOXdjPSIsW1siTkJPIiwiMjAyNS0wOC0yMyIsIkpFRCIsbnVsbCwiU1YiLCI0MzAiXSxbIkpFRCIsIjIwMjUtMDgtMjMiLCJMSFIiLG51bGwsIlNWIiwiMTE5Il1dXQ==', 'currency': 'USD'}, 'other_flights': [{'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-26 22:10'}, 'arrival_airport': {'name': 'King Abdulaziz International Airport', 'id': 'JED', 'time': '2025-08-27 06:25'}, 'duration': 375, 'airplane': 'Boeing 787', 'airline': 'Saudia', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SV.png', 'travel_class': 'Economy', 'flight_number': 'SV 118', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 305 kg'], 'overnight': True}, {'departure_airport': {'name': 'King Abdulaziz International Airport', 'id': 'JED', 'time': '2025-08-27 20:50'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-28 00:50'}, 'duration': 240, 'airplane': 'Airbus A330', 'airline': 'Saudia', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SV.png', 'travel_class': 'Economy', 'flight_number': 'SV 431', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 168 kg']}], 'layovers': [{'duration': 865, 'name': 'King Abdulaziz International Airport', 'id': 'JED'}], 'total_duration': 1480, 'carbon_emissions': {'this_flight': 473000, 'typical_for_this_route': 443000, 'difference_percent': 7}, 'price': 1300, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SV.png', 'booking_token': 'WyJDalJJYkRkUFJHWjNUa0poTlZWQlFqUlNkRkZDUnkwdExTMHRMUzB0TFMxd1ptTm5Oa0ZCUVVGQlIybEVkbGhyUm1wSVV6UkJFZ3RUVmpFeE9IeFRWalF6TVJvTENMLzNCeEFDR2dOVlUwUTRISEMvOXdjPSIsW1siTkJPIiwiMjAyNS0wOC0yMyIsIkpFRCIsbnVsbCwiU1YiLCI0MzAiXSxbIkpFRCIsIjIwMjUtMDgtMjMiLCJMSFIiLG51bGwsIlNWIiwiMTE5Il1dLFtbIkxIUiIsIjIwMjUtMDgtMjYiLCJKRUQiLG51bGwsIlNWIiwiMTE4Il0sWyJKRUQiLCIyMDI1LTA4LTI3IiwiTkJPIixudWxsLCJTViIsIjQzMSJdXV0='}, {'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-26 14:40'}, 'arrival_airport': {'name': 'King Abdulaziz International Airport', 'id': 'JED', 'time': '2025-08-26 22:55'}, 'duration': 375, 'airplane': 'Boeing 787', 'airline': 'Saudia', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SV.png', 'travel_class': 'Economy', 'flight_number': 'SV 120', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 305 kg']}, {'departure_airport': {'name': 'King Abdulaziz International Airport', 'id': 'JED', 'time': '2025-08-27 01:30'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-27 05:30'}, 'duration': 240, 'airplane': 'Airbus A330', 'airline': 'Saudia', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SV.png', 'travel_class': 'Economy', 'flight_number': 'SV 435', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'Wi-Fi for a fee', 'On-demand video', 'Carbon emissions estimate: 170 kg'], 'overnight': True}], 'layovers': [{'duration': 155, 'name': 'King Abdulaziz International Airport', 'id': 'JED'}], 'total_duration': 770, 'carbon_emissions': {'this_flight': 476000, 'typical_for_this_route': 443000, 'difference_percent': 7}, 'price': 1374, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SV.png', 'booking_token': 'WyJDalJJYkRkUFJHWjNUa0poTlZWQlFqUlNkRkZDUnkwdExTMHRMUzB0TFMxd1ptTm5Oa0ZCUVVGQlIybEVkbGhyUm1wSVV6UkJFZzFUVmpFeU1IeFRWalF6TlNNeEdnc0k4N0FJRUFJYUExVlRSRGdjY1BPd0NBPT0iLFtbIk5CTyIsIjIwMjUtMDgtMjMiLCJKRUQiLG51bGwsIlNWIiwiNDMwIl0sWyJKRUQiLCIyMDI1LTA4LTIzIiwiTEhSIixudWxsLCJTViIsIjExOSJdXSxbWyJMSFIiLCIyMDI1LTA4LTI2IiwiSkVEIixudWxsLCJTViIsIjEyMCJdLFsiSkVEIiwiMjAyNS0wOC0yNyIsIk5CTyIsbnVsbCwiU1YiLCI0MzUiXV1d'}], 'airports': [{'departure': [{'airport': {'id': 'NBO', 'name': 'Jomo Kenyatta International Airport'}, 'city': 'Nairobi', 'country': 'Kenya', 'country_code': 'KE', 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJgZqWThMIEJU8EWQEL8hcZzOxK1ji3sApa3zoxjauXUyMyo3Z-u8UadAGGFTbn-dBXo--CTTj0KZ_wA', 'thumbnail': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTiiP2SZ4AOi4upmoXyQxaTnv4I_mlus1h5eHLAJelOHJyebwFv1wZLRfZP64SRn5UoHyVRVPyaZq_3DW7HeoVYSuvu5_o9WnJ50NlaMVw'}], 'arrival': [{'airport': {'id': 'LHR', 'name': 'Heathrow Airport'}, 'city': 'London', 'country': 'United Kingdom', 'country_code': 'GB', 'image': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRpN9RbtOSTDqKIPxWc_D6rdSysaWVh6d-NW7yz7yFXKRwh5RN5BpNIoXEwH1XVcFdLWqn6Sm8_Y_zmeg', 'thumbnail': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYH83YXny8hR4M7k5BMFq4vUT6LNtVABQzgs2pg-hcpSZq3oMBOQK3xh591AAJv2Qx4uvFZUGqOVt4kuoCUOklISunmndJleOoSef_7QE'}]}, {'departure': [{'airport': {'id': 'LHR', 'name': 'Heathrow Airport'}, 'city': 'London', 'country': 'United Kingdom', 'country_code': 'GB', 'image': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRpN9RbtOSTDqKIPxWc_D6rdSysaWVh6d-NW7yz7yFXKRwh5RN5BpNIoXEwH1XVcFdLWqn6Sm8_Y_zmeg', 'thumbnail': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYH83YXny8hR4M7k5BMFq4vUT6LNtVABQzgs2pg-hcpSZq3oMBOQK3xh591AAJv2Qx4uvFZUGqOVt4kuoCUOklISunmndJleOoSef_7QE'}], 'arrival': [{'airport': {'id': 'NBO', 'name': 'Jomo Kenyatta International Airport'}, 'city': 'Nairobi', 'country': 'Kenya', 'country_code': 'KE', 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJgZqWThMIEJU8EWQEL8hcZzOxK1ji3sApa3zoxjauXUyMyo3Z-u8UadAGGFTbn-dBXo--CTTj0KZ_wA', 'thumbnail': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTiiP2SZ4AOi4upmoXyQxaTnv4I_mlus1h5eHLAJelOHJyebwFv1wZLRfZP64SRn5UoHyVRVPyaZq_3DW7HeoVYSuvu5_o9WnJ50NlaMVw'}]}]}
2025-07-25 20:23:10,132 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-23', 'return_date': '2025-08-26', 'departure_token': 'WyJDalJJYm1oS1ZrTXlOMjl2TmtWQlJEWjNPSGRDUnkwdExTMHRMUzB0TFhaMFkzRXhNRUZCUVVGQlIybEVkbGhuUWkxdlNVVkJFZ3BSVWpFek5ESjhVVkl6R2dzSXpORUlFQUlhQTFWVFJEZ2NjTXpSQ0E9PSIsW1siTkJPIiwiMjAyNS0wOC0yMyIsIkRPSCIsbnVsbCwiUVIiLCIxMzQyIl0sWyJET0giLCIyMDI1LTA4LTIzIiwiTEhSIixudWxsLCJRUiIsIjMiXV1d', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 20:23:13,913 - INFO - Return flight data: {'search_metadata': {'id': '6883bd7ef3a0a7d85ef97382', 'status': 'Success', 'json_endpoint': 'https://serpapi.com/searches/7a262c87139fd77d/6883bd7ef3a0a7d85ef97382.json', 'created_at': '2025-07-25 17:23:10 UTC', 'processed_at': '2025-07-25 17:23:10 UTC', 'google_flights_url': 'https://www.google.com/travel/flights?hl=en&gl=us&curr=USD&tfs=CBwQAhpfEgoyMDI1LTA4LTIzIiAKA05CTxIKMjAyNS0wOC0yMxoDRE9IKgJRUjIEMTM0MiIdCgNET0gSCjIwMjUtMDgtMjMaA0xIUioCUVIyATNqBwgBEgNOQk9yBwgBEgNMSFIaHhIKMjAyNS0wOC0yNmoHCAESA0xIUnIHCAESA05CT0IBAUgBcAGYAQE&tfu=EgIIAQ', 'raw_html_file': 'https://serpapi.com/searches/7a262c87139fd77d/6883bd7ef3a0a7d85ef97382.html', 'prettify_html_file': 'https://serpapi.com/searches/7a262c87139fd77d/6883bd7ef3a0a7d85ef97382.prettify', 'total_time_taken': 3.29}, 'search_parameters': {'engine': 'google_flights', 'hl': 'en', 'gl': 'us', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-23', 'return_date': '2025-08-26', 'departure_token': 'WyJDalJJYm1oS1ZrTXlOMjl2TmtWQlJEWjNPSGRDUnkwdExTMHRMUzB0TFhaMFkzRXhNRUZCUVVGQlIybEVkbGhuUWkxdlNVVkJFZ3BSVWpFek5ESjhVVkl6R2dzSXpORUlFQUlhQTFWVFJEZ2NjTXpSQ0E9PSIsW1siTkJPIiwiMjAyNS0wOC0yMyIsIkRPSCIsbnVsbCwiUVIiLCIxMzQyIl0sWyJET0giLCIyMDI1LTA4LTIzIiwiTEhSIixudWxsLCJRUiIsIjMiXV1d', 'currency': 'USD'}, 'other_flights': [{'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-26 09:00'}, 'arrival_airport': {'name': 'Hamad International Airport', 'id': 'DOH', 'time': '2025-08-26 17:50'}, 'duration': 410, 'airplane': 'Boeing 777', 'airline': 'Qatar Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', 'travel_class': 'Economy', 'flight_number': 'QR 10', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Free Wi-Fi', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 390 kg']}, {'departure_airport': {'name': 'Hamad International Airport', 'id': 'DOH', 'time': '2025-08-26 18:45'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-26 23:50'}, 'duration': 305, 'airplane': 'Boeing 777', 'airline': 'Qatar Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', 'travel_class': 'Economy', 'flight_number': 'QR 1341', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Free Wi-Fi', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 338 kg']}], 'layovers': [{'duration': 55, 'name': 'Hamad International Airport', 'id': 'DOH'}], 'total_duration': 770, 'carbon_emissions': {'this_flight': 729000, 'typical_for_this_route': 443000, 'difference_percent': 65}, 'price': 1416, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', 'booking_token': 'WyJDalJJWkdsV1EzbG5WVWxPUlZsQlEwUkVZMmRDUnkwdExTMHRMUzB0TFMxc2NuWXlNa0ZCUVVGQlIybEVkbGxCUkdSeVJYRkJFZzFSVWpFd2ZGRlNNVE0wTVNNeEdnc0l5OUVJRUFJYUExVlRSRGdjY012UkNBPT0iLFtbIk5CTyIsIjIwMjUtMDgtMjMiLCJET0giLG51bGwsIlFSIiwiMTM0MiJdLFsiRE9IIiwiMjAyNS0wOC0yMyIsIkxIUiIsbnVsbCwiUVIiLCIzIl1dLFtbIkxIUiIsIjIwMjUtMDgtMjYiLCJET0giLG51bGwsIlFSIiwiMTAiXSxbIkRPSCIsIjIwMjUtMDgtMjYiLCJOQk8iLG51bGwsIlFSIiwiMTM0MSJdXV0='}, {'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-26 15:05'}, 'arrival_airport': {'name': 'Hamad International Airport', 'id': 'DOH', 'time': '2025-08-26 23:55'}, 'duration': 410, 'airplane': 'Airbus A380', 'airline': 'Qatar Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', 'travel_class': 'Economy', 'flight_number': 'QR 4', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 422 kg'], 'often_delayed_by_over_30_min': True}, {'departure_airport': {'name': 'Hamad International Airport', 'id': 'DOH', 'time': '2025-08-27 01:35'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-27 06:40'}, 'duration': 305, 'airplane': 'Airbus A350', 'airline': 'Qatar Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', 'travel_class': 'Economy', 'flight_number': 'QR 1335', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 302 kg'], 'overnight': True}], 'layovers': [{'duration': 100, 'name': 'Hamad International Airport', 'id': 'DOH'}], 'total_duration': 815, 'carbon_emissions': {'this_flight': 725000, 'typical_for_this_route': 443000, 'difference_percent': 64}, 'price': 1457, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', 'booking_token': 'WyJDalJJWkdsV1EzbG5WVWxPUlZsQlEwUkVZMmRDUnkwdExTMHRMUzB0TFMxc2NuWXlNa0ZCUVVGQlIybEVkbGxCUkdSeVJYRkJFZ3hSVWpSOFVWSXhNek0xSXpFYUN3anA4UWdRQWhvRFZWTkVPQnh3NmZFSSIsW1siTkJPIiwiMjAyNS0wOC0yMyIsIkRPSCIsbnVsbCwiUVIiLCIxMzQyIl0sWyJET0giLCIyMDI1LTA4LTIzIiwiTEhSIixudWxsLCJRUiIsIjMiXV0sW1siTEhSIiwiMjAyNS0wOC0yNiIsIkRPSCIsbnVsbCwiUVIiLCI0Il0sWyJET0giLCIyMDI1LTA4LTI3IiwiTkJPIixudWxsLCJRUiIsIjEzMzUiXV1d'}, {'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-26 21:55'}, 'arrival_airport': {'name': 'Hamad International Airport', 'id': 'DOH', 'time': '2025-08-27 06:45'}, 'duration': 410, 'airplane': 'Boeing 777', 'airline': 'Qatar Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', 'travel_class': 'Economy', 'flight_number': 'QR 16', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Free Wi-Fi', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 394 kg'], 'overnight': True}, {'departure_airport': {'name': 'Hamad International Airport', 'id': 'DOH', 'time': '2025-08-27 18:45'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-27 23:50'}, 'duration': 305, 'airplane': 'Boeing 777', 'airline': 'Qatar Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', 'travel_class': 'Economy', 'flight_number': 'QR 1341', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Free Wi-Fi', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 335 kg']}], 'layovers': [{'duration': 720, 'name': 'Hamad International Airport', 'id': 'DOH'}], 'total_duration': 1435, 'carbon_emissions': {'this_flight': 730000, 'typical_for_this_route': 443000, 'difference_percent': 65}, 'price': 1457, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', 'booking_token': 'WyJDalJJWkdsV1EzbG5WVWxPUlZsQlEwUkVZMmRDUnkwdExTMHRMUzB0TFMxc2NuWXlNa0ZCUVVGQlIybEVkbGxCUkdSeVJYRkJFZ3RSVWpFMmZGRlNNVE0wTVJvTENPcnhDQkFDR2dOVlUwUTRISERxOFFnPSIsW1siTkJPIiwiMjAyNS0wOC0yMyIsIkRPSCIsbnVsbCwiUVIiLCIxMzQyIl0sWyJET0giLCIyMDI1LTA4LTIzIiwiTEhSIixudWxsLCJRUiIsIjMiXV0sW1siTEhSIiwiMjAyNS0wOC0yNiIsIkRPSCIsbnVsbCwiUVIiLCIxNiJdLFsiRE9IIiwiMjAyNS0wOC0yNyIsIk5CTyIsbnVsbCwiUVIiLCIxMzQxIl1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-26 16:00'}, 'arrival_airport': {'name': 'Hamad International Airport', 'id': 'DOH', 'time': '2025-08-27 00:50'}, 'duration': 410, 'airplane': 'Boeing 777', 'airline': 'Qatar Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', 'travel_class': 'Economy', 'flight_number': 'QR 8', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Free Wi-Fi', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 390 kg'], 'often_delayed_by_over_30_min': True}, {'departure_airport': {'name': 'Hamad International Airport', 'id': 'DOH', 'time': '2025-08-27 01:35'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-27 06:40'}, 'duration': 305, 'airplane': 'Airbus A350', 'airline': 'Qatar Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', 'travel_class': 'Economy', 'flight_number': 'QR 1335', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 302 kg'], 'overnight': True}], 'layovers': [{'duration': 45, 'name': 'Hamad International Airport', 'id': 'DOH'}], 'total_duration': 760, 'carbon_emissions': {'this_flight': 693000, 'typical_for_this_route': 443000, 'difference_percent': 56}, 'price': 1502, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', 'booking_token': 'WyJDalJJWkdsV1EzbG5WVWxPUlZsQlEwUkVZMmRDUnkwdExTMHRMUzB0TFMxc2NuWXlNa0ZCUVVGQlIybEVkbGxCUkdSeVJYRkJFZ3hSVWpoOFVWSXhNek0xSXpFYUN3aWFsUWtRQWhvRFZWTkVPQnh3bXBVSiIsW1siTkJPIiwiMjAyNS0wOC0yMyIsIkRPSCIsbnVsbCwiUVIiLCIxMzQyIl0sWyJET0giLCIyMDI1LTA4LTIzIiwiTEhSIixudWxsLCJRUiIsIjMiXV0sW1siTEhSIiwiMjAyNS0wOC0yNiIsIkRPSCIsbnVsbCwiUVIiLCI4Il0sWyJET0giLCIyMDI1LTA4LTI3IiwiTkJPIixudWxsLCJRUiIsIjEzMzUiXV1d'}], 'airports': [{'departure': [{'airport': {'id': 'NBO', 'name': 'Jomo Kenyatta International Airport'}, 'city': 'Nairobi', 'country': 'Kenya', 'country_code': 'KE', 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJgZqWThMIEJU8EWQEL8hcZzOxK1ji3sApa3zoxjauXUyMyo3Z-u8UadAGGFTbn-dBXo--CTTj0KZ_wA', 'thumbnail': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTiiP2SZ4AOi4upmoXyQxaTnv4I_mlus1h5eHLAJelOHJyebwFv1wZLRfZP64SRn5UoHyVRVPyaZq_3DW7HeoVYSuvu5_o9WnJ50NlaMVw'}], 'arrival': [{'airport': {'id': 'LHR', 'name': 'Heathrow Airport'}, 'city': 'London', 'country': 'United Kingdom', 'country_code': 'GB', 'image': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRpN9RbtOSTDqKIPxWc_D6rdSysaWVh6d-NW7yz7yFXKRwh5RN5BpNIoXEwH1XVcFdLWqn6Sm8_Y_zmeg', 'thumbnail': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYH83YXny8hR4M7k5BMFq4vUT6LNtVABQzgs2pg-hcpSZq3oMBOQK3xh591AAJv2Qx4uvFZUGqOVt4kuoCUOklISunmndJleOoSef_7QE'}]}, {'departure': [{'airport': {'id': 'LHR', 'name': 'Heathrow Airport'}, 'city': 'London', 'country': 'United Kingdom', 'country_code': 'GB', 'image': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRpN9RbtOSTDqKIPxWc_D6rdSysaWVh6d-NW7yz7yFXKRwh5RN5BpNIoXEwH1XVcFdLWqn6Sm8_Y_zmeg', 'thumbnail': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYH83YXny8hR4M7k5BMFq4vUT6LNtVABQzgs2pg-hcpSZq3oMBOQK3xh591AAJv2Qx4uvFZUGqOVt4kuoCUOklISunmndJleOoSef_7QE'}], 'arrival': [{'airport': {'id': 'NBO', 'name': 'Jomo Kenyatta International Airport'}, 'city': 'Nairobi', 'country': 'Kenya', 'country_code': 'KE', 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJgZqWThMIEJU8EWQEL8hcZzOxK1ji3sApa3zoxjauXUyMyo3Z-u8UadAGGFTbn-dBXo--CTTj0KZ_wA', 'thumbnail': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTiiP2SZ4AOi4upmoXyQxaTnv4I_mlus1h5eHLAJelOHJyebwFv1wZLRfZP64SRn5UoHyVRVPyaZq_3DW7HeoVYSuvu5_o9WnJ50NlaMVw'}]}]}
2025-07-25 20:23:13,922 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-23', 'return_date': '2025-08-26', 'departure_token': 'WyJDalJJYm1oS1ZrTXlOMjl2TmtWQlJEWjNPSGRDUnkwdExTMHRMUzB0TFhaMFkzRXhNRUZCUVVGQlIybEVkbGhuUWkxdlNVVkJFZ1ZMVVRFd01Cb0xDSTZMQ3hBQ0dnTlZVMFE0SEhDT2l3cz0iLFtbIk5CTyIsIjIwMjUtMDgtMjMiLCJMSFIiLG51bGwsIktRIiwiMTAwIl1dXQ==', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 20:23:19,750 - INFO - Return flight data: {'search_metadata': {'id': '6883bd82556ce3f0916ecd36', 'status': 'Success', 'json_endpoint': 'https://serpapi.com/searches/7a262c87139fd77d/6883bd82556ce3f0916ecd36.json', 'created_at': '2025-07-25 17:23:14 UTC', 'processed_at': '2025-07-25 17:23:14 UTC', 'google_flights_url': 'https://www.google.com/travel/flights?hl=en&gl=us&curr=USD&tfs=CBwQAho_EgoyMDI1LTA4LTIzIh8KA05CTxIKMjAyNS0wOC0yMxoDTEhSKgJLUTIDMTAwagcIARIDTkJPcgcIARIDTEhSGh4SCjIwMjUtMDgtMjZqBwgBEgNMSFJyBwgBEgNOQk9CAQFIAXABmAEB&tfu=EgIIAQ', 'raw_html_file': 'https://serpapi.com/searches/7a262c87139fd77d/6883bd82556ce3f0916ecd36.html', 'prettify_html_file': 'https://serpapi.com/searches/7a262c87139fd77d/6883bd82556ce3f0916ecd36.prettify', 'total_time_taken': 5.25}, 'search_parameters': {'engine': 'google_flights', 'hl': 'en', 'gl': 'us', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-23', 'return_date': '2025-08-26', 'departure_token': 'WyJDalJJYm1oS1ZrTXlOMjl2TmtWQlJEWjNPSGRDUnkwdExTMHRMUzB0TFhaMFkzRXhNRUZCUVVGQlIybEVkbGhuUWkxdlNVVkJFZ1ZMVVRFd01Cb0xDSTZMQ3hBQ0dnTlZVMFE0SEhDT2l3cz0iLFtbIk5CTyIsIjIwMjUtMDgtMjMiLCJMSFIiLG51bGwsIktRIiwiMTAwIl1dXQ==', 'currency': 'USD'}, 'other_flights': [{'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-26 06:15'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2025-08-26 08:35'}, 'duration': 80, 'airplane': 'Airbus A220-300 Passenger', 'airline': 'Air France', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/AF.png', 'travel_class': 'Economy', 'flight_number': 'AF 1381', 'ticket_also_sold_by': ['Kenya Airways'], 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'Carbon emissions estimate: 57 kg']}, {'departure_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2025-08-26 10:45'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-26 20:10'}, 'duration': 505, 'airplane': 'Boeing 787', 'airline': 'Kenya Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/KQ.png', 'travel_class': 'Economy', 'flight_number': 'KQ 113', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 401 kg']}], 'layovers': [{'duration': 130, 'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG'}], 'total_duration': 715, 'carbon_emissions': {'this_flight': 458000, 'typical_for_this_route': 443000, 'difference_percent': 3}, 'price': 1817, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'booking_token': 'WyJDalJJWkdWS1luSlZaRVk0Y3pCQlFqWkNVMUZDUnkwdExTMHRMUzB0Y0daaVptb3hOVUZCUVVGQlIybEVkbGxOVGpST2FGTkJFZzVCUmpFek9ERjhTMUV4TVRNak1Sb0xDSTZMQ3hBQ0dnTlZVMFE0SEhDT2l3cz0iLFtbIk5CTyIsIjIwMjUtMDgtMjMiLCJMSFIiLG51bGwsIktRIiwiMTAwIl1dLFtbIkxIUiIsIjIwMjUtMDgtMjYiLCJDREciLG51bGwsIkFGIiwiMTM4MSJdLFsiQ0RHIiwiMjAyNS0wOC0yNiIsIk5CTyIsbnVsbCwiS1EiLCIxMTMiXV1d'}, {'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-26 19:45'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2025-08-26 22:00'}, 'duration': 75, 'airplane': 'Airbus A220-300 Passenger', 'airline': 'Air France', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/AF.png', 'travel_class': 'Economy', 'flight_number': 'AF 1181', 'ticket_also_sold_by': ['Kenya Airways'], 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'Carbon emissions estimate: 57 kg']}, {'departure_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2025-08-27 10:45'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-27 20:10'}, 'duration': 505, 'airplane': 'Boeing 787', 'airline': 'Kenya Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/KQ.png', 'travel_class': 'Economy', 'flight_number': 'KQ 113', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 401 kg']}], 'layovers': [{'duration': 765, 'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'overnight': True}], 'total_duration': 1345, 'carbon_emissions': {'this_flight': 458000, 'typical_for_this_route': 443000, 'difference_percent': 3}, 'price': 1830, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'booking_token': 'WyJDalJJWkdWS1luSlZaRVk0Y3pCQlFqWkNVMUZDUnkwdExTMHRMUzB0Y0daaVptb3hOVUZCUVVGQlIybEVkbGxOVGpST2FGTkJFZ3hCUmpFeE9ERjhTMUV4TVRNYUN3aWlsUXNRQWhvRFZWTkVPQnh3b3BVTCIsW1siTkJPIiwiMjAyNS0wOC0yMyIsIkxIUiIsbnVsbCwiS1EiLCIxMDAiXV0sW1siTEhSIiwiMjAyNS0wOC0yNiIsIkNERyIsbnVsbCwiQUYiLCIxMTgxIl0sWyJDREciLCIyMDI1LTA4LTI3IiwiTkJPIixudWxsLCJLUSIsIjExMyJdXV0='}, {'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-26 18:25'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-27 05:00'}, 'duration': 515, 'airplane': 'Boeing 787', 'airline': 'Kenya Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/KQ.png', 'travel_class': 'Economy', 'flight_number': 'KQ 101', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 419 kg'], 'overnight': True}], 'total_duration': 515, 'carbon_emissions': {'this_flight': 420000, 'typical_for_this_route': 443000, 'difference_percent': -5}, 'price': 2091, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/KQ.png', 'booking_token': 'WyJDalJJWkdWS1luSlZaRVk0Y3pCQlFqWkNVMUZDUnkwdExTMHRMUzB0Y0daaVptb3hOVUZCUVVGQlIybEVkbGxOVGpST2FGTkJFZ2RMVVRFd01TTXhHZ3NJNytBTUVBSWFBMVZUUkRnY2NPL2dEQT09IixbWyJOQk8iLCIyMDI1LTA4LTIzIiwiTEhSIixudWxsLCJLUSIsIjEwMCJdXSxbWyJMSFIiLCIyMDI1LTA4LTI2IiwiTkJPIixudWxsLCJLUSIsIjEwMSJdXV0='}, {'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-26 06:50'}, 'arrival_airport': {'name': 'Brussels Airport', 'id': 'BRU', 'time': '2025-08-26 08:50'}, 'duration': 60, 'airplane': 'Airbus A320neo', 'airline': 'Brussels Airlines', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SN.png', 'travel_class': 'Economy', 'flight_number': 'SN 2104', 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'Carbon emissions estimate: 47 kg']}, {'departure_airport': {'name': 'Brussels Airport', 'id': 'BRU', 'time': '2025-08-26 10:25'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-26 20:20'}, 'duration': 535, 'airplane': 'Airbus A330', 'airline': 'Brussels Airlines', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SN.png', 'travel_class': 'Premium Economy', 'flight_number': 'SN 481', 'extensions': ['Extra reclining seat', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 746 kg']}], 'layovers': [{'duration': 95, 'name': 'Brussels Airport', 'id': 'BRU'}], 'total_duration': 690, 'carbon_emissions': {'this_flight': 794000, 'typical_for_this_route': 443000, 'difference_percent': 79}, 'price': 5406, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SN.png', 'booking_token': 'WyJDalJJWkdWS1luSlZaRVk0Y3pCQlFqWkNVMUZDUnkwdExTMHRMUzB0Y0daaVptb3hOVUZCUVVGQlIybEVkbGxOVGpST2FGTkJFZ3hUVGpJeE1EUjhVMDQwT0RFYUN3ajQvaUFRQWhvRFZWTkVPQnh3K1A0ZyIsW1siTkJPIiwiMjAyNS0wOC0yMyIsIkxIUiIsbnVsbCwiS1EiLCIxMDAiXV0sW1siTEhSIiwiMjAyNS0wOC0yNiIsIkJSVSIsbnVsbCwiU04iLCIyMTA0Il0sWyJCUlUiLCIyMDI1LTA4LTI2IiwiTkJPIixudWxsLCJTTiIsIjQ4MSJdXV0='}], 'airports': [{'departure': [{'airport': {'id': 'NBO', 'name': 'Jomo Kenyatta International Airport'}, 'city': 'Nairobi', 'country': 'Kenya', 'country_code': 'KE', 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJgZqWThMIEJU8EWQEL8hcZzOxK1ji3sApa3zoxjauXUyMyo3Z-u8UadAGGFTbn-dBXo--CTTj0KZ_wA', 'thumbnail': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTiiP2SZ4AOi4upmoXyQxaTnv4I_mlus1h5eHLAJelOHJyebwFv1wZLRfZP64SRn5UoHyVRVPyaZq_3DW7HeoVYSuvu5_o9WnJ50NlaMVw'}], 'arrival': [{'airport': {'id': 'LHR', 'name': 'Heathrow Airport'}, 'city': 'London', 'country': 'United Kingdom', 'country_code': 'GB', 'image': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRpN9RbtOSTDqKIPxWc_D6rdSysaWVh6d-NW7yz7yFXKRwh5RN5BpNIoXEwH1XVcFdLWqn6Sm8_Y_zmeg', 'thumbnail': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYH83YXny8hR4M7k5BMFq4vUT6LNtVABQzgs2pg-hcpSZq3oMBOQK3xh591AAJv2Qx4uvFZUGqOVt4kuoCUOklISunmndJleOoSef_7QE'}]}, {'departure': [{'airport': {'id': 'LHR', 'name': 'Heathrow Airport'}, 'city': 'London', 'country': 'United Kingdom', 'country_code': 'GB', 'image': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRpN9RbtOSTDqKIPxWc_D6rdSysaWVh6d-NW7yz7yFXKRwh5RN5BpNIoXEwH1XVcFdLWqn6Sm8_Y_zmeg', 'thumbnail': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYH83YXny8hR4M7k5BMFq4vUT6LNtVABQzgs2pg-hcpSZq3oMBOQK3xh591AAJv2Qx4uvFZUGqOVt4kuoCUOklISunmndJleOoSef_7QE'}], 'arrival': [{'airport': {'id': 'NBO', 'name': 'Jomo Kenyatta International Airport'}, 'city': 'Nairobi', 'country': 'Kenya', 'country_code': 'KE', 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJgZqWThMIEJU8EWQEL8hcZzOxK1ji3sApa3zoxjauXUyMyo3Z-u8UadAGGFTbn-dBXo--CTTj0KZ_wA', 'thumbnail': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTiiP2SZ4AOi4upmoXyQxaTnv4I_mlus1h5eHLAJelOHJyebwFv1wZLRfZP64SRn5UoHyVRVPyaZq_3DW7HeoVYSuvu5_o9WnJ50NlaMVw'}]}]}
2025-07-25 21:03:03,018 - INFO - Searching flight for NBO → LHR on 2025-08-24
2025-07-25 21:03:03,019 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-24', 'return_date': '2025-08-28', 'type': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 21:03:04,552 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-25 21:03:04,555 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-24', 'return_date': '2025-08-28', 'departure_token': 'WyJDalJJYjJsa01WaElNekprVVZsQlIxZG9WbmRDUnkwdExTMHRMUzB0TFdWcVltd3lORUZCUVVGQlIybEVlSFJuUlZKVVNtMUJFZ3BSVWpFek5ESjhVVkl6R2dzSWp1RUhFQUlhQTFWVFJEZ2NjSTdoQnc9PSIsW1siTkJPIiwiMjAyNS0wOC0yNCIsIkRPSCIsbnVsbCwiUVIiLCIxMzQyIl0sWyJET0giLCIyMDI1LTA4LTI0IiwiTEhSIixudWxsLCJRUiIsIjMiXV1d', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 21:03:11,512 - INFO - Return flight data: {'search_metadata': {'id': '6883c6d95c018f9cfa9ae90b', 'status': 'Success', 'json_endpoint': 'https://serpapi.com/searches/7a262c87139fd77d/6883c6d95c018f9cfa9ae90b.json', 'created_at': '2025-07-25 18:03:05 UTC', 'processed_at': '2025-07-25 18:03:05 UTC', 'google_flights_url': 'https://www.google.com/travel/flights?hl=en&gl=us&curr=USD&tfs=CBwQAhpfEgoyMDI1LTA4LTI0IiAKA05CTxIKMjAyNS0wOC0yNBoDRE9IKgJRUjIEMTM0MiIdCgNET0gSCjIwMjUtMDgtMjQaA0xIUioCUVIyATNqBwgBEgNOQk9yBwgBEgNMSFIaHhIKMjAyNS0wOC0yOGoHCAESA0xIUnIHCAESA05CT0IBAUgBcAGYAQE&tfu=EgIIAQ', 'raw_html_file': 'https://serpapi.com/searches/7a262c87139fd77d/6883c6d95c018f9cfa9ae90b.html', 'prettify_html_file': 'https://serpapi.com/searches/7a262c87139fd77d/6883c6d95c018f9cfa9ae90b.prettify', 'total_time_taken': 6.43}, 'search_parameters': {'engine': 'google_flights', 'hl': 'en', 'gl': 'us', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-24', 'return_date': '2025-08-28', 'departure_token': 'WyJDalJJYjJsa01WaElNekprVVZsQlIxZG9WbmRDUnkwdExTMHRMUzB0TFdWcVltd3lORUZCUVVGQlIybEVlSFJuUlZKVVNtMUJFZ3BSVWpFek5ESjhVVkl6R2dzSWp1RUhFQUlhQTFWVFJEZ2NjSTdoQnc9PSIsW1siTkJPIiwiMjAyNS0wOC0yNCIsIkRPSCIsbnVsbCwiUVIiLCIxMzQyIl0sWyJET0giLCIyMDI1LTA4LTI0IiwiTEhSIixudWxsLCJRUiIsIjMiXV1d', 'currency': 'USD'}, 'other_flights': [{'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-28 09:00'}, 'arrival_airport': {'name': 'Hamad International Airport', 'id': 'DOH', 'time': '2025-08-28 17:50'}, 'duration': 410, 'airplane': 'Boeing 777', 'airline': 'Qatar Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', 'travel_class': 'Economy', 'flight_number': 'QR 10', 'ticket_also_sold_by': ['British Airways'], 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Free Wi-Fi', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 390 kg']}, {'departure_airport': {'name': 'Hamad International Airport', 'id': 'DOH', 'time': '2025-08-28 18:45'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-28 23:50'}, 'duration': 305, 'airplane': 'Boeing 777', 'airline': 'Qatar Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', 'travel_class': 'Economy', 'flight_number': 'QR 1341', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Free Wi-Fi', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 335 kg']}], 'layovers': [{'duration': 55, 'name': 'Hamad International Airport', 'id': 'DOH'}], 'total_duration': 770, 'carbon_emissions': {'this_flight': 727000, 'typical_for_this_route': 443000, 'difference_percent': 64}, 'price': 1340, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', 'booking_token': 'WyJDalJJWkdSR2J5MHlaV3RQVm10QlJDMW9iV2RDUnkwdExTMHRMUzB0TFMxNWJHbG9OMEZCUVVGQlIybEVlSFF3Um5KMlpYVkJFZzFSVWpFd2ZGRlNNVE0wTVNNeEdnc0l5cFlJRUFJYUExVlRSRGdjY01xV0NBPT0iLFtbIk5CTyIsIjIwMjUtMDgtMjQiLCJET0giLG51bGwsIlFSIiwiMTM0MiJdLFsiRE9IIiwiMjAyNS0wOC0yNCIsIkxIUiIsbnVsbCwiUVIiLCIzIl1dLFtbIkxIUiIsIjIwMjUtMDgtMjgiLCJET0giLG51bGwsIlFSIiwiMTAiXSxbIkRPSCIsIjIwMjUtMDgtMjgiLCJOQk8iLG51bGwsIlFSIiwiMTM0MSJdXV0='}, {'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-28 16:00'}, 'arrival_airport': {'name': 'Hamad International Airport', 'id': 'DOH', 'time': '2025-08-29 00:50'}, 'duration': 410, 'airplane': 'Boeing 777', 'airline': 'Qatar Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', 'travel_class': 'Economy', 'flight_number': 'QR 8', 'ticket_also_sold_by': ['British Airways'], 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Free Wi-Fi', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 390 kg'], 'often_delayed_by_over_30_min': True}, {'departure_airport': {'name': 'Hamad International Airport', 'id': 'DOH', 'time': '2025-08-29 01:35'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-29 06:40'}, 'duration': 305, 'airplane': 'Airbus A350', 'airline': 'Qatar Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', 'travel_class': 'Economy', 'flight_number': 'QR 1335', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 302 kg'], 'overnight': True}], 'layovers': [{'duration': 45, 'name': 'Hamad International Airport', 'id': 'DOH'}], 'total_duration': 760, 'carbon_emissions': {'this_flight': 693000, 'typical_for_this_route': 443000, 'difference_percent': 56}, 'price': 1736, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', 'booking_token': 'WyJDalJJWkdSR2J5MHlaV3RQVm10QlJDMW9iV2RDUnkwdExTMHRMUzB0TFMxNWJHbG9OMEZCUVVGQlIybEVlSFF3Um5KMlpYVkJFZ3hSVWpoOFVWSXhNek0xSXpFYUN3all5d29RQWhvRFZWTkVPQnh3Mk1zSyIsW1siTkJPIiwiMjAyNS0wOC0yNCIsIkRPSCIsbnVsbCwiUVIiLCIxMzQyIl0sWyJET0giLCIyMDI1LTA4LTI0IiwiTEhSIixudWxsLCJRUiIsIjMiXV0sW1siTEhSIiwiMjAyNS0wOC0yOCIsIkRPSCIsbnVsbCwiUVIiLCI4Il0sWyJET0giLCIyMDI1LTA4LTI5IiwiTkJPIixudWxsLCJRUiIsIjEzMzUiXV1d'}], 'airports': [{'departure': [{'airport': {'id': 'NBO', 'name': 'Jomo Kenyatta International Airport'}, 'city': 'Nairobi', 'country': 'Kenya', 'country_code': 'KE', 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJgZqWThMIEJU8EWQEL8hcZzOxK1ji3sApa3zoxjauXUyMyo3Z-u8UadAGGFTbn-dBXo--CTTj0KZ_wA', 'thumbnail': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTiiP2SZ4AOi4upmoXyQxaTnv4I_mlus1h5eHLAJelOHJyebwFv1wZLRfZP64SRn5UoHyVRVPyaZq_3DW7HeoVYSuvu5_o9WnJ50NlaMVw'}], 'arrival': [{'airport': {'id': 'LHR', 'name': 'Heathrow Airport'}, 'city': 'London', 'country': 'United Kingdom', 'country_code': 'GB', 'image': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRpN9RbtOSTDqKIPxWc_D6rdSysaWVh6d-NW7yz7yFXKRwh5RN5BpNIoXEwH1XVcFdLWqn6Sm8_Y_zmeg', 'thumbnail': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYH83YXny8hR4M7k5BMFq4vUT6LNtVABQzgs2pg-hcpSZq3oMBOQK3xh591AAJv2Qx4uvFZUGqOVt4kuoCUOklISunmndJleOoSef_7QE'}]}, {'departure': [{'airport': {'id': 'LHR', 'name': 'Heathrow Airport'}, 'city': 'London', 'country': 'United Kingdom', 'country_code': 'GB', 'image': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRpN9RbtOSTDqKIPxWc_D6rdSysaWVh6d-NW7yz7yFXKRwh5RN5BpNIoXEwH1XVcFdLWqn6Sm8_Y_zmeg', 'thumbnail': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYH83YXny8hR4M7k5BMFq4vUT6LNtVABQzgs2pg-hcpSZq3oMBOQK3xh591AAJv2Qx4uvFZUGqOVt4kuoCUOklISunmndJleOoSef_7QE'}], 'arrival': [{'airport': {'id': 'NBO', 'name': 'Jomo Kenyatta International Airport'}, 'city': 'Nairobi', 'country': 'Kenya', 'country_code': 'KE', 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJgZqWThMIEJU8EWQEL8hcZzOxK1ji3sApa3zoxjauXUyMyo3Z-u8UadAGGFTbn-dBXo--CTTj0KZ_wA', 'thumbnail': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTiiP2SZ4AOi4upmoXyQxaTnv4I_mlus1h5eHLAJelOHJyebwFv1wZLRfZP64SRn5UoHyVRVPyaZq_3DW7HeoVYSuvu5_o9WnJ50NlaMVw'}]}]}
2025-07-25 21:03:11,527 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-24', 'return_date': '2025-08-28', 'departure_token': 'WyJDalJJYjJsa01WaElNekprVVZsQlIxZG9WbmRDUnkwdExTMHRMUzB0TFdWcVltd3lORUZCUVVGQlIybEVlSFJuUlZKVVNtMUJFZ1ZMVVRFd01Cb0xDSTZMQ3hBQ0dnTlZVMFE0SEhDT2l3cz0iLFtbIk5CTyIsIjIwMjUtMDgtMjQiLCJMSFIiLG51bGwsIktRIiwiMTAwIl1dXQ==', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 21:03:15,506 - INFO - Return flight data: {'search_metadata': {'id': '6883c6e0ef15ceaa89d24d4c', 'status': 'Success', 'json_endpoint': 'https://serpapi.com/searches/7a262c87139fd77d/6883c6e0ef15ceaa89d24d4c.json', 'created_at': '2025-07-25 18:03:12 UTC', 'processed_at': '2025-07-25 18:03:12 UTC', 'google_flights_url': 'https://www.google.com/travel/flights?hl=en&gl=us&curr=USD&tfs=CBwQAho_EgoyMDI1LTA4LTI0Ih8KA05CTxIKMjAyNS0wOC0yNBoDTEhSKgJLUTIDMTAwagcIARIDTkJPcgcIARIDTEhSGh4SCjIwMjUtMDgtMjhqBwgBEgNMSFJyBwgBEgNOQk9CAQFIAXABmAEB&tfu=EgIIAQ', 'raw_html_file': 'https://serpapi.com/searches/7a262c87139fd77d/6883c6e0ef15ceaa89d24d4c.html', 'prettify_html_file': 'https://serpapi.com/searches/7a262c87139fd77d/6883c6e0ef15ceaa89d24d4c.prettify', 'total_time_taken': 3.45}, 'search_parameters': {'engine': 'google_flights', 'hl': 'en', 'gl': 'us', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-24', 'return_date': '2025-08-28', 'departure_token': 'WyJDalJJYjJsa01WaElNekprVVZsQlIxZG9WbmRDUnkwdExTMHRMUzB0TFdWcVltd3lORUZCUVVGQlIybEVlSFJuUlZKVVNtMUJFZ1ZMVVRFd01Cb0xDSTZMQ3hBQ0dnTlZVMFE0SEhDT2l3cz0iLFtbIk5CTyIsIjIwMjUtMDgtMjQiLCJMSFIiLG51bGwsIktRIiwiMTAwIl1dXQ==', 'currency': 'USD'}, 'best_flights': [{'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-28 06:15'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2025-08-28 08:35'}, 'duration': 80, 'airplane': 'Airbus A220-300 Passenger', 'airline': 'Air France', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/AF.png', 'travel_class': 'Economy', 'flight_number': 'AF 1381', 'ticket_also_sold_by': ['Kenya Airways'], 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'Carbon emissions estimate: 57 kg']}, {'departure_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2025-08-28 10:45'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-28 20:10'}, 'duration': 505, 'airplane': 'Boeing 787', 'airline': 'Kenya Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/KQ.png', 'travel_class': 'Economy', 'flight_number': 'KQ 113', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 401 kg']}], 'layovers': [{'duration': 130, 'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG'}], 'total_duration': 715, 'carbon_emissions': {'this_flight': 458000, 'typical_for_this_route': 443000, 'difference_percent': 3}, 'price': 1817, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'booking_token': 'WyJDalJJWmxkQmRVMUVVa1pJUTBsQlF6RllhMEZDUnkwdExTMHRMUzB0TFhscFkzTXpPRUZCUVVGQlIybEVlSFZGUlZCMFUwVkJFZzVCUmpFek9ERjhTMUV4TVRNak1Sb0xDSTZMQ3hBQ0dnTlZVMFE0SEhDT2l3cz0iLFtbIk5CTyIsIjIwMjUtMDgtMjQiLCJMSFIiLG51bGwsIktRIiwiMTAwIl1dLFtbIkxIUiIsIjIwMjUtMDgtMjgiLCJDREciLG51bGwsIkFGIiwiMTM4MSJdLFsiQ0RHIiwiMjAyNS0wOC0yOCIsIk5CTyIsbnVsbCwiS1EiLCIxMTMiXV1d'}, {'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-28 17:10'}, 'arrival_airport': {'name': 'Amsterdam Airport Schiphol', 'id': 'AMS', 'time': '2025-08-28 19:30'}, 'duration': 80, 'airplane': 'Embraer 195 E2', 'airline': 'KLM', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/KL.png', 'travel_class': 'Economy', 'flight_number': 'KL 1012', 'ticket_also_sold_by': ['Kenya Airways'], 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'In-seat USB outlet', 'Carbon emissions estimate: 53 kg']}, {'departure_airport': {'name': 'Amsterdam Airport Schiphol', 'id': 'AMS', 'time': '2025-08-28 20:35'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-29 06:10'}, 'duration': 515, 'airplane': 'Boeing 787', 'airline': 'Kenya Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/KQ.png', 'travel_class': 'Economy', 'flight_number': 'KQ 117', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 404 kg'], 'overnight': True}], 'layovers': [{'duration': 65, 'name': 'Amsterdam Airport Schiphol', 'id': 'AMS'}], 'total_duration': 660, 'carbon_emissions': {'this_flight': 459000, 'typical_for_this_route': 443000, 'difference_percent': 4}, 'price': 2052, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'booking_token': 'WyJDalJJWmxkQmRVMUVVa1pJUTBsQlF6RllhMEZDUnkwdExTMHRMUzB0TFhscFkzTXpPRUZCUVVGQlIybEVlSFZGUlZCMFUwVkJFZzVMVERFd01USjhTMUV4TVRjak1Sb0xDSW5EREJBQ0dnTlZVMFE0SEhDSnd3dz0iLFtbIk5CTyIsIjIwMjUtMDgtMjQiLCJMSFIiLG51bGwsIktRIiwiMTAwIl1dLFtbIkxIUiIsIjIwMjUtMDgtMjgiLCJBTVMiLG51bGwsIktMIiwiMTAxMiJdLFsiQU1TIiwiMjAyNS0wOC0yOCIsIk5CTyIsbnVsbCwiS1EiLCIxMTciXV1d'}, {'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-28 18:25'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-29 05:00'}, 'duration': 515, 'airplane': 'Boeing 787', 'airline': 'Kenya Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/KQ.png', 'travel_class': 'Economy', 'flight_number': 'KQ 101', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 419 kg'], 'overnight': True}], 'total_duration': 515, 'carbon_emissions': {'this_flight': 420000, 'typical_for_this_route': 443000, 'difference_percent': -5}, 'price': 2201, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/KQ.png', 'booking_token': 'WyJDalJJWmxkQmRVMUVVa1pJUTBsQlF6RllhMEZDUnkwdExTMHRMUzB0TFhscFkzTXpPRUZCUVVGQlIybEVlSFZGUlZCMFUwVkJFZ2RMVVRFd01TTXhHZ3NJc3JjTkVBSWFBMVZUUkRnY2NMSzNEUT09IixbWyJOQk8iLCIyMDI1LTA4LTI0IiwiTEhSIixudWxsLCJLUSIsIjEwMCJdXSxbWyJMSFIiLCIyMDI1LTA4LTI4IiwiTkJPIixudWxsLCJLUSIsIjEwMSJdXV0='}], 'other_flights': [{'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-28 19:45'}, 'arrival_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2025-08-28 22:00'}, 'duration': 75, 'airplane': 'Airbus A220-300 Passenger', 'airline': 'Air France', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/AF.png', 'travel_class': 'Economy', 'flight_number': 'AF 1181', 'ticket_also_sold_by': ['Kenya Airways'], 'legroom': '30 in', 'extensions': ['Average legroom (30 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'Carbon emissions estimate: 57 kg']}, {'departure_airport': {'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'time': '2025-08-29 10:45'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-29 20:10'}, 'duration': 505, 'airplane': 'Boeing 787', 'airline': 'Kenya Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/KQ.png', 'travel_class': 'Economy', 'flight_number': 'KQ 113', 'legroom': '32 in', 'extensions': ['Above average legroom (32 in)', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 401 kg']}], 'layovers': [{'duration': 765, 'name': 'Paris Charles de Gaulle Airport', 'id': 'CDG', 'overnight': True}], 'total_duration': 1345, 'carbon_emissions': {'this_flight': 458000, 'typical_for_this_route': 443000, 'difference_percent': 3}, 'price': 1830, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'booking_token': 'WyJDalJJWmxkQmRVMUVVa1pJUTBsQlF6RllhMEZDUnkwdExTMHRMUzB0TFhscFkzTXpPRUZCUVVGQlIybEVlSFZGUlZCMFUwVkJFZ3hCUmpFeE9ERjhTMUV4TVRNYUN3aWlsUXNRQWhvRFZWTkVPQnh3b3BVTCIsW1siTkJPIiwiMjAyNS0wOC0yNCIsIkxIUiIsbnVsbCwiS1EiLCIxMDAiXV0sW1siTEhSIiwiMjAyNS0wOC0yOCIsIkNERyIsbnVsbCwiQUYiLCIxMTgxIl0sWyJDREciLCIyMDI1LTA4LTI5IiwiTkJPIixudWxsLCJLUSIsIjExMyJdXV0='}, {'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-28 06:50'}, 'arrival_airport': {'name': 'Brussels Airport', 'id': 'BRU', 'time': '2025-08-28 08:50'}, 'duration': 60, 'airplane': 'Airbus A320neo', 'airline': 'Brussels Airlines', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SN.png', 'travel_class': 'Economy', 'flight_number': 'SN 2104', 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'Carbon emissions estimate: 47 kg']}, {'departure_airport': {'name': 'Brussels Airport', 'id': 'BRU', 'time': '2025-08-28 10:25'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-28 20:20'}, 'duration': 535, 'airplane': 'Airbus A330', 'airline': 'Brussels Airlines', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SN.png', 'travel_class': 'Premium Economy', 'flight_number': 'SN 481', 'extensions': ['Extra reclining seat', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 746 kg']}], 'layovers': [{'duration': 95, 'name': 'Brussels Airport', 'id': 'BRU'}], 'total_duration': 690, 'carbon_emissions': {'this_flight': 794000, 'typical_for_this_route': 443000, 'difference_percent': 79}, 'price': 5406, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SN.png', 'booking_token': 'WyJDalJJWmxkQmRVMUVVa1pJUTBsQlF6RllhMEZDUnkwdExTMHRMUzB0TFhscFkzTXpPRUZCUVVGQlIybEVlSFZGUlZCMFUwVkJFZ3hUVGpJeE1EUjhVMDQwT0RFYUN3ajQvaUFRQWhvRFZWTkVPQnh3K1A0ZyIsW1siTkJPIiwiMjAyNS0wOC0yNCIsIkxIUiIsbnVsbCwiS1EiLCIxMDAiXV0sW1siTEhSIiwiMjAyNS0wOC0yOCIsIkJSVSIsbnVsbCwiU04iLCIyMTA0Il0sWyJCUlUiLCIyMDI1LTA4LTI4IiwiTkJPIixudWxsLCJTTiIsIjQ4MSJdXV0='}], 'airports': [{'departure': [{'airport': {'id': 'NBO', 'name': 'Jomo Kenyatta International Airport'}, 'city': 'Nairobi', 'country': 'Kenya', 'country_code': 'KE', 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJgZqWThMIEJU8EWQEL8hcZzOxK1ji3sApa3zoxjauXUyMyo3Z-u8UadAGGFTbn-dBXo--CTTj0KZ_wA', 'thumbnail': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTiiP2SZ4AOi4upmoXyQxaTnv4I_mlus1h5eHLAJelOHJyebwFv1wZLRfZP64SRn5UoHyVRVPyaZq_3DW7HeoVYSuvu5_o9WnJ50NlaMVw'}], 'arrival': [{'airport': {'id': 'LHR', 'name': 'Heathrow Airport'}, 'city': 'London', 'country': 'United Kingdom', 'country_code': 'GB', 'image': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRpN9RbtOSTDqKIPxWc_D6rdSysaWVh6d-NW7yz7yFXKRwh5RN5BpNIoXEwH1XVcFdLWqn6Sm8_Y_zmeg', 'thumbnail': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYH83YXny8hR4M7k5BMFq4vUT6LNtVABQzgs2pg-hcpSZq3oMBOQK3xh591AAJv2Qx4uvFZUGqOVt4kuoCUOklISunmndJleOoSef_7QE'}]}, {'departure': [{'airport': {'id': 'LHR', 'name': 'Heathrow Airport'}, 'city': 'London', 'country': 'United Kingdom', 'country_code': 'GB', 'image': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRpN9RbtOSTDqKIPxWc_D6rdSysaWVh6d-NW7yz7yFXKRwh5RN5BpNIoXEwH1XVcFdLWqn6Sm8_Y_zmeg', 'thumbnail': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYH83YXny8hR4M7k5BMFq4vUT6LNtVABQzgs2pg-hcpSZq3oMBOQK3xh591AAJv2Qx4uvFZUGqOVt4kuoCUOklISunmndJleOoSef_7QE'}], 'arrival': [{'airport': {'id': 'NBO', 'name': 'Jomo Kenyatta International Airport'}, 'city': 'Nairobi', 'country': 'Kenya', 'country_code': 'KE', 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJgZqWThMIEJU8EWQEL8hcZzOxK1ji3sApa3zoxjauXUyMyo3Z-u8UadAGGFTbn-dBXo--CTTj0KZ_wA', 'thumbnail': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTiiP2SZ4AOi4upmoXyQxaTnv4I_mlus1h5eHLAJelOHJyebwFv1wZLRfZP64SRn5UoHyVRVPyaZq_3DW7HeoVYSuvu5_o9WnJ50NlaMVw'}]}]}
2025-07-25 21:03:15,522 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-24', 'return_date': '2025-08-28', 'departure_token': 'WyJDalJJYjJsa01WaElNekprVVZsQlIxZG9WbmRDUnkwdExTMHRMUzB0TFdWcVltd3lORUZCUVVGQlIybEVlSFJuUlZKVVNtMUJFZ1JDUVRZMEdnc0lrUFVMRUFJYUExVlRSRGdjY0pEMUN3PT0iLFtbIk5CTyIsIjIwMjUtMDgtMjQiLCJMSFIiLG51bGwsIkJBIiwiNjQiXV1d', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-25 21:03:18,679 - INFO - Return flight data: {'search_metadata': {'id': '6883c6e4b7942f18f6812548', 'status': 'Success', 'json_endpoint': 'https://serpapi.com/searches/7a262c87139fd77d/6883c6e4b7942f18f6812548.json', 'created_at': '2025-07-25 18:03:16 UTC', 'processed_at': '2025-07-25 18:03:16 UTC', 'google_flights_url': 'https://www.google.com/travel/flights?hl=en&gl=us&curr=USD&tfs=CBwQAho-EgoyMDI1LTA4LTI0Ih4KA05CTxIKMjAyNS0wOC0yNBoDTEhSKgJCQTICNjRqBwgBEgNOQk9yBwgBEgNMSFIaHhIKMjAyNS0wOC0yOGoHCAESA0xIUnIHCAESA05CT0IBAUgBcAGYAQE&tfu=EgIIAQ', 'raw_html_file': 'https://serpapi.com/searches/7a262c87139fd77d/6883c6e4b7942f18f6812548.html', 'prettify_html_file': 'https://serpapi.com/searches/7a262c87139fd77d/6883c6e4b7942f18f6812548.prettify', 'total_time_taken': 2.58}, 'search_parameters': {'engine': 'google_flights', 'hl': 'en', 'gl': 'us', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-24', 'return_date': '2025-08-28', 'departure_token': 'WyJDalJJYjJsa01WaElNekprVVZsQlIxZG9WbmRDUnkwdExTMHRMUzB0TFdWcVltd3lORUZCUVVGQlIybEVlSFJuUlZKVVNtMUJFZ1JDUVRZMEdnc0lrUFVMRUFJYUExVlRSRGdjY0pEMUN3PT0iLFtbIk5CTyIsIjIwMjUtMDgtMjQiLCJMSFIiLG51bGwsIkJBIiwiNjQiXV1d', 'currency': 'USD'}, 'other_flights': [{'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-28 09:45'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-28 20:45'}, 'duration': 540, 'airplane': 'Airbus A350', 'airline': 'British Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/BA.png', 'travel_class': 'Economy', 'flight_number': 'BA 65', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 355 kg']}], 'total_duration': 540, 'carbon_emissions': {'this_flight': 355000, 'typical_for_this_route': 443000, 'difference_percent': -20}, 'price': 1953, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/BA.png', 'booking_token': 'WyJDalJJUVdsVFVWQjZabXRRVTFGQlJUUkpkbmRDUnkwdExTMHRMUzB0TFc5NWRIQXhNVUZCUVVGQlIybEVlSFZSUzNSVFZtMUJFZ1pDUVRZMUl6RWFDd2lROVFzUUFob0RWVk5FT0J4d2tQVUwiLFtbIk5CTyIsIjIwMjUtMDgtMjQiLCJMSFIiLG51bGwsIkJBIiwiNjQiXV0sW1siTEhSIiwiMjAyNS0wOC0yOCIsIk5CTyIsbnVsbCwiQkEiLCI2NSJdXV0='}, {'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-28 13:45'}, 'arrival_airport': {'name': 'Hamad International Airport', 'id': 'DOH', 'time': '2025-08-28 22:40'}, 'duration': 415, 'airplane': 'Boeing 777', 'airline': 'British Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/BA.png', 'travel_class': 'Economy', 'flight_number': 'BA 127', 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat USB outlet', 'On-demand video', 'Carbon emissions estimate: 344 kg'], 'often_delayed_by_over_30_min': True}, {'departure_airport': {'name': 'Hamad International Airport', 'id': 'DOH', 'time': '2025-08-29 01:35'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-29 06:40'}, 'duration': 305, 'airplane': 'Airbus A350', 'airline': 'Qatar Airways', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', 'travel_class': 'Economy', 'flight_number': 'QR 1335', 'ticket_also_sold_by': ['British Airways'], 'legroom': '31 in', 'extensions': ['Average legroom (31 in)', 'Wi-Fi for a fee', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 302 kg'], 'overnight': True}], 'layovers': [{'duration': 175, 'name': 'Hamad International Airport', 'id': 'DOH'}], 'total_duration': 895, 'carbon_emissions': {'this_flight': 647000, 'typical_for_this_route': 443000, 'difference_percent': 46}, 'price': 2274, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/multi.png', 'booking_token': 'WyJDalJJUVdsVFVWQjZabXRRVTFGQlJUUkpkbmRDUnkwdExTMHRMUzB0TFc5NWRIQXhNVUZCUVVGQlIybEVlSFZSUzNSVFZtMUJFZ3hDUVRFeU4zeFJVakV6TXpVYUN3aWQ4QTBRQWhvRFZWTkVPQnh3bmZBTiIsW1siTkJPIiwiMjAyNS0wOC0yNCIsIkxIUiIsbnVsbCwiQkEiLCI2NCJdXSxbWyJMSFIiLCIyMDI1LTA4LTI4IiwiRE9IIixudWxsLCJCQSIsIjEyNyJdLFsiRE9IIiwiMjAyNS0wOC0yOSIsIk5CTyIsbnVsbCwiUVIiLCIxMzM1Il1dXQ=='}, {'flights': [{'departure_airport': {'name': 'Heathrow Airport', 'id': 'LHR', 'time': '2025-08-28 06:50'}, 'arrival_airport': {'name': 'Brussels Airport', 'id': 'BRU', 'time': '2025-08-28 08:50'}, 'duration': 60, 'airplane': 'Airbus A320neo', 'airline': 'Brussels Airlines', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SN.png', 'travel_class': 'Economy', 'flight_number': 'SN 2104', 'legroom': '29 in', 'extensions': ['Below average legroom (29 in)', 'Carbon emissions estimate: 47 kg']}, {'departure_airport': {'name': 'Brussels Airport', 'id': 'BRU', 'time': '2025-08-28 10:25'}, 'arrival_airport': {'name': 'Jomo Kenyatta International Airport', 'id': 'NBO', 'time': '2025-08-28 20:20'}, 'duration': 535, 'airplane': 'Airbus A330', 'airline': 'Brussels Airlines', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SN.png', 'travel_class': 'Premium Economy', 'flight_number': 'SN 481', 'extensions': ['Extra reclining seat', 'In-seat power & USB outlets', 'On-demand video', 'Carbon emissions estimate: 746 kg']}], 'layovers': [{'duration': 95, 'name': 'Brussels Airport', 'id': 'BRU'}], 'total_duration': 690, 'carbon_emissions': {'this_flight': 794000, 'typical_for_this_route': 443000, 'difference_percent': 79}, 'price': 6049, 'type': 'Round trip', 'airline_logo': 'https://www.gstatic.com/flights/airline_logos/70px/SN.png', 'booking_token': 'WyJDalJJUVdsVFVWQjZabXRRVTFGQlJUUkpkbmRDUnkwdExTMHRMUzB0TFc5NWRIQXhNVUZCUVVGQlIybEVlSFZSUzNSVFZtMUJFZ3hUVGpJeE1EUjhVMDQwT0RFYUN3akE5U1FRQWhvRFZWTkVPQnh3d1BVayIsW1siTkJPIiwiMjAyNS0wOC0yNCIsIkxIUiIsbnVsbCwiQkEiLCI2NCJdXSxbWyJMSFIiLCIyMDI1LTA4LTI4IiwiQlJVIixudWxsLCJTTiIsIjIxMDQiXSxbIkJSVSIsIjIwMjUtMDgtMjgiLCJOQk8iLG51bGwsIlNOIiwiNDgxIl1dXQ=='}], 'airports': [{'departure': [{'airport': {'id': 'NBO', 'name': 'Jomo Kenyatta International Airport'}, 'city': 'Nairobi', 'country': 'Kenya', 'country_code': 'KE', 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJgZqWThMIEJU8EWQEL8hcZzOxK1ji3sApa3zoxjauXUyMyo3Z-u8UadAGGFTbn-dBXo--CTTj0KZ_wA', 'thumbnail': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTiiP2SZ4AOi4upmoXyQxaTnv4I_mlus1h5eHLAJelOHJyebwFv1wZLRfZP64SRn5UoHyVRVPyaZq_3DW7HeoVYSuvu5_o9WnJ50NlaMVw'}], 'arrival': [{'airport': {'id': 'LHR', 'name': 'Heathrow Airport'}, 'city': 'London', 'country': 'United Kingdom', 'country_code': 'GB', 'image': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRpN9RbtOSTDqKIPxWc_D6rdSysaWVh6d-NW7yz7yFXKRwh5RN5BpNIoXEwH1XVcFdLWqn6Sm8_Y_zmeg', 'thumbnail': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYH83YXny8hR4M7k5BMFq4vUT6LNtVABQzgs2pg-hcpSZq3oMBOQK3xh591AAJv2Qx4uvFZUGqOVt4kuoCUOklISunmndJleOoSef_7QE'}]}, {'departure': [{'airport': {'id': 'LHR', 'name': 'Heathrow Airport'}, 'city': 'London', 'country': 'United Kingdom', 'country_code': 'GB', 'image': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRpN9RbtOSTDqKIPxWc_D6rdSysaWVh6d-NW7yz7yFXKRwh5RN5BpNIoXEwH1XVcFdLWqn6Sm8_Y_zmeg', 'thumbnail': 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYH83YXny8hR4M7k5BMFq4vUT6LNtVABQzgs2pg-hcpSZq3oMBOQK3xh591AAJv2Qx4uvFZUGqOVt4kuoCUOklISunmndJleOoSef_7QE'}], 'arrival': [{'airport': {'id': 'NBO', 'name': 'Jomo Kenyatta International Airport'}, 'city': 'Nairobi', 'country': 'Kenya', 'country_code': 'KE', 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJgZqWThMIEJU8EWQEL8hcZzOxK1ji3sApa3zoxjauXUyMyo3Z-u8UadAGGFTbn-dBXo--CTTj0KZ_wA', 'thumbnail': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTiiP2SZ4AOi4upmoXyQxaTnv4I_mlus1h5eHLAJelOHJyebwFv1wZLRfZP64SRn5UoHyVRVPyaZq_3DW7HeoVYSuvu5_o9WnJ50NlaMVw'}]}]}
2025-07-26 11:35:58,111 - INFO - Searching flight for NBO → LON on 2025-08-04
2025-07-26 11:35:58,731 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LON', 'outbound_date': '2025-08-04', 'type': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:36:00,041 - ERROR - search_flight error: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 72, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
2025-07-26 11:36:00,045 - INFO - Searching flight for LON → PAR on 2025-08-08
2025-07-26 11:36:00,045 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'LON', 'arrival_id': 'PAR', 'outbound_date': '2025-08-08', 'type': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:36:00,493 - ERROR - search_flight error: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 72, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
2025-07-26 11:36:05,645 - INFO - Searching flight for NBO → LON on 2025-08-04
2025-07-26 11:36:05,646 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LON', 'outbound_date': '2025-08-04', 'type': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:36:06,132 - ERROR - search_flight error: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 72, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
2025-07-26 11:36:06,134 - INFO - Searching flight for LON → PAR on 2025-08-08
2025-07-26 11:36:06,135 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'LON', 'arrival_id': 'PAR', 'outbound_date': '2025-08-08', 'type': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:36:06,593 - ERROR - search_flight error: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 72, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
2025-07-26 11:36:12,927 - INFO - Searching flight for NBO → LON on 2025-08-04
2025-07-26 11:36:12,928 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LON', 'outbound_date': '2025-08-04', 'type': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:36:13,696 - ERROR - search_flight error: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 72, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
2025-07-26 11:36:17,568 - INFO - Searching flight for LON → PAR on 2025-08-08
2025-07-26 11:36:17,569 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'LON', 'arrival_id': 'PAR', 'outbound_date': '2025-08-08', 'type': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:36:18,004 - ERROR - search_flight error: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 72, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
2025-07-26 11:36:23,201 - INFO - Searching flight for NBO → LON on 2025-08-04
2025-07-26 11:36:23,202 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LON', 'outbound_date': '2025-08-04', 'type': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:36:24,126 - ERROR - search_flight error: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 72, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
2025-07-26 11:36:36,377 - INFO - Searching flight for NBO → LON on 2025-08-04
2025-07-26 11:36:36,378 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LON', 'outbound_date': '2025-08-04', 'type': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:36:36,844 - ERROR - search_flight error: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 72, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
2025-07-26 11:36:36,846 - INFO - Searching flight for LON → PAR on 2025-08-08
2025-07-26 11:36:36,846 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'LON', 'arrival_id': 'PAR', 'outbound_date': '2025-08-08', 'type': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:36:37,288 - ERROR - search_flight error: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 72, in search_flight
    raise Exception(f"SERP API error: {response.status_code} - {response.text}")
Exception: SERP API error: 400 - {
  "error": "`return_date` is required if `type` is `1` (Round trip)."
}
2025-07-26 11:41:58,991 - INFO - Searching flight for NBO → LON on 2025-08-04
2025-07-26 11:41:58,992 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LON', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:42:00,970 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-26 11:42:00,972 - INFO - Searching flight for LON → PAR on 2025-08-08
2025-07-26 11:42:00,972 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'LON', 'arrival_id': 'PAR', 'outbound_date': '2025-08-08', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:42:02,210 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-26 11:42:10,492 - INFO - Searching flight for NBO → LON on 2025-08-04
2025-07-26 11:42:10,493 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LON', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:42:10,755 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-26 11:42:10,756 - INFO - Searching flight for LON → PAR on 2025-08-08
2025-07-26 11:42:10,757 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'LON', 'arrival_id': 'PAR', 'outbound_date': '2025-08-08', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:42:11,363 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-26 11:50:31,504 - INFO - Searching flight for NBO → CDG on 2025-08-05
2025-07-26 11:50:31,505 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'CDG', 'outbound_date': '2025-08-05', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:50:33,383 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-26 11:50:33,387 - INFO - Searching flight for CDG → LON on 2025-08-10
2025-07-26 11:50:33,387 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'LON', 'outbound_date': '2025-08-10', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:50:34,502 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-26 11:50:51,539 - INFO - Searching flight for NBO → CDG on 2025-08-05
2025-07-26 11:50:51,539 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'CDG', 'outbound_date': '2025-08-05', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:50:51,789 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-26 11:50:51,791 - INFO - Searching flight for CDG → LON on 2025-08-10
2025-07-26 11:50:51,791 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'LON', 'outbound_date': '2025-08-10', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:50:52,018 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-26 11:52:22,404 - INFO - Searching flight for NBO → CDG on 2025-08-05
2025-07-26 11:52:22,405 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'CDG', 'outbound_date': '2025-08-05', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:52:22,682 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-26 11:52:22,683 - INFO - Searching flight for CDG → LON on 2025-08-12
2025-07-26 11:52:22,683 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'LON', 'outbound_date': '2025-08-12', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:52:23,737 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-26 11:52:36,111 - INFO - Searching flight for NBO → CDG on 2025-08-05
2025-07-26 11:52:36,112 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'CDG', 'outbound_date': '2025-08-05', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:52:36,334 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-26 11:52:36,336 - INFO - Searching flight for CDG → LON on 2025-08-12
2025-07-26 11:52:36,336 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'LON', 'outbound_date': '2025-08-12', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:52:36,550 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-26 11:59:08,872 - INFO - Searching flight for CDG → LON on 2025-08-12
2025-07-26 11:59:08,873 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'LON', 'outbound_date': '2025-08-12', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:59:09,150 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-26 11:59:15,423 - INFO - Searching flight for CDG → LON on 2025-08-12
2025-07-26 11:59:15,424 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'LON', 'outbound_date': '2025-08-12', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 11:59:15,655 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-26 12:04:10,877 - INFO - Searching multi-city flight...
2025-07-26 12:04:10,878 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'type': 3, 'multi_city_json': '[{"departure_id": "NBO", "arrival_id": "CDG", "date": "2025-08-10"}, {"departure_id": "CDG", "arrival_id": "AUS", "date": "2025-08-15"}]', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 12:04:24,323 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'airports'])
2025-07-26 12:04:24,325 - ERROR - search_flight error: 1 validation error for FlightLeg
duration
  Input should be a valid string [type=string_type, input_value=530, input_type=int]
    For further information visit https://errors.pydantic.dev/2.11/v/string_type
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 93, in search_flight
    legs = [
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 94, in <listcomp>
    FlightLeg(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for FlightLeg
duration
  Input should be a valid string [type=string_type, input_value=530, input_type=int]
    For further information visit https://errors.pydantic.dev/2.11/v/string_type
2025-07-26 12:04:32,918 - INFO - Searching multi-city flight...
2025-07-26 12:04:32,919 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'type': 3, 'multi_city_json': '[{"departure_id": "NBO", "arrival_id": "CDG", "date": "2025-08-10"}, {"departure_id": "CDG", "arrival_id": "AUS", "date": "2025-08-15"}]', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 12:04:33,173 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'airports'])
2025-07-26 12:04:33,174 - ERROR - search_flight error: 1 validation error for FlightLeg
duration
  Input should be a valid string [type=string_type, input_value=530, input_type=int]
    For further information visit https://errors.pydantic.dev/2.11/v/string_type
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 93, in search_flight
    legs = [
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 94, in <listcomp>
    FlightLeg(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for FlightLeg
duration
  Input should be a valid string [type=string_type, input_value=530, input_type=int]
    For further information visit https://errors.pydantic.dev/2.11/v/string_type
2025-07-26 12:04:33,178 - INFO - Searching flight for CDG → AUS on 2025-08-15
2025-07-26 12:04:33,178 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-15', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 12:04:35,024 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-26 12:04:54,714 - INFO - Searching flight for NBO → CDG on 2025-08-10
2025-07-26 12:04:54,715 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'CDG', 'outbound_date': '2025-08-10', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 12:05:01,441 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-26 12:05:08,164 - INFO - Searching flight for CDG → AUS on 2025-08-15
2025-07-26 12:05:08,164 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-15', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 12:05:08,377 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-26 12:08:01,822 - INFO - Searching flight for NBO → CDG on 2025-08-10
2025-07-26 12:08:01,823 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'CDG', 'outbound_date': '2025-08-10', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 12:08:02,157 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-26 13:40:07,669 - INFO - Searching flight for CDG → NBO on 2025-08-04
2025-07-26 13:40:07,669 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'NBO', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 13:40:10,423 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-26 13:41:10,984 - INFO - Searching flight for CDG → NBO on 2025-08-04
2025-07-26 13:41:10,984 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'NBO', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 13:41:11,230 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-26 13:41:25,355 - INFO - Searching flight for CDG → NBO on 2025-08-04
2025-07-26 13:41:25,356 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'NBO', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 13:41:25,572 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-26 13:42:36,565 - INFO - Searching flight for CDG → NBO on 2025-08-04
2025-07-26 13:42:36,566 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'NBO', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 13:42:36,791 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-26 13:46:46,858 - INFO - Searching flight for CDG → NBO on 2025-08-04
2025-07-26 13:46:46,858 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'NBO', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 13:46:47,539 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-26 13:57:58,512 - INFO - Searching flight for NBO → LON on 2025-08-04
2025-07-26 13:57:58,512 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LON', 'outbound_date': '2025-08-04', 'return_date': '2025-08-10', 'type': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-26 13:58:01,315 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-29 11:20:19,227 - INFO - Searching flight for CDG → AUS on 2025-08-29
2025-07-29 11:20:19,230 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-29', 'return_date': '2025-09-05', 'type': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3', 'adults': 1, 'children': 1, 'infants_in_seat': 0, 'infants_on_lap': 0}
2025-07-29 11:20:24,320 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 11:20:24,324 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-29', 'return_date': '2025-09-05', 'departure_token': 'WyJDalJJU25ab04xZHFWblZsTFZGQlExbEVTVkZDUnkwdExTMHRMUzB0TFhkaVltWmhOVUZCUVVGQlIybEphRVZuU1cxeWFEaEJFZ3RDUVRNd05YeENRVEU1TVJvTENJZmpDQkFDR2dOVlUwUTRISENINHdnPSIsW1siQ0RHIiwiMjAyNS0wOC0yOSIsIkxIUiIsbnVsbCwiQkEiLCIzMDUiXSxbIkxIUiIsIjIwMjUtMDgtMjkiLCJBVVMiLG51bGwsIkJBIiwiMTkxIl1dXQ==', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3', 'adults': 1, 'children': 1, 'infants_in_seat': 0, 'infants_on_lap': 0}
2025-07-29 11:20:32,270 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-29', 'return_date': '2025-09-05', 'departure_token': 'WyJDalJJU25ab04xZHFWblZsTFZGQlExbEVTVkZDUnkwdExTMHRMUzB0TFhkaVltWmhOVUZCUVVGQlIybEphRVZuU1cxeWFEaEJFZ3hNU0RFd05URjhURWcwTmpnYUN3aXRsQWtRQWhvRFZWTkVPQnh3clpRSiIsW1siQ0RHIiwiMjAyNS0wOC0yOSIsIkZSQSIsbnVsbCwiTEgiLCIxMDUxIl0sWyJGUkEiLCIyMDI1LTA4LTI5IiwiQVVTIixudWxsLCJMSCIsIjQ2OCJdXV0=', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3', 'adults': 1, 'children': 1, 'infants_in_seat': 0, 'infants_on_lap': 0}
2025-07-29 11:20:39,578 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-29', 'return_date': '2025-09-05', 'departure_token': 'WyJDalJJU25ab04xZHFWblZsTFZGQlExbEVTVkZDUnkwdExTMHRMUzB0TFhkaVltWmhOVUZCUVVGQlIybEphRVZuU1cxeWFEaEJFZ3RFVERnemZFUk1NVE01TnhvTENMTFVDUkFDR2dOVlUwUTRISEN5MUFrPSIsW1siQ0RHIiwiMjAyNS0wOC0yOSIsIkFUTCIsbnVsbCwiREwiLCI4MyJdLFsiQVRMIiwiMjAyNS0wOC0yOSIsIkFVUyIsbnVsbCwiREwiLCIxMzk3Il1dXQ==', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3', 'adults': 1, 'children': 1, 'infants_in_seat': 0, 'infants_on_lap': 0}
2025-07-29 11:21:14,072 - INFO - Searching flight for PAR → AUS on 2025-08-29
2025-07-29 11:21:14,073 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'PAR', 'arrival_id': 'AUS', 'outbound_date': '2025-08-29', 'return_date': '2025-09-05', 'type': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3', 'adults': 1, 'children': 1, 'infants_in_seat': 0, 'infants_on_lap': 0}
2025-07-29 11:21:16,399 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-29 11:22:57,299 - INFO - Searching flight for NBO → LON on 2025-08-29
2025-07-29 11:22:57,301 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LON', 'outbound_date': '2025-08-29', 'return_date': '2025-09-05', 'type': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3', 'adults': 1, 'children': 1, 'infants_in_seat': 0, 'infants_on_lap': 0}
2025-07-29 11:23:00,025 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-29 11:33:58,920 - INFO - Searching flight for NBO → LON on 2025-08-29
2025-07-29 11:33:58,921 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LON', 'outbound_date': '2025-08-29', 'return_date': '2025-09-05', 'type': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3', 'adults': 1, 'children': 0, 'infants_in_seat': 0, 'infants_on_lap': 0}
2025-07-29 11:34:01,607 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-29 11:38:08,220 - INFO - Searching flight for CDG → LHR on 2025-08-29
2025-07-29 11:38:08,222 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'LHR', 'outbound_date': '2025-08-29', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 11:38:12,886 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 11:38:24,109 - INFO - Searching flight for CDG → LHR on 2025-08-29
2025-07-29 11:38:24,110 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'LHR', 'outbound_date': '2025-08-29', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 11:38:24,994 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 14:22:39,022 - INFO - Searching flight for CDG → LON on 2025-08-29
2025-07-29 14:22:39,023 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'LON', 'outbound_date': '2025-08-29', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 14:22:45,526 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-29 14:22:51,920 - INFO - Searching flight for CDG → LON on 2025-08-29
2025-07-29 14:22:51,921 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'LON', 'outbound_date': '2025-08-29', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 14:22:52,460 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-29 14:24:23,751 - INFO - Searching flight for NBO → LON on 2025-07-30
2025-07-29 14:24:23,752 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LON', 'outbound_date': '2025-07-30', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 14:24:25,147 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-29 14:24:33,954 - INFO - Searching flight for NBO → LON on 2025-07-30
2025-07-29 14:24:33,955 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LON', 'outbound_date': '2025-07-30', 'type': 2, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 14:24:34,478 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-29 14:34:00,237 - INFO - Searching flight for CDG → LHR on 2025-08-29
2025-07-29 14:34:00,238 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'LHR', 'outbound_date': '2025-08-29', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 14:34:01,865 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 14:34:14,559 - INFO - Searching flight for CDG → LHR on 2025-08-29
2025-07-29 14:34:14,560 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'LHR', 'outbound_date': '2025-08-29', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 14:34:15,080 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 15:05:47,582 - INFO - Searching flight for CDG → AUS on 2025-08-29
2025-07-29 15:05:47,583 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-29', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 15:05:48,923 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 15:32:18,108 - INFO - Searching flight for CDG → AUS on 2025-08-30
2025-07-29 15:32:18,108 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-30', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 15:32:19,852 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 15:32:33,325 - INFO - Searching flight for CDG → AUS on 2025-08-30
2025-07-29 15:32:33,326 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-30', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 15:32:33,877 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 15:40:51,230 - INFO - Searching flight for CDG → AUS on 2025-08-30
2025-07-29 15:40:51,231 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-30', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 15:40:51,836 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 15:48:14,950 - INFO - Searching flight for CDG → AUS on 2025-08-30
2025-07-29 15:48:14,951 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-30', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 15:48:15,593 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 16:06:05,087 - INFO - Searching flight for CDG →  AUS on 2025-08-30
2025-07-29 16:06:05,088 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': ' AUS', 'outbound_date': '2025-08-30', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 16:06:06,552 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 16:08:48,923 - INFO - Searching flight for CDG → AUS on 2025-08-30
2025-07-29 16:08:48,923 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-30', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 16:08:49,531 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 16:22:37,380 - INFO - Searching flight for CDG → AUS on 2025-08-30
2025-07-29 16:22:37,380 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-30', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 16:22:38,018 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 16:23:52,175 - INFO - Searching flight for CDG → AUS on 2025-08-30
2025-07-29 16:23:52,177 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-30', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 16:23:52,735 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 16:29:18,613 - INFO - Searching flight for CDG → AUS on 2025-08-30
2025-07-29 16:29:18,613 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-30', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 16:29:19,246 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 16:33:49,090 - INFO - Searching flight for CDG → AUS on 2025-08-03
2025-07-29 16:33:49,091 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-03', 'return_date': '2025-08-06', 'type': 1, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 16:33:50,741 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 16:33:50,743 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-03', 'return_date': '2025-08-06', 'departure_token': 'WyJDalJJU3pZMmEyaFRiVXBCZG5OQlJEVkxSa0ZDUnkwdExTMHRMUzB0TFc5NVlYa3lNVUZCUVVGQlIybEplbU5CUW5RelJWTkJFZ3RWUVRVMmZGVkJNakk0T1JvTENOWFFDUkFDR2dOVlUwUTRISERWMEFrPSIsW1siQ0RHIiwiMjAyNS0wOC0wMyIsIkVXUiIsbnVsbCwiVUEiLCI1NiJdLFsiRVdSIiwiMjAyNS0wOC0wMyIsIkFVUyIsbnVsbCwiVUEiLCIyMjg5Il1dXQ==', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 16:33:53,849 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-03', 'return_date': '2025-08-06', 'departure_token': 'WyJDalJJU3pZMmEyaFRiVXBCZG5OQlJEVkxSa0ZDUnkwdExTMHRMUzB0TFc5NVlYa3lNVUZCUVVGQlIybEplbU5CUW5RelJWTkJFZ3hWUVRreE5IeFZRVEkzTWpRYUN3alYwQWtRQWhvRFZWTkVPQnh3MWRBSiIsW1siQ0RHIiwiMjAyNS0wOC0wMyIsIklBRCIsbnVsbCwiVUEiLCI5MTQiXSxbIklBRCIsIjIwMjUtMDgtMDMiLCJBVVMiLG51bGwsIlVBIiwiMjcyNCJdXV0=', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 16:34:03,464 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-03', 'return_date': '2025-08-06', 'departure_token': 'WyJDalJJU3pZMmEyaFRiVXBCZG5OQlJEVkxSa0ZDUnkwdExTMHRMUzB0TFc5NVlYa3lNVUZCUVVGQlIybEplbU5CUW5RelJWTkJFZ3hCUmpZek5IeEVUREkzTkRrYUN3alRtd29RQWhvRFZWTkVPQnh3MDVzSyIsW1siQ0RHIiwiMjAyNS0wOC0wMyIsIk1TUCIsbnVsbCwiQUYiLCI2MzQiXSxbIk1TUCIsIjIwMjUtMDgtMDMiLCJBVVMiLG51bGwsIkRMIiwiMjc0OSJdXV0=', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 17:13:30,871 - INFO - Searching flight for NBO → LON on 2025-08-06
2025-07-29 17:13:30,871 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LON', 'outbound_date': '2025-08-06', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 17:13:32,310 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-29 17:13:43,630 - INFO - Searching flight for NBO → LON on 2025-08-06
2025-07-29 17:13:43,632 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LON', 'outbound_date': '2025-08-06', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 17:13:44,166 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-29 17:28:02,126 - INFO - Searching flight for CDG → AUS on 2025-08-06
2025-07-29 17:28:02,127 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-06', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 17:28:04,653 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 17:41:38,864 - INFO - Searching flight for CDG → AUS on 2025-08-06
2025-07-29 17:41:38,864 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-06', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 17:41:39,477 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 17:47:57,548 - INFO - Searching flight for CDG → AUS on 2025-08-09
2025-07-29 17:47:57,550 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-09', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 17:47:59,471 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 17:48:11,667 - INFO - Searching flight for CDG → AUS on 2025-08-09
2025-07-29 17:48:11,668 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-09', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 17:48:12,198 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 17:49:34,586 - INFO - Searching flight for CDG → AUS on 2025-08-09
2025-07-29 17:49:34,587 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-09', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 17:49:35,134 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 17:50:02,345 - INFO - Searching flight for CDG → AUS on 2025-08-09
2025-07-29 17:50:02,346 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-09', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 17:50:02,887 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 18:24:05,151 - INFO - Searching flight for CDG → AUS on 2025-08-10
2025-07-29 18:24:05,153 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-10', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 18:24:06,313 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-29 18:24:18,052 - INFO - Searching flight for CDG → AUS on 2025-08-10
2025-07-29 18:24:18,053 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-10', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 18:24:18,971 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-29 18:27:56,783 - INFO - Searching flight for CDG → AUS on 2025-08-09
2025-07-29 18:27:56,784 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-09', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 18:27:57,395 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 18:28:09,372 - INFO - Searching flight for CDG → AUS on 2025-08-09
2025-07-29 18:28:09,373 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-09', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 18:28:09,963 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 18:41:47,247 - INFO - Searching flight for CDG → AUS on 2025-08-10
2025-07-29 18:41:47,248 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-10', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 18:41:47,960 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-29 18:42:51,328 - INFO - Searching flight for CDG → AUS on 2025-08-09
2025-07-29 18:42:51,329 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-09', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 18:42:52,038 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-29 18:43:12,445 - INFO - Searching flight for CDG → AUS on 2025-08-09
2025-07-29 18:43:12,446 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-09', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-29 18:43:13,036 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 11:48:06,674 - INFO - Searching flight for NBO → LON on 2025-08-04
2025-07-30 11:48:06,675 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LON', 'outbound_date': '2025-08-04', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 11:48:08,485 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-30 12:04:03,494 - INFO - Searching flight for NBO → LHR on 2025-08-04
2025-07-30 12:04:03,494 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-04', 'return_date': '2025-08-11', 'type': 1, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 12:04:05,906 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 12:04:05,908 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-04', 'return_date': '2025-08-11', 'departure_token': 'WyJDalJJWkVOa1JXc3dSRGxKU1ZGQlFUQlFSM2RDUnkwdExTMHRMUzB0TFd4eVozWXlPVUZCUVVGQlIybEtORUZWUTJwdVRWRkJFZ3hUVGpRNE1ueFRUakl3T1RNYUN3anMwUVlRQWhvRFZWTkVPQnh3N05FRyIsW1siTkJPIiwiMjAyNS0wOC0wNCIsIkJSVSIsbnVsbCwiU04iLCI0ODIiXSxbIkJSVSIsIjIwMjUtMDgtMDUiLCJMSFIiLG51bGwsIlNOIiwiMjA5MyJdXV0=', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 12:04:08,768 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-04', 'return_date': '2025-08-11', 'departure_token': 'WyJDalJJWkVOa1JXc3dSRGxKU1ZGQlFUQlFSM2RDUnkwdExTMHRMUzB0TFd4eVozWXlPVUZCUVVGQlIybEtORUZWUTJwdVRWRkJFZ1JDUVRZeUdnc0kyT2NJRUFJYUExVlRSRGdjY05qbkNBPT0iLFtbIk5CTyIsIjIwMjUtMDgtMDQiLCJMSFIiLG51bGwsIkJBIiwiNjIiXV1d', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 12:04:12,019 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LHR', 'outbound_date': '2025-08-04', 'return_date': '2025-08-11', 'departure_token': 'WyJDalJJWkVOa1JXc3dSRGxKU1ZGQlFUQlFSM2RDUnkwdExTMHRMUzB0TFd4eVozWXlPVUZCUVVGQlIybEtORUZWUTJwdVRWRkJFZ1JDUVRZMEdnc0kyT2NJRUFJYUExVlRSRGdjY05qbkNBPT0iLFtbIk5CTyIsIjIwMjUtMDgtMDQiLCJMSFIiLG51bGwsIkJBIiwiNjQiXV1d', 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 12:07:08,772 - INFO - Searching flight for NBO → LON on 2025-08-04
2025-07-30 12:07:08,773 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LON', 'outbound_date': '2025-08-04', 'return_date': '2025-08-11', 'type': 1, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 12:07:10,845 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-30 12:41:59,462 - INFO - Searching flight for NBO → LON on 2025-08-04
2025-07-30 12:41:59,464 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LON', 'outbound_date': '2025-08-04', 'return_date': '2025-08-10', 'type': 1, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 12:42:02,445 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-30 12:42:11,501 - INFO - Searching flight for NBO → LON on 2025-08-04
2025-07-30 12:42:11,503 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LON', 'outbound_date': '2025-08-04', 'return_date': '2025-08-10', 'type': 1, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 12:42:12,175 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-30 12:46:12,413 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 12:46:12,414 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 12:46:13,912 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 12:46:13,916 - ERROR - search_flight error: "FlightOption" object has no field "option_id"
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 249, in search_flight
    flight.option_id = flight_id  # You might want to include this in the response
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 997, in __setattr__
    elif (setattr_handler := self._setattr_handler(name, value)) is not None:
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 1044, in _setattr_handler
    raise ValueError(f'"{cls.__name__}" object has no field "{name}"')
ValueError: "FlightOption" object has no field "option_id"
2025-07-30 12:46:22,115 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 12:46:22,116 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 12:46:22,833 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 12:46:22,836 - ERROR - search_flight error: "FlightOption" object has no field "option_id"
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 249, in search_flight
    flight.option_id = flight_id  # You might want to include this in the response
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 997, in __setattr__
    elif (setattr_handler := self._setattr_handler(name, value)) is not None:
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 1044, in _setattr_handler
    raise ValueError(f'"{cls.__name__}" object has no field "{name}"')
ValueError: "FlightOption" object has no field "option_id"
2025-07-30 12:46:38,096 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 12:46:38,100 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 12:46:38,879 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 12:46:38,881 - ERROR - search_flight error: "FlightOption" object has no field "option_id"
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 249, in search_flight
    flight.option_id = flight_id  # You might want to include this in the response
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 997, in __setattr__
    elif (setattr_handler := self._setattr_handler(name, value)) is not None:
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 1044, in _setattr_handler
    raise ValueError(f'"{cls.__name__}" object has no field "{name}"')
ValueError: "FlightOption" object has no field "option_id"
2025-07-30 12:48:59,710 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 12:48:59,711 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 12:49:00,447 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 12:50:34,736 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 12:50:34,737 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 12:50:35,459 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 12:50:59,214 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 12:50:59,216 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 12:50:59,824 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 12:59:24,644 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 12:59:24,645 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 12:59:25,480 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 12:59:42,269 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 12:59:42,270 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 12:59:42,925 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 13:02:11,422 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 13:02:11,423 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 13:02:12,082 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 13:02:49,604 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 13:02:49,605 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 13:02:50,363 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 13:15:46,222 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 13:15:46,223 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 13:15:46,969 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 13:16:02,240 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 13:16:02,241 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 13:16:03,059 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 13:17:15,970 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 13:17:15,971 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 13:17:16,784 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 13:24:20,928 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 13:24:20,929 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 13:24:21,748 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 13:25:37,771 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 13:25:37,772 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 13:25:38,456 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 13:26:26,063 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 13:26:26,064 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'adults': 1, 'hl': 'en', 'currency': 'USD', 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 13:26:26,778 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 13:40:49,762 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 13:40:49,763 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 13:40:50,636 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 13:45:02,023 - INFO - Searching flight for CDG → LON on 2025-08-04
2025-07-30 13:45:02,024 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'LON', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 13:45:04,199 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-30 13:45:11,849 - INFO - Searching flight for CDG → LON on 2025-08-04
2025-07-30 13:45:11,850 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'LON', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 13:45:12,699 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-30 13:46:11,969 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 13:46:11,969 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 13:46:12,755 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 13:50:20,999 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 13:50:21,000 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 13:50:23,250 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 13:54:46,746 - INFO - Searching flight for CDG → AUS on 2025-08-05
2025-07-30 13:54:46,747 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-05', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 13:54:52,835 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 13:55:20,416 - INFO - Searching flight for CDG → AUS on 2025-08-05
2025-07-30 13:55:20,417 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-05', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 13:55:26,556 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 14:05:56,422 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 14:05:56,422 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 14:05:57,241 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 14:09:18,765 - INFO - Searching flight for CDG → AUS on 2025-08-05
2025-07-30 14:09:18,766 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-05', 'return_date': '2025-08-10', 'type': 1, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 14:09:20,300 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 14:09:20,301 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-05', 'return_date': '2025-08-10', 'departure_token': 'WyJDalJJVG5WdmFuUmFaRXRVWlhOQlJFRnBia0ZDUnkwdExTMHRMUzB0TFc5cllteGpNVUZCUVVGQlIybEtYMVk0VFhwc05ubEJFZ3hCUXpnM01YeEJRekV3TlRFYUN3aWMwQWtRQWhvRFZWTkVPQnh3bk5BSiIsW1siQ0RHIiwiMjAyNS0wOC0wNSIsIllVTCIsbnVsbCwiQUMiLCI4NzEiXSxbIllVTCIsIjIwMjUtMDgtMDUiLCJBVVMiLG51bGwsIkFDIiwiMTA1MSJdXV0=', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 14:09:26,122 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-05', 'return_date': '2025-08-10', 'departure_token': 'WyJDalJJVG5WdmFuUmFaRXRVWlhOQlJFRnBia0ZDUnkwdExTMHRMUzB0TFc5cllteGpNVUZCUVVGQlIybEtYMVk0VFhwc05ubEJFZ3RWUVRVMmZGVkJNakk0T1JvTENLTFVDUkFDR2dOVlUwUTRISENpMUFrPSIsW1siQ0RHIiwiMjAyNS0wOC0wNSIsIkVXUiIsbnVsbCwiVUEiLCI1NiJdLFsiRVdSIiwiMjAyNS0wOC0wNSIsIkFVUyIsbnVsbCwiVUEiLCIyMjg5Il1dXQ==', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 14:09:30,948 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-05', 'return_date': '2025-08-10', 'departure_token': 'WyJDalJJVG5WdmFuUmFaRXRVWlhOQlJFRnBia0ZDUnkwdExTMHRMUzB0TFc5cllteGpNVUZCUVVGQlIybEtYMVk0VFhwc05ubEJFZ3RFVERnNWZFUk1NVEEyTUJvTENKU2ZDaEFDR2dOVlUwUTRISENVbndvPSIsW1siQ0RHIiwiMjAyNS0wOC0wNSIsIkFUTCIsbnVsbCwiREwiLCI4OSJdLFsiQVRMIiwiMjAyNS0wOC0wNSIsIkFVUyIsbnVsbCwiREwiLCIxMDYwIl1dXQ==', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 14:10:06,790 - INFO - Searching flight for CDG → AUS on 2025-08-05
2025-07-30 14:10:06,791 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-05', 'return_date': '2025-08-10', 'type': 1, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 14:10:07,610 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 14:10:07,611 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-05', 'return_date': '2025-08-10', 'departure_token': 'WyJDalJJVG5WdmFuUmFaRXRVWlhOQlJFRnBia0ZDUnkwdExTMHRMUzB0TFc5cllteGpNVUZCUVVGQlIybEtYMVk0VFhwc05ubEJFZ3hCUXpnM01YeEJRekV3TlRFYUN3aWMwQWtRQWhvRFZWTkVPQnh3bk5BSiIsW1siQ0RHIiwiMjAyNS0wOC0wNSIsIllVTCIsbnVsbCwiQUMiLCI4NzEiXSxbIllVTCIsIjIwMjUtMDgtMDUiLCJBVVMiLG51bGwsIkFDIiwiMTA1MSJdXV0=', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 14:10:08,436 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-05', 'return_date': '2025-08-10', 'departure_token': 'WyJDalJJVG5WdmFuUmFaRXRVWlhOQlJFRnBia0ZDUnkwdExTMHRMUzB0TFc5cllteGpNVUZCUVVGQlIybEtYMVk0VFhwc05ubEJFZ3RWUVRVMmZGVkJNakk0T1JvTENLTFVDUkFDR2dOVlUwUTRISENpMUFrPSIsW1siQ0RHIiwiMjAyNS0wOC0wNSIsIkVXUiIsbnVsbCwiVUEiLCI1NiJdLFsiRVdSIiwiMjAyNS0wOC0wNSIsIkFVUyIsbnVsbCwiVUEiLCIyMjg5Il1dXQ==', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 14:10:09,307 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-05', 'return_date': '2025-08-10', 'departure_token': 'WyJDalJJVG5WdmFuUmFaRXRVWlhOQlJFRnBia0ZDUnkwdExTMHRMUzB0TFc5cllteGpNVUZCUVVGQlIybEtYMVk0VFhwc05ubEJFZ3RFVERnNWZFUk1NVEEyTUJvTENKU2ZDaEFDR2dOVlUwUTRISENVbndvPSIsW1siQ0RHIiwiMjAyNS0wOC0wNSIsIkFUTCIsbnVsbCwiREwiLCI4OSJdLFsiQVRMIiwiMjAyNS0wOC0wNSIsIkFVUyIsbnVsbCwiREwiLCIxMDYwIl1dXQ==', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 14:10:10,068 - INFO - Searching flight for AUS → CDG on 2025-08-10
2025-07-30 14:10:10,069 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'AUS', 'arrival_id': 'CDG', 'outbound_date': '2025-08-10', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 14:10:12,349 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 14:26:04,441 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 14:26:04,443 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 14:26:05,407 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 14:30:03,858 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 14:30:03,860 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'return_date': '2025-08-10', 'type': 1, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 14:30:07,539 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 14:30:07,541 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'return_date': '2025-08-10', 'departure_token': 'WyJDalJJYTB0TFZXbHJTSEJPUVUxQlJIUndSbmRDUnkwdExTMHRMUzB0WldaaWFHVXhNRUZCUVVGQlIybExRV28wUWsxVE16WkJFZ3hCUXpnM01YeEJRekV3TlRFYUN3aXh6Z2tRQWhvRFZWTkVPQnh3c2M0SiIsW1siQ0RHIiwiMjAyNS0wOC0wNCIsIllVTCIsbnVsbCwiQUMiLCI4NzEiXSxbIllVTCIsIjIwMjUtMDgtMDQiLCJBVVMiLG51bGwsIkFDIiwiMTA1MSJdXV0=', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 14:30:15,316 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'return_date': '2025-08-10', 'departure_token': 'WyJDalJJYTB0TFZXbHJTSEJPUVUxQlJIUndSbmRDUnkwdExTMHRMUzB0WldaaWFHVXhNRUZCUVVGQlIybExRV28wUWsxVE16WkJFZ3RWUVRVMmZGVkJNakk0T1JvTENMZlNDUkFDR2dOVlUwUTRISEMzMGdrPSIsW1siQ0RHIiwiMjAyNS0wOC0wNCIsIkVXUiIsbnVsbCwiVUEiLCI1NiJdLFsiRVdSIiwiMjAyNS0wOC0wNCIsIkFVUyIsbnVsbCwiVUEiLCIyMjg5Il1dXQ==', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 14:30:20,439 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'return_date': '2025-08-10', 'departure_token': 'WyJDalJJYTB0TFZXbHJTSEJPUVUxQlJIUndSbmRDUnkwdExTMHRMUzB0WldaaWFHVXhNRUZCUVVGQlIybExRV28wUWsxVE16WkJFZ3RCUmpNMGZFUk1NekE1T0JvTENMK2RDaEFDR2dOVlUwUTRISEMvblFvPSIsW1siQ0RHIiwiMjAyNS0wOC0wNCIsIkFUTCIsbnVsbCwiQUYiLCIzNCJdLFsiQVRMIiwiMjAyNS0wOC0wNCIsIkFVUyIsbnVsbCwiREwiLCIzMDk4Il1dXQ==', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 14:36:16,180 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 14:36:16,181 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 14:36:16,937 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 14:36:16,940 - INFO - Searching flight for AUS → LON on 2025-08-15
2025-07-30 14:36:16,940 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'AUS', 'arrival_id': 'LON', 'outbound_date': '2025-08-15', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 14:36:18,939 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-30 14:38:12,874 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 14:38:12,875 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 14:38:14,798 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 14:38:14,800 - INFO - Searching flight for AUS → NBO on 2025-08-15
2025-07-30 14:38:14,801 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'AUS', 'arrival_id': 'NBO', 'outbound_date': '2025-08-15', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 14:38:17,008 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 15:43:13,753 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 15:43:13,754 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 15:43:15,604 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 15:44:08,946 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 15:44:08,946 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 15:44:09,594 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 15:44:23,795 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 15:44:23,796 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 15:44:24,455 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:30:51,237 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 16:30:51,238 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:30:51,960 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:30:51,961 - ERROR - search_flight error: can't multiply sequence by non-int of type 'tuple'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 200, in search_flight
    total_price = (base_price * adults + base_price * 0.75 * children + base_price * 0.10 * infants),
TypeError: can't multiply sequence by non-int of type 'tuple'
2025-07-30 16:31:04,329 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 16:31:04,330 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:31:04,981 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:31:04,982 - ERROR - search_flight error: can't multiply sequence by non-int of type 'tuple'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 200, in search_flight
    total_price = (base_price * adults + base_price * 0.75 * children + base_price * 0.10 * infants),
TypeError: can't multiply sequence by non-int of type 'tuple'
2025-07-30 16:31:11,159 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 16:31:11,160 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:31:11,849 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:31:11,850 - ERROR - search_flight error: can't multiply sequence by non-int of type 'tuple'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 200, in search_flight
    total_price = (base_price * adults + base_price * 0.75 * children + base_price * 0.10 * infants),
TypeError: can't multiply sequence by non-int of type 'tuple'
2025-07-30 16:31:21,104 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 16:31:21,105 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:31:21,736 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:31:21,737 - ERROR - search_flight error: can't multiply sequence by non-int of type 'tuple'
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 200, in search_flight
    total_price = (base_price * adults + base_price * 0.75 * children + base_price * 0.10 * infants),
TypeError: can't multiply sequence by non-int of type 'tuple'
2025-07-30 16:34:13,331 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 16:34:13,331 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:34:14,013 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:34:14,017 - ERROR - search_flight error: 1 validation error for FlightOption
price
  Input should be a valid number [type=float_type, input_value=(902.0,), input_type=tuple]
    For further information visit https://errors.pydantic.dev/2.11/v/float_type
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 211, in search_flight
    flight_option = FlightOption(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for FlightOption
price
  Input should be a valid number [type=float_type, input_value=(902.0,), input_type=tuple]
    For further information visit https://errors.pydantic.dev/2.11/v/float_type
2025-07-30 16:34:17,847 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 16:34:17,848 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:34:18,453 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:34:18,453 - ERROR - search_flight error: 1 validation error for FlightOption
price
  Input should be a valid number [type=float_type, input_value=(902.0,), input_type=tuple]
    For further information visit https://errors.pydantic.dev/2.11/v/float_type
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 211, in search_flight
    flight_option = FlightOption(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for FlightOption
price
  Input should be a valid number [type=float_type, input_value=(902.0,), input_type=tuple]
    For further information visit https://errors.pydantic.dev/2.11/v/float_type
2025-07-30 16:34:30,188 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 16:34:34,651 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:34:35,664 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:34:35,665 - ERROR - search_flight error: 1 validation error for FlightOption
price
  Input should be a valid number [type=float_type, input_value=(902.0,), input_type=tuple]
    For further information visit https://errors.pydantic.dev/2.11/v/float_type
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 211, in search_flight
    flight_option = FlightOption(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for FlightOption
price
  Input should be a valid number [type=float_type, input_value=(902.0,), input_type=tuple]
    For further information visit https://errors.pydantic.dev/2.11/v/float_type
2025-07-30 16:34:41,771 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 16:34:41,772 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:34:42,425 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:34:42,427 - ERROR - search_flight error: 1 validation error for FlightOption
price
  Input should be a valid number [type=float_type, input_value=(902.0,), input_type=tuple]
    For further information visit https://errors.pydantic.dev/2.11/v/float_type
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 211, in search_flight
    flight_option = FlightOption(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for FlightOption
price
  Input should be a valid number [type=float_type, input_value=(902.0,), input_type=tuple]
    For further information visit https://errors.pydantic.dev/2.11/v/float_type
2025-07-30 16:38:06,392 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 16:38:06,393 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:38:07,151 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:38:07,153 - ERROR - search_flight error: 1 validation error for FlightOption
price
  Input should be a valid number [type=float_type, input_value=(1578.5,), input_type=tuple]
    For further information visit https://errors.pydantic.dev/2.11/v/float_type
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 211, in search_flight
    flight_option = FlightOption(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for FlightOption
price
  Input should be a valid number [type=float_type, input_value=(1578.5,), input_type=tuple]
    For further information visit https://errors.pydantic.dev/2.11/v/float_type
2025-07-30 16:38:12,069 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 16:38:12,069 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:38:12,726 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:38:12,727 - ERROR - search_flight error: 1 validation error for FlightOption
price
  Input should be a valid number [type=float_type, input_value=(1578.5,), input_type=tuple]
    For further information visit https://errors.pydantic.dev/2.11/v/float_type
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 211, in search_flight
    flight_option = FlightOption(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for FlightOption
price
  Input should be a valid number [type=float_type, input_value=(1578.5,), input_type=tuple]
    For further information visit https://errors.pydantic.dev/2.11/v/float_type
2025-07-30 16:38:21,726 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 16:38:21,727 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:38:22,335 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:38:22,335 - ERROR - search_flight error: 1 validation error for FlightOption
price
  Input should be a valid number [type=float_type, input_value=(1578.5,), input_type=tuple]
    For further information visit https://errors.pydantic.dev/2.11/v/float_type
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 211, in search_flight
    flight_option = FlightOption(
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for FlightOption
price
  Input should be a valid number [type=float_type, input_value=(1578.5,), input_type=tuple]
    For further information visit https://errors.pydantic.dev/2.11/v/float_type
2025-07-30 16:40:50,755 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 16:40:50,756 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:40:51,422 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:40:51,423 - ERROR - search_flight error: "FlightOption" object has no field "price_breakdown"
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 223, in search_flight
    flight_option.price_breakdown = price_breakdown
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 997, in __setattr__
    elif (setattr_handler := self._setattr_handler(name, value)) is not None:
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 1044, in _setattr_handler
    raise ValueError(f'"{cls.__name__}" object has no field "{name}"')
ValueError: "FlightOption" object has no field "price_breakdown"
2025-07-30 16:40:56,702 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 16:40:56,703 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:40:57,332 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:40:57,332 - ERROR - search_flight error: "FlightOption" object has no field "price_breakdown"
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 223, in search_flight
    flight_option.price_breakdown = price_breakdown
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 997, in __setattr__
    elif (setattr_handler := self._setattr_handler(name, value)) is not None:
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 1044, in _setattr_handler
    raise ValueError(f'"{cls.__name__}" object has no field "{name}"')
ValueError: "FlightOption" object has no field "price_breakdown"
2025-07-30 16:41:03,771 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 16:41:03,772 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:41:04,440 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:41:04,440 - ERROR - search_flight error: "FlightOption" object has no field "price_breakdown"
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 223, in search_flight
    flight_option.price_breakdown = price_breakdown
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 997, in __setattr__
    elif (setattr_handler := self._setattr_handler(name, value)) is not None:
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 1044, in _setattr_handler
    raise ValueError(f'"{cls.__name__}" object has no field "{name}"')
ValueError: "FlightOption" object has no field "price_breakdown"
2025-07-30 16:41:13,513 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 16:41:13,513 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:41:14,165 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:41:14,166 - ERROR - search_flight error: "FlightOption" object has no field "price_breakdown"
Traceback (most recent call last):
  File "/home/angela/Projects/travel/server/tools/search_flight.py", line 223, in search_flight
    flight_option.price_breakdown = price_breakdown
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 997, in __setattr__
    elif (setattr_handler := self._setattr_handler(name, value)) is not None:
  File "/home/angela/Projects/travel/server/venv/lib/python3.10/site-packages/pydantic/main.py", line 1044, in _setattr_handler
    raise ValueError(f'"{cls.__name__}" object has no field "{name}"')
ValueError: "FlightOption" object has no field "price_breakdown"
2025-07-30 16:46:15,491 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 16:46:15,492 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:46:17,268 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:47:01,252 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 16:47:01,253 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:47:01,882 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:47:19,451 - INFO - Searching flight for CDG → AUS on 2025-08-14
2025-07-30 16:47:19,451 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-14', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:47:20,248 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:55:43,483 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 16:55:43,483 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:55:46,521 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 16:56:02,260 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 16:56:02,261 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'type': 2, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 16:56:02,902 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 17:08:53,516 - INFO - Searching flight for CDG → AUS on 2025-08-04
2025-07-30 17:08:53,516 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'return_date': '2025-08-10', 'type': 1, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 17:08:55,239 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 17:08:55,239 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'return_date': '2025-08-10', 'departure_token': 'WyJDalJJZG5KalFtRnpZVXBuU3pSQlExbE9jbWRDUnkwdExTMHRMUzB0TFhCcVkyTXhNa0ZCUVVGQlIybExTak5aUVdSbE5YVkJFZ3hCUXpnM01YeEJRekV3TlRFYUN3ajZ4Z2tRQWhvRFZWTkVPQnh3K3NZSiIsW1siQ0RHIiwiMjAyNS0wOC0wNCIsIllVTCIsbnVsbCwiQUMiLCI4NzEiXSxbIllVTCIsIjIwMjUtMDgtMDQiLCJBVVMiLG51bGwsIkFDIiwiMTA1MSJdXV0=', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 17:08:59,904 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'return_date': '2025-08-10', 'departure_token': 'WyJDalJJZG5KalFtRnpZVXBuU3pSQlExbE9jbWRDUnkwdExTMHRMUzB0TFhCcVkyTXhNa0ZCUVVGQlIybExTak5aUVdSbE5YVkJFZ3RWUVRVMmZGVkJNakk0T1JvTENQM0tDUkFDR2dOVlUwUTRISEQ5eWdrPSIsW1siQ0RHIiwiMjAyNS0wOC0wNCIsIkVXUiIsbnVsbCwiVUEiLCI1NiJdLFsiRVdSIiwiMjAyNS0wOC0wNCIsIkFVUyIsbnVsbCwiVUEiLCIyMjg5Il1dXQ==', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 17:09:16,812 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-04', 'return_date': '2025-08-10', 'departure_token': 'WyJDalJJZG5KalFtRnpZVXBuU3pSQlExbE9jbWRDUnkwdExTMHRMUzB0TFhCcVkyTXhNa0ZCUVVGQlIybExTak5aUVdSbE5YVkJFZ3RCUmpNMGZFUk1NekE1T0JvTENNdVZDaEFDR2dOVlUwUTRISERMbFFvPSIsW1siQ0RHIiwiMjAyNS0wOC0wNCIsIkFUTCIsbnVsbCwiQUYiLCIzNCJdLFsiQVRMIiwiMjAyNS0wOC0wNCIsIkFVUyIsbnVsbCwiREwiLCIzMDk4Il1dXQ==', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 17:33:56,293 - INFO - Searching flight for CDG → AUS on 2025-08-05
2025-07-30 17:33:56,294 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-05', 'return_date': '2025-08-08', 'type': 1, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 17:33:58,291 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 17:33:58,293 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-05', 'return_date': '2025-08-08', 'departure_token': 'WyJDalJJZDBKRVVXVlZNRVpoWm5OQlJFbHdiMUZDUnkwdExTMHRMUzB0TFMxdmVXTnRORUZCUVVGQlIybExURlpWUTBKWldsVkJFZ3hCUXpnM01YeEJRekV3TlRFYUN3aTN5QWtRQWhvRFZWTkVPQnh3dDhnSiIsW1siQ0RHIiwiMjAyNS0wOC0wNSIsIllVTCIsbnVsbCwiQUMiLCI4NzEiXSxbIllVTCIsIjIwMjUtMDgtMDUiLCJBVVMiLG51bGwsIkFDIiwiMTA1MSJdXV0=', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 17:34:04,741 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-05', 'return_date': '2025-08-08', 'departure_token': 'WyJDalJJZDBKRVVXVlZNRVpoWm5OQlJFbHdiMUZDUnkwdExTMHRMUzB0TFMxdmVXTnRORUZCUVVGQlIybExURlpWUTBKWldsVkJFZ3RWUVRVMmZGVkJNakk0T1JvTENMck1DUkFDR2dOVlUwUTRISEM2ekFrPSIsW1siQ0RHIiwiMjAyNS0wOC0wNSIsIkVXUiIsbnVsbCwiVUEiLCI1NiJdLFsiRVdSIiwiMjAyNS0wOC0wNSIsIkFVUyIsbnVsbCwiVUEiLCIyMjg5Il1dXQ==', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 17:34:11,810 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'CDG', 'arrival_id': 'AUS', 'outbound_date': '2025-08-05', 'return_date': '2025-08-08', 'departure_token': 'WyJDalJJZDBKRVVXVlZNRVpoWm5OQlJFbHdiMUZDUnkwdExTMHRMUzB0TFMxdmVXTnRORUZCUVVGQlIybExURlpWUTBKWldsVkJFZ3RFVERnNWZFUk1NVEEyTUJvTENPK1dDaEFDR2dOVlUwUTRISER2bGdvPSIsW1siQ0RHIiwiMjAyNS0wOC0wNSIsIkFUTCIsbnVsbCwiREwiLCI4OSJdLFsiQVRMIiwiMjAyNS0wOC0wNSIsIkFVUyIsbnVsbCwiREwiLCIxMDYwIl1dXQ==', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 17:48:24,388 - INFO - Searching flight for NBO → LON on 2025-08-05
2025-07-30 17:48:24,389 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'LON', 'outbound_date': '2025-08-05', 'return_date': '2025-08-08', 'type': 1, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 17:48:26,744 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'search_information', 'error'])
2025-07-30 17:49:03,199 - INFO - Searching flight for NBO → CDG on 2025-08-05
2025-07-30 17:49:03,200 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'CDG', 'outbound_date': '2025-08-05', 'return_date': '2025-08-08', 'type': 1, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 17:49:05,147 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 17:49:05,150 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'CDG', 'outbound_date': '2025-08-05', 'return_date': '2025-08-08', 'departure_token': 'WyJDalJJY25CcFNuWjFkblV5VWtWQlExSTBhMmRDUnkwdExTMHRMUzB0TFhCcVltOXRORUZCUVVGQlIybExUVTlCUTFOT2FUQkJFZ3hOVXpFNE5UQjhUVk0zT1RrYUN3alo4UWdRQWhvRFZWTkVPQnh3MmZFSSIsW1siTkJPIiwiMjAyNS0wOC0wNSIsIkNBSSIsbnVsbCwiTVMiLCIxODUwIl0sWyJDQUkiLCIyMDI1LTA4LTA1IiwiQ0RHIixudWxsLCJNUyIsIjc5OSJdXV0=', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 17:49:07,296 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'CDG', 'outbound_date': '2025-08-05', 'return_date': '2025-08-08', 'departure_token': 'WyJDalJJY25CcFNuWjFkblV5VWtWQlExSTBhMmRDUnkwdExTMHRMUzB0TFhCcVltOXRORUZCUVVGQlIybExUVTlCUTFOT2FUQkJFZ3BDUVRZMGZFSkJNekEyR2dzSS9wa0pFQUlhQTFWVFJEZ2NjUDZaQ1E9PSIsW1siTkJPIiwiMjAyNS0wOC0wNSIsIkxIUiIsbnVsbCwiQkEiLCI2NCJdLFsiTEhSIiwiMjAyNS0wOC0wNiIsIkNERyIsbnVsbCwiQkEiLCIzMDYiXV1d', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 17:49:14,359 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'CDG', 'outbound_date': '2025-08-05', 'return_date': '2025-08-08', 'departure_token': 'WyJDalJJY25CcFNuWjFkblV5VWtWQlExSTBhMmRDUnkwdExTMHRMUzB0TFhCcVltOXRORUZCUVVGQlIybExUVTlCUTFOT2FUQkJFZ1ZMVVRFeE1ob0xDTFArQ1JBQ0dnTlZVMFE0SEhDei9naz0iLFtbIk5CTyIsIjIwMjUtMDgtMDUiLCJDREciLG51bGwsIktRIiwiMTEyIl1dXQ==', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 17:54:03,876 - INFO - Searching flight for NBO → CDG on 2025-08-05
2025-07-30 17:54:03,878 - INFO - Calling SERP API with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'CDG', 'outbound_date': '2025-08-05', 'return_date': '2025-08-08', 'type': 1, 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 17:54:04,266 - INFO - SERP response keys: dict_keys(['search_metadata', 'search_parameters', 'best_flights', 'other_flights', 'price_insights', 'airports'])
2025-07-30 17:54:04,269 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'CDG', 'outbound_date': '2025-08-05', 'return_date': '2025-08-08', 'departure_token': 'WyJDalJJY25CcFNuWjFkblV5VWtWQlExSTBhMmRDUnkwdExTMHRMUzB0TFhCcVltOXRORUZCUVVGQlIybExUVTlCUTFOT2FUQkJFZ3hOVXpFNE5UQjhUVk0zT1RrYUN3alo4UWdRQWhvRFZWTkVPQnh3MmZFSSIsW1siTkJPIiwiMjAyNS0wOC0wNSIsIkNBSSIsbnVsbCwiTVMiLCIxODUwIl0sWyJDQUkiLCIyMDI1LTA4LTA1IiwiQ0RHIixudWxsLCJNUyIsIjc5OSJdXV0=', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 17:54:04,548 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'CDG', 'outbound_date': '2025-08-05', 'return_date': '2025-08-08', 'departure_token': 'WyJDalJJY25CcFNuWjFkblV5VWtWQlExSTBhMmRDUnkwdExTMHRMUzB0TFhCcVltOXRORUZCUVVGQlIybExUVTlCUTFOT2FUQkJFZ3BDUVRZMGZFSkJNekEyR2dzSS9wa0pFQUlhQTFWVFJEZ2NjUDZaQ1E9PSIsW1siTkJPIiwiMjAyNS0wOC0wNSIsIkxIUiIsbnVsbCwiQkEiLCI2NCJdLFsiTEhSIiwiMjAyNS0wOC0wNiIsIkNERyIsbnVsbCwiQkEiLCIzMDYiXV1d', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
2025-07-30 17:54:04,779 - INFO - Calling SERP API for return with params: {'engine': 'google_flights', 'departure_id': 'NBO', 'arrival_id': 'CDG', 'outbound_date': '2025-08-05', 'return_date': '2025-08-08', 'departure_token': 'WyJDalJJY25CcFNuWjFkblV5VWtWQlExSTBhMmRDUnkwdExTMHRMUzB0TFhCcVltOXRORUZCUVVGQlIybExUVTlCUTFOT2FUQkJFZ1ZMVVRFeE1ob0xDTFArQ1JBQ0dnTlZVMFE0SEhDei9naz0iLFtbIk5CTyIsIjIwMjUtMDgtMDUiLCJDREciLG51bGwsIktRIiwiMTEyIl1dXQ==', 'hl': 'en', 'currency': 'USD', 'adults': 1, 'api_key': '7c9c1ecb32412c258bf453fed3f94f369c204ff4ffd0216ace9cf927cefafac3'}
